snippet bli "bytedance logs info" b
logs.CtxInfo(${1:ctx}, $2)
endsnippet

snippet ble "bytedance logs error" b
logs.CtxError(${1:ctx}, $2)
endsnippet

snippet blw "bytedance logs warn" b
logs.CtxWarn(${1:ctx}, $2)
endsnippet

snippet ctx= "context.Background()" b
ctx := context.Background()
endsnippet


snippet init "init func" b
func init() {
	$1
}
endsnippet

snippet err "err log" b
if err != nil {
	logs.CtxError(ctx, "`!v cfi#format("%s", "")` --> `!p
if not snip.c:
	no, _ =vim.current.window.cursor
i = 1
vim.current.window.cursor = (no-i, 0)
line=vim.current.line
while "err" not in line:
	i+=1
	vim.current.window.cursor = (no-i, 0)
	snip.rv=line+snip.rv
	line=vim.current.line
snip.rv=line+snip.rv
snip.rv=snip.rv.strip().replace("\"", "\\\"").replace(" ", "").replace("\t", "").replace("\n","")
	` , err=%v", err)
	return err
}
endsnippet


snippet warn "warn log" b
if err != nil {
	logs.CtxWarn(ctx, "`!v cfi#format("%s", "")` --> `!v getline(line('.')-3)` , err=%v", err)
}
endsnippet

snippet errt "err fatal" b
if err != nil {
	t.Fatal(err)
}
endsnippet

snippet lf "logs.Printf" b
log.Printf("$1=%+v", $1)
endsnippet


snippet cst "convert ts to cst string" b
var cstSh, _ = time.LoadLocation("Asia/Shanghai")
cstTime:= time.Unix(${1: ts}, 0).In(cstSh).Format("2006-01-02_15:04:05")
endsnippet

snippet info "info log" b
logs.CtxInfo(ctx, "[`!v cfi#format("%s", "")`] $1=%+v", $1)
endsnippet
