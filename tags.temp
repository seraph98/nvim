!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/data00/home/yangfeilong.beyond/.config/nvim/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	/c0b04ae1/
'isIncomplete	plugged/nvim-cmp/lua/cmp/source_spec.lua	/^    it('isIncomplete=true', function()$/;"	f
1. `<Plug>` mappings (interactive mode)	plugged/vim-easy-align/README.md	/^#### 1. `<Plug>` mappings (interactive mode)$/;"	t	subsection:vim-easy-align ![travis-ci](https://travis-ci.org/junegunn/vim-easy-align.svg?branch=master)""Usage""Flow of execution
2. Using `:EasyAlign` command	plugged/vim-easy-align/README.md	/^#### 2. Using `:EasyAlign` command$/;"	t	subsection:vim-easy-align ![travis-ci](https://travis-ci.org/junegunn/vim-easy-align.svg?branch=master)""Usage""Flow of execution
2.1.17	plugged/nerdcommenter/CHANGELOG.md	/^### 2.1.17$/;"	S	chapter:Changelog
2.1.18	plugged/nerdcommenter/CHANGELOG.md	/^### 2.1.18$/;"	S	chapter:Changelog
2.2.0	plugged/nerdcommenter/CHANGELOG.md	/^### 2.2.0$/;"	S	chapter:Changelog
2.2.1	plugged/nerdcommenter/CHANGELOG.md	/^### 2.2.1$/;"	S	chapter:Changelog
2.2.2	plugged/nerdcommenter/CHANGELOG.md	/^### 2.2.2$/;"	S	chapter:Changelog
2.3.0	plugged/nerdcommenter/CHANGELOG.md	/^### 2.3.0$/;"	S	chapter:Changelog
2.4.0	plugged/nerdcommenter/CHANGELOG.md	/^### 2.4.0$/;"	S	chapter:Changelog
2.5.0	plugged/nerdcommenter/CHANGELOG.md	/^### 2.5.0$/;"	S	chapter:Changelog
2.5.1	plugged/nerdcommenter/CHANGELOG.md	/^### 2.5.1$/;"	S	chapter:Changelog
2.5.2	plugged/nerdcommenter/CHANGELOG.md	/^### 2.5.2$/;"	S	chapter:Changelog
3.0.0	plugged/nerdtree/CHANGELOG.md	/^#### 3.0.0$/;"	t	chapter:NERDTree Change Log
3.0.1	plugged/nerdtree/CHANGELOG.md	/^#### 3.0.1$/;"	t	chapter:NERDTree Change Log
3.1.0	plugged/nerdtree/CHANGELOG.md	/^#### 3.1.0$/;"	t	chapter:NERDTree Change Log
3.1.1	plugged/nerdtree/CHANGELOG.md	/^#### 3.1.1$/;"	t	chapter:NERDTree Change Log
4.0.0	plugged/nerdtree/CHANGELOG.md	/^#### 4.0.0$/;"	t	chapter:NERDTree Change Log
4.1.0	plugged/nerdtree/CHANGELOG.md	/^#### 4.1.0$/;"	t	chapter:NERDTree Change Log
4.2.0	plugged/nerdtree/CHANGELOG.md	/^#### 4.2.0$/;"	t	chapter:NERDTree Change Log
5.0.0	plugged/nerdtree/CHANGELOG.md	/^#### 5.0.0$/;"	t	chapter:NERDTree Change Log
5.1	plugged/nerdtree/CHANGELOG.md	/^#### 5.1$/;"	t	chapter:NERDTree Change Log
5.2	plugged/nerdtree/CHANGELOG.md	/^#### 5.2$/;"	t	chapter:NERDTree Change Log
5.3	plugged/nerdtree/CHANGELOG.md	/^#### 5.3$/;"	t	chapter:NERDTree Change Log
6.0	plugged/nerdtree/CHANGELOG.md	/^#### 6.0$/;"	t	chapter:NERDTree Change Log
6.1	plugged/nerdtree/CHANGELOG.md	/^#### 6.1$/;"	t	chapter:NERDTree Change Log
6.10	plugged/nerdtree/CHANGELOG.md	/^#### 6.10$/;"	t	chapter:NERDTree Change Log
6.2	plugged/nerdtree/CHANGELOG.md	/^#### 6.2$/;"	t	chapter:NERDTree Change Log
6.3	plugged/nerdtree/CHANGELOG.md	/^#### 6.3$/;"	t	chapter:NERDTree Change Log
6.4	plugged/nerdtree/CHANGELOG.md	/^#### 6.4$/;"	t	chapter:NERDTree Change Log
6.5	plugged/nerdtree/CHANGELOG.md	/^#### 6.5$/;"	t	chapter:NERDTree Change Log
6.6	plugged/nerdtree/CHANGELOG.md	/^#### 6.6$/;"	t	chapter:NERDTree Change Log
6.7	plugged/nerdtree/CHANGELOG.md	/^#### 6.7$/;"	t	chapter:NERDTree Change Log
6.8	plugged/nerdtree/CHANGELOG.md	/^#### 6.8$/;"	t	chapter:NERDTree Change Log
6.9	plugged/nerdtree/CHANGELOG.md	/^#### 6.9$/;"	t	chapter:NERDTree Change Log
:EasyAlign command	plugged/vim-easy-align/README.md	/^### :EasyAlign command$/;"	S	section:vim-easy-align ![travis-ci](https://travis-ci.org/junegunn/vim-easy-align.svg?branch=master)""Usage
<BS>	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    snoremap <silent> <BS> <c-g>"_c$/;"	m
<C-h>	init.vim	/^nnoremap <C-h> :call ExpandLeft()<CR>$/;"	m
<C-j>	init.vim	/^nnoremap <C-j> :call ExpandDown()<CR>$/;"	m
<C-k>	init.vim	/^nnoremap <C-k> :call ExpandUp()<CR>$/;"	m
<C-l>	init.vim	/^nnoremap <C-l> :call ExpandRight()<CR>$/;"	m
<C-m>	init.vim	/^nnoremap <C-m> :cp<CR>$/;"	m
<C-n>	init.vim	/^nnoremap <C-n> :cn<CR>$/;"	m
<C-s>	init.vim	/^nnoremap <C-s> :CtrlSF $/;"	m
<DEL>	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    snoremap <silent> <DEL> <c-g>"_c$/;"	m
<Leader>a	init.vim	/^nnoremap <Leader>a :cclose<CR>$/;"	m
<Leader>debug	init.vim	/^nmap <Leader>debug :call QuickDebug()<CR>$/;"	m
<Leader>f	init.vim	/^nnoremap <Leader>f  :NERDTreeFind<CR>$/;"	m
<Leader>l	init.vim	/^nnoremap <Leader>l  :NERDTreeToggle<CR>$/;"	m
<Leader>r	init.vim	/^nnoremap <Leader>r :TagbarToggle<CR>$/;"	m
<Leader>run	init.vim	/^nmap <Leader>run :call QuickRun()<CR>$/;"	m
<Leader>s	init.vim	/^nnoremap <Leader>s :CtrlSFToggle<CR>$/;"	m
<Leader>test	init.vim	/^nmap <Leader>test :call QuickTest()<CR>$/;"	m
<Plug>(EasyAlign)	plugged/vim-easy-align/plugin/easy_align.vim	/^nnoremap <silent> <Plug>(EasyAlign) :set opfunc=<SID>easy_align_op<Enter>g@$/;"	m
<Plug>(EasyAlign)	plugged/vim-easy-align/plugin/easy_align.vim	/^vnoremap <silent> <Plug>(EasyAlign) :<C-U>call <SID>easy_align_op(visualmode(), 1)<Enter>$/;"	m
<Plug>(EasyAlignOperator)	plugged/vim-easy-align/plugin/easy_align.vim	/^nnoremap <silent> <Plug>(EasyAlignOperator) :set opfunc=<SID>easy_align_op<Enter>g@$/;"	m
<Plug>(EasyAlignRepeat)	plugged/vim-easy-align/plugin/easy_align.vim	/^nnoremap <silent> <Plug>(EasyAlignRepeat) :call <SID>easy_align_repeat()<Enter>$/;"	m
<Plug>(EasyAlignRepeat)	plugged/vim-easy-align/plugin/easy_align.vim	/^vnoremap <silent> <Plug>(EasyAlignRepeat) :<C-U>call <SID>repeat_in_visual()<Enter>$/;"	m
<Plug>(LiveEasyAlign)	plugged/vim-easy-align/plugin/easy_align.vim	/^nnoremap <silent> <Plug>(LiveEasyAlign) :set opfunc=<SID>live_easy_align_op<Enter>g@$/;"	m
<Plug>(LiveEasyAlign)	plugged/vim-easy-align/plugin/easy_align.vim	/^vnoremap <silent> <Plug>(LiveEasyAlign) :<C-U>call <SID>live_easy_align_op(visualmode(), 1)<Ente/;"	m
<Plug>(SmoothieBackwards)	plugged/vim-smoothie/plugin/smoothie.vim	/^  nnoremap <silent> <Plug>(SmoothieBackwards) :<C-U>call smoothie#backwards()           <CR>$/;"	m
<Plug>(SmoothieBackwards)	plugged/vim-smoothie/plugin/smoothie.vim	/^  noremap <silent> <Plug>(SmoothieBackwards) <cmd>call smoothie#backwards()           <CR>$/;"	m
<Plug>(SmoothieDownwards)	plugged/vim-smoothie/plugin/smoothie.vim	/^  nnoremap <silent> <Plug>(SmoothieDownwards) :<C-U>call smoothie#downwards()           <CR>$/;"	m
<Plug>(SmoothieDownwards)	plugged/vim-smoothie/plugin/smoothie.vim	/^  noremap <silent> <Plug>(SmoothieDownwards) <cmd>call smoothie#downwards()           <CR>$/;"	m
<Plug>(SmoothieForwards)	plugged/vim-smoothie/plugin/smoothie.vim	/^  nnoremap <silent> <Plug>(SmoothieForwards)  :<C-U>call smoothie#forwards()            <CR>$/;"	m
<Plug>(SmoothieForwards)	plugged/vim-smoothie/plugin/smoothie.vim	/^  noremap <silent> <Plug>(SmoothieForwards)  <cmd>call smoothie#forwards()            <CR>$/;"	m
<Plug>(SmoothieUpwards)	plugged/vim-smoothie/plugin/smoothie.vim	/^  nnoremap <silent> <Plug>(SmoothieUpwards)   :<C-U>call smoothie#upwards()             <CR>$/;"	m
<Plug>(SmoothieUpwards)	plugged/vim-smoothie/plugin/smoothie.vim	/^  noremap <silent> <Plug>(SmoothieUpwards)   <cmd>call smoothie#upwards()             <CR>$/;"	m
<Plug>(Smoothie_G)	plugged/vim-smoothie/plugin/smoothie.vim	/^  nnoremap <silent> <Plug>(Smoothie_G)        :<C-U>call smoothie#cursor_movement('G')  <CR>$/;"	m
<Plug>(Smoothie_G)	plugged/vim-smoothie/plugin/smoothie.vim	/^  noremap <silent> <Plug>(Smoothie_G)        <cmd>call smoothie#cursor_movement('G')  <CR>$/;"	m
<Plug>(Smoothie_gg)	plugged/vim-smoothie/plugin/smoothie.vim	/^  nnoremap <silent> <Plug>(Smoothie_gg)       :<C-U>call smoothie#cursor_movement('gg') <CR>$/;"	m
<Plug>(Smoothie_gg)	plugged/vim-smoothie/plugin/smoothie.vim	/^  noremap <silent> <Plug>(Smoothie_gg)       <cmd>call smoothie#cursor_movement('gg') <CR>$/;"	m
<Plug>AutoPairsReturn	plugged/auto-pairs/plugin/auto-pairs.vim	/^imap <script> <Plug>AutoPairsReturn <SID>AutoPairsReturn$/;"	m
<Plug>CtrlSFCCwordExec	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^nnoremap <silent> <expr> <Plug>CtrlSFCCwordExec <SID>SearchCwordCmd('CtrlSF', 1, 1)$/;"	m
<Plug>CtrlSFCCwordPath	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^nnoremap          <expr> <Plug>CtrlSFCCwordPath <SID>SearchCwordCmd('CtrlSF', 1, 0)$/;"	m
<Plug>CtrlSFCwordExec	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^nnoremap <silent> <expr> <Plug>CtrlSFCwordExec  <SID>SearchCwordCmd('CtrlSF', 0, 1)$/;"	m
<Plug>CtrlSFCwordPath	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^nnoremap          <expr> <Plug>CtrlSFCwordPath  <SID>SearchCwordCmd('CtrlSF', 0, 0)$/;"	m
<Plug>CtrlSFPrompt	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^nnoremap                 <Plug>CtrlSFPrompt     :CtrlSF<Space>$/;"	m
<Plug>CtrlSFPwordExec	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^nnoremap <silent> <expr> <Plug>CtrlSFPwordExec  <SID>SearchPwordCmd('CtrlSF', 1)$/;"	m
<Plug>CtrlSFPwordPath	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^nnoremap          <expr> <Plug>CtrlSFPwordPath  <SID>SearchPwordCmd('CtrlSF', 0)$/;"	m
<Plug>CtrlSFQuickfixCCwordExec	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^nnoremap <silent> <expr> <Plug>CtrlSFQuickfixCCwordExec <SID>SearchCwordCmd('CtrlSFQuickfix', 1,/;"	m
<Plug>CtrlSFQuickfixCCwordPath	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^nnoremap          <expr> <Plug>CtrlSFQuickfixCCwordPath <SID>SearchCwordCmd('CtrlSFQuickfix', 1,/;"	m
<Plug>CtrlSFQuickfixCwordExec	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^nnoremap <silent> <expr> <Plug>CtrlSFQuickfixCwordExec  <SID>SearchCwordCmd('CtrlSFQuickfix', 0,/;"	m
<Plug>CtrlSFQuickfixCwordPath	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^nnoremap          <expr> <Plug>CtrlSFQuickfixCwordPath  <SID>SearchCwordCmd('CtrlSFQuickfix', 0,/;"	m
<Plug>CtrlSFQuickfixPrompt	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^nnoremap                 <Plug>CtrlSFQuickfixPrompt     :CtrlSFQuickfix<Space>$/;"	m
<Plug>CtrlSFQuickfixPwordExec	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^nnoremap <silent> <expr> <Plug>CtrlSFQuickfixPwordExec  <SID>SearchPwordCmd('CtrlSFQuickfix', 1)$/;"	m
<Plug>CtrlSFQuickfixPwordPath	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^nnoremap          <expr> <Plug>CtrlSFQuickfixPwordPath  <SID>SearchPwordCmd('CtrlSFQuickfix', 0)$/;"	m
<Plug>CtrlSFQuickfixVwordExec	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^vnoremap <silent> <expr> <Plug>CtrlSFQuickfixVwordExec  <SID>SearchVwordCmd('CtrlSFQuickfix', 1)$/;"	m
<Plug>CtrlSFQuickfixVwordPath	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^vnoremap          <expr> <Plug>CtrlSFQuickfixVwordPath  <SID>SearchVwordCmd('CtrlSFQuickfix', 0)$/;"	m
<Plug>CtrlSFVwordExec	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^vnoremap <silent> <expr> <Plug>CtrlSFVwordExec  <SID>SearchVwordCmd('CtrlSF', 1)$/;"	m
<Plug>CtrlSFVwordPath	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^vnoremap          <expr> <Plug>CtrlSFVwordPath  <SID>SearchVwordCmd('CtrlSF', 0)$/;"	m
<Plug>NERDCommenterAltDelims	plugged/nerdcommenter/plugin/nerdcommenter.vim	/^nnoremap <Plug>NERDCommenterAltDelims :call nerdcommenter#SwitchToAlternativeDelimiters(1)<CR>$/;"	m
<Plug>NERDCommenterInsert	plugged/nerdcommenter/plugin/nerdcommenter.vim	/^inoremap <silent> <Plug>NERDCommenterInsert <Space><BS><Esc>:call nerdcommenter#Comment('i', "in/;"	m
<Plug>NERDTreeFocusToggle	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^noremap <silent> <script> <Plug>NERDTreeFocusToggle  :call <SID>NERDTreeFocusToggle()$/;"	m
<Plug>NERDTreeMirrorOpen	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^noremap <silent> <script> <Plug>NERDTreeMirrorOpen   :call <SID>NERDTreeMirrorOrCreate()$/;"	m
<Plug>NERDTreeMirrorToggle	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^noremap <silent> <script> <Plug>NERDTreeMirrorToggle :call <SID>NERDTreeMirrorToggle()$/;"	m
<Plug>NERDTreeSteppedClose	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^noremap <silent> <script> <Plug>NERDTreeSteppedClose :call <SID>NERDTreeSteppedClose()$/;"	m
<Plug>NERDTreeSteppedOpen	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^noremap <silent> <script> <Plug>NERDTreeSteppedOpen  :call <SID>NERDTreeSteppedOpen()$/;"	m
<Plug>NERDTreeTabsClose	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^noremap <silent> <script> <Plug>NERDTreeTabsClose    :call <SID>NERDTreeCloseAllTabs()$/;"	m
<Plug>NERDTreeTabsFind	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^noremap <silent> <script> <Plug>NERDTreeTabsFind     :call <SID>NERDTreeFindFile()$/;"	m
<Plug>NERDTreeTabsOpen	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^noremap <silent> <script> <Plug>NERDTreeTabsOpen     :call <SID>NERDTreeOpenAllTabs()$/;"	m
<Plug>NERDTreeTabsToggle	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^noremap <silent> <script> <Plug>NERDTreeTabsToggle   :call <SID>NERDTreeToggleAllTabs()$/;"	m
<Plug>OSCYank	plugged/vim-oscyank/plugin/oscyank.vim	/^nnoremap <silent> <expr> <Plug>OSCYank OSCYankOperator('')$/;"	m
<Plug>luasnip-delete-check	plugged/LuaSnip/plugin/luasnip.vim	/^noremap <silent> <Plug>luasnip-delete-check <cmd>lua require'luasnip'.unlink_current_if_deleted(/;"	m
<Plug>luasnip-delete-check	plugged/LuaSnip/plugin/luasnip.vim	/^noremap! <silent> <Plug>luasnip-delete-check <cmd>lua require'luasnip'.unlink_current_if_deleted/;"	m
<Plug>luasnip-expand-or-jump	plugged/LuaSnip/plugin/luasnip.vim	/^inoremap <silent> <Plug>luasnip-expand-or-jump <cmd>lua require'luasnip'.expand_or_jump()<Cr>$/;"	m
<Plug>luasnip-expand-or-jump	plugged/LuaSnip/plugin/luasnip.vim	/^snoremap <silent> <Plug>luasnip-expand-or-jump <cmd>lua require'luasnip'.expand_or_jump()<Cr>$/;"	m
<Plug>luasnip-expand-snippet	plugged/LuaSnip/plugin/luasnip.vim	/^inoremap <silent> <Plug>luasnip-expand-snippet <cmd>lua require'luasnip'.expand()<Cr>$/;"	m
<Plug>luasnip-expand-snippet	plugged/LuaSnip/plugin/luasnip.vim	/^snoremap <silent> <Plug>luasnip-expand-snippet <cmd>lua require'luasnip'.expand()<Cr>$/;"	m
<Plug>luasnip-jump-next	plugged/LuaSnip/plugin/luasnip.vim	/^inoremap <silent> <Plug>luasnip-jump-next <cmd>lua require'luasnip'.jump(1)<Cr>$/;"	m
<Plug>luasnip-jump-next	plugged/LuaSnip/plugin/luasnip.vim	/^snoremap <silent> <Plug>luasnip-jump-next <cmd>lua require'luasnip'.jump(1)<Cr>$/;"	m
<Plug>luasnip-jump-prev	plugged/LuaSnip/plugin/luasnip.vim	/^inoremap <silent> <Plug>luasnip-jump-prev <cmd>lua require'luasnip'.jump(-1)<Cr>$/;"	m
<Plug>luasnip-jump-prev	plugged/LuaSnip/plugin/luasnip.vim	/^snoremap <silent> <Plug>luasnip-jump-prev <cmd>lua require'luasnip'.jump(-1)<Cr>$/;"	m
<Plug>luasnip-next-choice	plugged/LuaSnip/plugin/luasnip.vim	/^inoremap <silent> <Plug>luasnip-next-choice <cmd>lua require'luasnip'.change_choice(1)<Cr>$/;"	m
<Plug>luasnip-next-choice	plugged/LuaSnip/plugin/luasnip.vim	/^snoremap <silent> <Plug>luasnip-next-choice <cmd>lua require'luasnip'.change_choice(1)<Cr>$/;"	m
<Plug>luasnip-prev-choice	plugged/LuaSnip/plugin/luasnip.vim	/^inoremap <silent> <Plug>luasnip-prev-choice <cmd>lua require'luasnip'.change_choice(-1)<Cr>$/;"	m
<Plug>luasnip-prev-choice	plugged/LuaSnip/plugin/luasnip.vim	/^snoremap <silent> <Plug>luasnip-prev-choice <cmd>lua require'luasnip'.change_choice(-1)<Cr>$/;"	m
<SID>:	plugged/vim-fugitive/autoload/fugitive.vim	/^nnoremap <SID>: :<C-U><C-R>=v:count ? v:count : ''<CR>$/;"	m
<SID>AutoPairsReturn	plugged/auto-pairs/plugin/auto-pairs.vim	/^inoremap <silent> <SID>AutoPairsReturn <C-R>=AutoPairsReturn()<CR>$/;"	m
<c-h>	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    snoremap <silent> <c-h> <c-g>"_c$/;"	m
<c-r>	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    snoremap <c-r> <c-g>"_c<c-r>$/;"	m
<leader>a	init.vim	/^xnoremap <leader>a :<C-U> call GetVisualSelection(visualmode())<Cr>$/;"	m
@function.macro	plugged/nvim-treesitter/queries/commonlisp/highlights.scm	/^(defun_keyword) @function.macro$/;"	f
@scope	plugged/nvim-treesitter/queries/commonlisp/locals.scm	/^(defun) @scope$/;"	f
A	plugged/nvim-treesitter/tests/indent/c/enum.c	/^    A = 1,$/;"	e	enum:foo	file:
ALWAYS	plugged/vim-snippets/pythonx/javascript_snippets.py	/^ALWAYS = 'always'$/;"	v
API	plugged/vim-devicons/DEVELOPER.md	/^### API$/;"	S
API Examples	plugged/vim-devicons/DEVELOPER.md	/^#### API Examples$/;"	t	subsection:API
API-REFERENCE	plugged/LuaSnip/DOC.md	/^# API-REFERENCE$/;"	c
ARR_D	plugged/ultisnips/test/constant.py	/^ARR_D = "\\x1bOB"$/;"	v
ARR_L	plugged/ultisnips/test/constant.py	/^ARR_L = "\\x1bOD"$/;"	v
ARR_R	plugged/ultisnips/test/constant.py	/^ARR_R = "\\x1bOC"$/;"	v
ARR_U	plugged/ultisnips/test/constant.py	/^ARR_U = "\\x1bOA"$/;"	v
Acknowledgments	plugged/vim-devicons/README.md	/^Acknowledgments$/;"	s
Add Snippets	plugged/LuaSnip/README.md	/^## Add Snippets$/;"	s	chapter:Setup
AddFunc_Opt	plugged/ultisnips/test/test_UltiSnipFunc.py	/^class AddFunc_Opt(_AddFuncBase):$/;"	c
AddFunc_Simple	plugged/ultisnips/test/test_UltiSnipFunc.py	/^class AddFunc_Simple(_AddFuncBase):$/;"	c
AddNewSnippetSource	plugged/ultisnips/test/test_UltiSnipFunc.py	/^class AddNewSnippetSource(_VimTest):$/;"	c
AddedSnippetsSource	plugged/ultisnips/pythonx/UltiSnips/snippet/source/added.py	/^class AddedSnippetsSource(SnippetSource):$/;"	c
Adding modules	plugged/nvim-treesitter/README.md	/^## Adding modules$/;"	s	chapter:Advanced setup
Adding new modules	plugged/nvim-treesitter/CONTRIBUTING.md	/^## Adding new modules$/;"	s	chapter:Contributing to `nvim-treesitter`
Adding parsers	plugged/nvim-treesitter/README.md	/^## Adding parsers$/;"	s	chapter:Advanced setup
Adding queries	plugged/nvim-treesitter/README.md	/^## Adding queries$/;"	s	chapter:Advanced setup
Adding support for a new language	plugged/vim-one/CONTRIBUTING.md	/^## Adding support for a new language$/;"	s
Adjusting indentation	plugged/vim-easy-align/README.md	/^### Adjusting indentation$/;"	S	section:vim-easy-align ![travis-ci](https://travis-ci.org/junegunn/vim-easy-align.svg?branch=master)""Alignment options
Advanced examples and use cases	plugged/vim-easy-align/README.md	/^Advanced examples and use cases$/;"	s	chapter:vim-easy-align ![travis-ci](https://travis-ci.org/junegunn/vim-easy-align.svg?branch=master)
Advanced setup	plugged/nvim-treesitter/README.md	/^# Advanced setup$/;"	c
Advanced usage	plugged/nvim-lspconfig/ADVANCED_README.md	/^## Advanced usage$/;"	s
AirlineWebDevIcons	plugged/vim-devicons/plugin/webdevicons.vim	/^function! AirlineWebDevIcons(...)$/;"	f
Aliases for snippets	plugged/ultisnips/doc/examples/snippets-aliasing/README.md	/^# Aliases for snippets$/;"	c
Aligning C-style variable definition	plugged/vim-easy-align/EXAMPLES.md	/^Aligning C-style variable definition$/;"	s	chapter:easy-align examples
Aligning delimiters of different lengths	plugged/vim-easy-align/README.md	/^### Aligning delimiters of different lengths$/;"	S	section:vim-easy-align ![travis-ci](https://travis-ci.org/junegunn/vim-easy-align.svg?branch=master)""Alignment options
Aligning in-line comments	plugged/vim-easy-align/EXAMPLES.md	/^Aligning in-line comments$/;"	s	chapter:easy-align examples
Aligning table cells	plugged/vim-easy-align/README.md	/^### Aligning table cells$/;"	S	section:vim-easy-align ![travis-ci](https://travis-ci.org/junegunn/vim-easy-align.svg?branch=master)""Demo
Alignment around =	plugged/vim-easy-align/EXAMPLES.md	/^Alignment around =$/;"	s	chapter:easy-align examples
Alignment around whitespaces	plugged/vim-easy-align/EXAMPLES.md	/^Alignment around whitespaces$/;"	s	chapter:easy-align examples
Alignment options	plugged/vim-easy-align/README.md	/^Alignment options$/;"	s	chapter:vim-easy-align ![travis-ci](https://travis-ci.org/junegunn/vim-easy-align.svg?branch=master)
Alignment options in interactive mode	plugged/vim-easy-align/README.md	/^#### Alignment options in interactive mode$/;"	t	subsection:vim-easy-align ![travis-ci](https://travis-ci.org/junegunn/vim-easy-align.svg?branch=master)""Usage""Interactive mode
Alignments over multiple occurrences of delimiters	plugged/vim-easy-align/README.md	/^### Alignments over multiple occurrences of delimiters$/;"	S	section:vim-easy-align ![travis-ci](https://travis-ci.org/junegunn/vim-easy-align.svg?branch=master)""Alignment options
Alternatives, a.k.a. why create yet another plugin	plugged/vim-smoothie/README.md	/^Alternatives, a.k.a. why create yet another plugin$/;"	s	chapter:vim-smoothie: Smooth scrolling for Vim done right🥤
Anon_NoTrigger_AfterSpace	plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_NoTrigger_AfterSpace(_AnonBase):$/;"	c
Anon_NoTrigger_BeginningOfLine	plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_NoTrigger_BeginningOfLine(_AnonBase):$/;"	c
Anon_NoTrigger_FirstCharOfLine	plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_NoTrigger_FirstCharOfLine(_AnonBase):$/;"	c
Anon_NoTrigger_Multi	plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_NoTrigger_Multi(_AnonBase):$/;"	c
Anon_NoTrigger_Simple	plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_NoTrigger_Simple(_AnonBase):$/;"	c
Anon_Trigger_Multi	plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_Trigger_Multi(_AnonBase):$/;"	c
Anon_Trigger_Opts	plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_Trigger_Opts(_AnonBase):$/;"	c
Anon_Trigger_Simple	plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_Trigger_Simple(_AnonBase):$/;"	c
Anon_Trigger_Twice	plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_Trigger_Twice(_AnonBase):$/;"	c
Any background context you can provide?	plugged/vim-devicons/.github/PULL_REQUEST_TEMPLATE.md	/^#### Any background context you can provide?$/;"	t
Args	plugged/LuaSnip/lua/luasnip/extras/_lambda.lua	/^function lambda.Args(...)$/;"	f	unknown:lambda
Arguments	plugged/ctrlsf.vim/README.md	/^## Arguments$/;"	s	chapter:ctrlsf.vim
Asynchronous Search	plugged/ctrlsf.vim/README.md	/^### Asynchronous Search$/;"	S	chapter:ctrlsf.vim
Attribution	plugged/vim-devicons/CODE_OF_CONDUCT.md	/^## Attribution$/;"	s	chapter:Contributor Covenant Code of Conduct
Author	plugged/vim-easy-align/README.md	/^Author$/;"	s	chapter:vim-easy-align ![travis-ci](https://travis-ci.org/junegunn/vim-easy-align.svg?branch=master)
Author's Instructions	plugged/nerdtree/.github/PULL_REQUEST_TEMPLATE.md	/^#### Author's Instructions$/;"	t	subsection:New Version Info
Auto Pairs	plugged/auto-pairs/README.md	/^Auto Pairs$/;"	c
AutoPairsBackInsert	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsBackInsert()$/;"	f
AutoPairsDefaultPairs	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsDefaultPairs()$/;"	f
AutoPairsDefine	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsDefine(pairs, ...)$/;"	f
AutoPairsDelete	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsDelete()$/;"	f
AutoPairsFastWrap	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsFastWrap()$/;"	f
AutoPairsInit	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsInit()$/;"	f
AutoPairsInsert	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsInsert(key)$/;"	f
AutoPairsJump	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsJump()$/;"	f
AutoPairsMap	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsMap(key)$/;"	f
AutoPairsMoveCharacter	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsMoveCharacter(key)$/;"	f
AutoPairsReturn	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsReturn()$/;"	f
AutoPairsSpace	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsSpace()$/;"	f
AutoPairsToggle	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsToggle()$/;"	f
AutoPairsTryInit	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsTryInit()$/;"	f
Autocmds	plugged/nvim-cmp/README.md	/^Autocmds$/;"	c
Autocommands	plugged/ultisnips/test/test_Autocommands.py	/^class Autocommands(_VimTest):$/;"	c
Autojump from tabstop when it's empty	plugged/ultisnips/doc/examples/autojump-if-empty/README.md	/^# Autojump from tabstop when it's empty$/;"	c
Automatically launching language servers	plugged/nvim-lspconfig/README.md	/^## Automatically launching language servers$/;"	s	chapter:LSP overview
Autotrigger_CanExpandOnTriggerWithLengthMoreThanOne	plugged/ultisnips/test/test_Autotrigger.py	/^class Autotrigger_CanExpandOnTriggerWithLengthMoreThanOne(_VimTest):$/;"	c
Autotrigger_CanMatchContext	plugged/ultisnips/test/test_Autotrigger.py	/^class Autotrigger_CanMatchContext(_VimTest):$/;"	c
Autotrigger_CanMatchPreviouslySelectedPlaceholder	plugged/ultisnips/test/test_Autotrigger.py	/^class Autotrigger_CanMatchPreviouslySelectedPlaceholder(_VimTest):$/;"	c
Autotrigger_CanMatchSimpleTrigger	plugged/ultisnips/test/test_Autotrigger.py	/^class Autotrigger_CanMatchSimpleTrigger(_VimTest):$/;"	c
Autotrigger_WillProduceNoExceptionWithVimLowerThan214	plugged/ultisnips/test/test_Autotrigger.py	/^class Autotrigger_WillProduceNoExceptionWithVimLowerThan214(_VimTest):$/;"	c
Available modules	plugged/nvim-treesitter/README.md	/^# Available modules$/;"	c
B	plugged/nvim-treesitter/tests/indent/c/enum.c	/^    B,$/;"	e	enum:foo	file:
BACKWARD	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    BACKWARD = 2$/;"	v	class:JumpDirection
BLOCK_COMMENT_END	plugged/LuaSnip/lua/luasnip/util/environ.lua	/^function lazy_vars.BLOCK_COMMENT_END()$/;"	f	unknown:lazy_vars
BLOCK_COMMENT_START	plugged/LuaSnip/lua/luasnip/util/environ.lua	/^function lazy_vars.BLOCK_COMMENT_START()$/;"	f	unknown:lazy_vars
BRACES	plugged/ultisnips/test/vim_interface.py	/^    BRACES = re.compile("([}{])")$/;"	v	class:VimInterfaceWindows
BS	plugged/ultisnips/test/constant.py	/^BS = "\\x7f"$/;"	v
BUILD_INVERTED_INDEX	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set BUILD_INVERTED_INDEX=1$/;"	v
BUILD_INVERTED_INDEX	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^set BUILD_INVERTED_INDEX=0$/;"	v
Backspace_TabStop_NotZero	plugged/ultisnips/test/test_Editing.py	/^class Backspace_TabStop_NotZero(_VimTest):$/;"	c
Backspace_TabStop_Zero	plugged/ultisnips/test/test_Editing.py	/^class Backspace_TabStop_Zero(_VimTest):$/;"	c
Bar	plugged/nvim-treesitter/tests/indent/cpp/class.cpp	/^    class Bar {$/;"	c	class:Foo	file:
Bar	plugged/nvim-treesitter/tests/indent/rust/trait.rs	/^trait Bar {$/;"	i
Basic usage	plugged/vim-oscyank/README.md	/^## Basic usage$/;"	s	chapter:vim-oscyank
Before submitting your issue（请在提交 issue 前一定要检查以下项目！）	plugged/ctrlsf.vim/.github/ISSUE_TEMPLATE.md	/^## Before submitting your issue（请在提交 issue 前一定要检查以下项目！）$/;"	s
Before you add a feature	plugged/ultisnips/CONTRIBUTING.md	/^## Before you add a feature$/;"	s	chapter:Contributing to UltiSnips
Bookmark	plugged/nerdtree/lib/nerdtree/creator.vim	/^    command! -buffer -nargs=? Bookmark :call nerdtree#ui_glue#bookmarkNode('<args>')$/;"	c
BookmarkToRoot	plugged/nerdtree/lib/nerdtree/creator.vim	/^    command! -buffer -complete=customlist,nerdtree#completeBookmarks -nargs=+ BookmarkToRoot cal/;"	c
Buffer Level Pairs Setting	plugged/auto-pairs/README.md	/^Buffer Level Pairs Setting$/;"	s	chapter:Auto Pairs
Bug1251994	plugged/ultisnips/test/test_Fixes.py	/^class Bug1251994(_VimTest):$/;"	c
Built-in commands	plugged/nvim-lspconfig/README.md	/^## Built-in commands$/;"	s	chapter:LSP overview
C	plugged/LuaSnip/lua/luasnip/nodes/choiceNode.lua	/^local function C(pos, choices)$/;"	f
C	plugged/nvim-treesitter/tests/indent/c/enum.c	/^    C,$/;"	e	enum:foo	file:
CHANGELOG	plugged/vim-devicons/CHANGELOG.md	/^CHANGELOG$/;"	c
CHECK	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    CHECK = re.compile(r"^\\$\\d+")$/;"	v	class:MirrorToken
CHECK	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    CHECK = re.compile(r"^\\${VISUAL[:}\/]")$/;"	v	class:VisualToken
CHECK	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    CHECK = re.compile(r"^\\${\\d+[:}]")$/;"	v	class:TabStopToken
CHECK	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    CHECK = re.compile(r"^\\${\\d+\\\/")$/;"	v	class:TransformationToken
CHECK	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    CHECK = re.compile(r"^\\${\\d+\\|")$/;"	v	class:ChoicesToken
CHECK	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    CHECK = re.compile(r"^`!p\\s")$/;"	v	class:PythonCodeToken
CHECK	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    CHECK = re.compile(r"^`!v\\s")$/;"	v	class:VimLCodeToken
CHOICENODE	plugged/LuaSnip/DOC.md	/^# CHOICENODE$/;"	c
CLEANUP	plugged/LuaSnip/DOC.md	/^# CLEANUP$/;"	c
CLIPBOARD	plugged/LuaSnip/lua/luasnip/util/environ.lua	/^function lazy_vars.CLIPBOARD() -- The contents of your clipboard$/;"	f	unknown:lazy_vars
COMPLETION_OPTIONS	plugged/ultisnips/test/test_Completion.py	/^COMPLETION_OPTIONS = "completion1\\ncompletion2\\n"$/;"	v
COMPL_ACCEPT	plugged/ultisnips/test/constant.py	/^COMPL_ACCEPT = chr(25)$/;"	v
COMPL_KW	plugged/ultisnips/test/constant.py	/^COMPL_KW = chr(24) + chr(14)$/;"	v
CONSTANT	plugged/neodark.vim/test/test.rb	/^    CONSTANT = \/^[0-9]+ regex awesomes$\/$/;"	C	class:VimColors.RubyExample
CPH	plugged/LuaSnip/lua/luasnip/extras/_lambda.lua	/^local function CPH(idx)$/;"	f
CSCOPE_ARGS	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set CSCOPE_ARGS=%CSCOPE_ARGS% -q$/;"	v
CSCOPE_ARGS	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^set CSCOPE_ARGS=$/;"	v
CSCOPE_ARGS	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^set CSCOPE_ARGS=%CSCOPE_ARGS% -i %DB_FILE%.files$/;"	v
CSCOPE_EXE	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set CSCOPE_EXE=%~2$/;"	v
CSCOPE_EXE	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^set CSCOPE_EXE=cscope$/;"	v
CTAGS_ARGS	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^        set CTAGS_ARGS=%CTAGS_ARGS% "%PROJECT_ROOT%"$/;"	v
CTAGS_ARGS	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^        set CTAGS_ARGS=%CTAGS_ARGS% --append "%UPDATED_SOURCE%"$/;"	v
CTAGS_ARGS	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^        set CTAGS_ARGS=%CTAGS_ARGS% -L %TAGS_FILE%.files$/;"	v
CTAGS_ARGS	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_ARGS=%CTAGS_ARGS% %~2$/;"	v
CTAGS_ARGS	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_ARGS=%CTAGS_ARGS% --exclude=%2$/;"	v
CTAGS_ARGS	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_ARGS=%CTAGS_ARGS% --options=%2$/;"	v
CTAGS_ARGS	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set CTAGS_ARGS=$/;"	v
CTAGS_EXE	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_EXE=%~2$/;"	v
CTAGS_EXE	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set CTAGS_EXE=ctags$/;"	v
CURRENT_DATE	plugged/LuaSnip/lua/luasnip/util/environ.lua	/^function lazy_vars.CURRENT_DATE()$/;"	f	unknown:lazy_vars
CURRENT_DAY_NAME	plugged/LuaSnip/lua/luasnip/util/environ.lua	/^function lazy_vars.CURRENT_DAY_NAME()$/;"	f	unknown:lazy_vars
CURRENT_DAY_NAME_SHORT	plugged/LuaSnip/lua/luasnip/util/environ.lua	/^function lazy_vars.CURRENT_DAY_NAME_SHORT()$/;"	f	unknown:lazy_vars
CURRENT_HOUR	plugged/LuaSnip/lua/luasnip/util/environ.lua	/^function lazy_vars.CURRENT_HOUR()$/;"	f	unknown:lazy_vars
CURRENT_MINUTE	plugged/LuaSnip/lua/luasnip/util/environ.lua	/^function lazy_vars.CURRENT_MINUTE()$/;"	f	unknown:lazy_vars
CURRENT_MONTH	plugged/LuaSnip/lua/luasnip/util/environ.lua	/^function lazy_vars.CURRENT_MONTH()$/;"	f	unknown:lazy_vars
CURRENT_MONTH_NAME	plugged/LuaSnip/lua/luasnip/util/environ.lua	/^function lazy_vars.CURRENT_MONTH_NAME()$/;"	f	unknown:lazy_vars
CURRENT_MONTH_NAME_SHORT	plugged/LuaSnip/lua/luasnip/util/environ.lua	/^function lazy_vars.CURRENT_MONTH_NAME_SHORT()$/;"	f	unknown:lazy_vars
CURRENT_SECOND	plugged/LuaSnip/lua/luasnip/util/environ.lua	/^function lazy_vars.CURRENT_SECOND()$/;"	f	unknown:lazy_vars
CURRENT_SECONDS_UNIX	plugged/LuaSnip/lua/luasnip/util/environ.lua	/^function lazy_vars.CURRENT_SECONDS_UNIX()$/;"	f	unknown:lazy_vars
CURRENT_YEAR	plugged/LuaSnip/lua/luasnip/util/environ.lua	/^function lazy_vars.CURRENT_YEAR()$/;"	f	unknown:lazy_vars
CURRENT_YEAR_SHORT	plugged/LuaSnip/lua/luasnip/util/environ.lua	/^function lazy_vars.CURRENT_YEAR_SHORT()$/;"	f	unknown:lazy_vars
Can I have the same NERDTree on every tab automatically?	plugged/nerdtree/README.markdown	/^### Can I have the same NERDTree on every tab automatically?$/;"	S	section:The NERDTree [![Vint](https://github.com/preservim/nerdtree/workflows/Vint/badge.svg)](https://github.com/preservim/nerdtree/actions?workflow=Vint)""Frequently Asked Questions
Can NERDTree access remote files via scp or ftp?	plugged/nerdtree/README.markdown	/^### Can NERDTree access remote files via scp or ftp?$/;"	S	section:The NERDTree [![Vint](https://github.com/preservim/nerdtree/workflows/Vint/badge.svg)](https://github.com/preservim/nerdtree/actions?workflow=Vint)""Frequently Asked Questions
CfiDisable	plugged/current-func-info.vim/plugin/cfi.vim	/^command! CfiDisable let g:cfi_disable = !!1$/;"	c
CfiEnable	plugged/current-func-info.vim/plugin/cfi.vim	/^command! CfiEnable  let g:cfi_disable = !!0$/;"	c
Changelog	plugged/nerdcommenter/CHANGELOG.md	/^# Changelog$/;"	c
Choices	plugged/ultisnips/pythonx/UltiSnips/text_objects/choices.py	/^class Choices(TabStop):$/;"	c
ChoicesToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class ChoicesToken(Token):$/;"	c
Choices_AsNestedElement_CanBeTabbedInto	plugged/ultisnips/test/test_Choices.py	/^class Choices_AsNestedElement_CanBeTabbedInto(_VimTest):$/;"	c
Choices_AsNestedElement_CanBeTabbedThrough	plugged/ultisnips/test/test_Choices.py	/^class Choices_AsNestedElement_CanBeTabbedThrough(_VimTest):$/;"	c
Choices_AsNestedElement_ShallNotTakeActionIfParentInput	plugged/ultisnips/test/test_Choices.py	/^class Choices_AsNestedElement_ShallNotTakeActionIfParentInput(_VimTest):$/;"	c
Choices_AsNestedElement_ShouldOverwriteDefaultText	plugged/ultisnips/test/test_Choices.py	/^class Choices_AsNestedElement_ShouldOverwriteDefaultText(_VimTest):$/;"	c
Choices_CanEscapeCommaInsideChoiceItem	plugged/ultisnips/test/test_Choices.py	/^class Choices_CanEscapeCommaInsideChoiceItem(_VimTest):$/;"	c
Choices_CanTakeNonAsciiCharacters	plugged/ultisnips/test/test_Choices.py	/^class Choices_CanTakeNonAsciiCharacters(_VimTest):$/;"	c
Choices_EmptyChoiceWillBeDiscarded	plugged/ultisnips/test/test_Choices.py	/^class Choices_EmptyChoiceWillBeDiscarded(_VimTest):$/;"	c
Choices_ExpectCorrectResult	plugged/ultisnips/test/test_Choices.py	/^class Choices_ExpectCorrectResult(_VimTest):$/;"	c
Choices_MoreThan9Candidates_ShouldTerminateWithSpace	plugged/ultisnips/test/test_Choices.py	/^class Choices_MoreThan9Candidates_ShouldTerminateWithSpace(_VimTest):$/;"	c
Choices_MoreThan9Candidates_ShouldWaitForInputs	plugged/ultisnips/test/test_Choices.py	/^class Choices_MoreThan9Candidates_ShouldWaitForInputs(_VimTest):$/;"	c
Choices_ShouldThrowErrorWithZeroTabstop	plugged/ultisnips/test/test_Choices.py	/^class Choices_ShouldThrowErrorWithZeroTabstop(_VimTest):$/;"	c
Choices_WilNotMessWithTabstopsAfterIt	plugged/ultisnips/test/test_Choices.py	/^class Choices_WilNotMessWithTabstopsAfterIt(_VimTest):$/;"	c
Choices_WillAbandonSelection_If_CharTyped	plugged/ultisnips/test/test_Choices.py	/^class Choices_WillAbandonSelection_If_CharTyped(_VimTest):$/;"	c
Choices_WillAbandonSelection_If_InputIsGreaterThanMaxSelectionIndex	plugged/ultisnips/test/test_Choices.py	/^class Choices_WillAbandonSelection_If_InputIsGreaterThanMaxSelectionIndex(_VimTest):$/;"	c
Choices_WillBeExpandedToInlineSelection	plugged/ultisnips/test/test_Choices.py	/^class Choices_WillBeExpandedToInlineSelection(_VimTest):$/;"	c
Choices_WillNotExpand_If_ChoiceListIsEmpty	plugged/ultisnips/test/test_Choices.py	/^class Choices_WillNotExpand_If_ChoiceListIsEmpty(_VimTest):$/;"	c
Choices_With_Mirror	plugged/ultisnips/test/test_Choices.py	/^class Choices_With_Mirror(_VimTest):$/;"	c
Choices_With_Mirror_ContinueMirroring_EvenAfterSelectionDone	plugged/ultisnips/test/test_Choices.py	/^class Choices_With_Mirror_ContinueMirroring_EvenAfterSelectionDone(_VimTest):$/;"	c
CleanUp	plugged/vim-gutentags/plat/unix/update_scopedb.sh	/^CleanUp() {$/;"	f
ClearAllBookmarks	plugged/nerdtree/lib/nerdtree/creator.vim	/^    command! -buffer -nargs=0 ClearAllBookmarks call g:NERDTreeBookmark.ClearAll() <bar> call b:/;"	c
ClearBookmarks	plugged/nerdtree/lib/nerdtree/creator.vim	/^    command! -buffer -complete=customlist,nerdtree#completeBookmarks -nargs=* ClearBookmarks cal/;"	c
Collaborator's Instructions	plugged/nerdtree/.github/PULL_REQUEST_TEMPLATE.md	/^#### Collaborator's Instructions$/;"	t	subsection:New Version Info
Commands	plugged/nvim-cmp/README.md	/^Commands$/;"	c
Commands and Mappings	plugged/vim-nerdtree-tabs/README.md	/^## Commands and Mappings$/;"	s	chapter:NERDTree and tabs together in Vim, painlessly
Commas	plugged/vim-easy-align/EXAMPLES.md	/^Commas$/;"	s	chapter:easy-align examples
Compact View	plugged/ctrlsf.vim/README.md	/^### Compact View$/;"	S	chapter:ctrlsf.vim
Completion_BackwardsJumpWithoutCOMPL_ACCEPT	plugged/ultisnips/test/test_Completion.py	/^class Completion_BackwardsJumpWithoutCOMPL_ACCEPT(_VimTest):$/;"	c
Completion_ForwardsJumpWithoutCOMPL_ACCEPT	plugged/ultisnips/test/test_Completion.py	/^class Completion_ForwardsJumpWithoutCOMPL_ACCEPT(_VimTest):$/;"	c
Completion_SimpleExample_ECR	plugged/ultisnips/test/test_Completion.py	/^class Completion_SimpleExample_ECR(_VimTest):$/;"	c
Concept	plugged/nvim-cmp/README.md	/^Concept$/;"	c
Config	plugged/LuaSnip/README.md	/^# Config$/;"	c
Configs	plugged/nvim-lspconfig/CONTRIBUTING.md	/^## Configs$/;"	s
Configuration	plugged/ctrlsf.vim/README.md	/^## Configuration$/;"	s	chapter:ctrlsf.vim
Configuration	plugged/current-func-info.vim/README.md	/^Configuration$/;"	c
Configuration	plugged/vim-monokai/README.md	/^Configuration$/;"	s	chapter:vim-monokai
Configuration	plugged/vim-nerdtree-syntax-highlight/README.md	/^### Configuration$/;"	S	chapter:vim-nerdtree-syntax-highlight
Configuration	plugged/vim-nerdtree-tabs/README.md	/^## Configuration$/;"	s	chapter:NERDTree and tabs together in Vim, painlessly
Configuration	plugged/vim-oscyank/README.md	/^## Configuration$/;"	s	chapter:vim-oscyank
Configuration options	plugged/nvim-cmp/README.md	/^Configuration options$/;"	c
Configurations	plugged/nvim-lspconfig/CONFIG.md	/^# Configurations$/;"	c
Configurations	plugged/nvim-lspconfig/scripts/README_template.md	/^# Configurations$/;"	c
Constants	plugged/nvim-treesitter/CONTRIBUTING.md	/^#### Constants$/;"	t	subsection:Contributing to `nvim-treesitter`""Parser configurations""Highlights
Contents	plugged/vim-snippets/README.md	/^Contents$/;"	s	chapter:snipMate & UltiSnip Snippets
ContextSnippets_ContextHasAccessToVisual	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_ContextHasAccessToVisual(_VimTest):$/;"	c
ContextSnippets_ContextIsClearedBeforeExpand	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_ContextIsClearedBeforeExpand(_VimTest):$/;"	c
ContextSnippets_CursorIsZeroBased	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_CursorIsZeroBased(_VimTest):$/;"	c
ContextSnippets_DoNotExpandOnFalse	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_DoNotExpandOnFalse(_VimTest):$/;"	c
ContextSnippets_ExpandOnTrue	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_ExpandOnTrue(_VimTest):$/;"	c
ContextSnippets_Header_DoNotExpandOnFalse	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_Header_DoNotExpandOnFalse(_VimTest):$/;"	c
ContextSnippets_Header_ExpandOnTrue	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_Header_ExpandOnTrue(_VimTest):$/;"	c
ContextSnippets_PriorityKeyword	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_PriorityKeyword(_VimTest):$/;"	c
ContextSnippets_ReportError	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_ReportError(_VimTest):$/;"	c
ContextSnippets_ReportErrorOnIndexOutOfRange	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_ReportErrorOnIndexOutOfRange(_VimTest):$/;"	c
ContextSnippets_SimpleSnippet	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_SimpleSnippet(_VimTest):$/;"	c
ContextSnippets_SnippetPriority	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_SnippetPriority(_VimTest):$/;"	c
ContextSnippets_UseContext	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_UseContext(_VimTest):$/;"	c
Contributing	plugged/vim-devicons/README.md	/^Contributing$/;"	s
Contributing	plugged/vim-gutentags/CONTRIBUTING.md	/^# Contributing$/;"	c
Contributing Guide	plugged/vim-devicons/CONTRIBUTING.md	/^# Contributing Guide$/;"	c
Contributing to UltiSnips	plugged/ultisnips/CONTRIBUTING.md	/^# Contributing to UltiSnips$/;"	c
Contributing to `nvim-treesitter`	plugged/nvim-treesitter/CONTRIBUTING.md	/^# Contributing to `nvim-treesitter`$/;"	c
Contributions	plugged/nerdcommenter/README.md	/^## Contributions$/;"	s	chapter:NERD Commenter
Contributions	plugged/nvim-lspconfig/README.md	/^## Contributions$/;"	s	chapter:LSP overview
Contributor Covenant Code of Conduct	plugged/vim-devicons/CODE_OF_CONDUCT.md	/^# Contributor Covenant Code of Conduct$/;"	c
Contributors	plugged/auto-pairs/README.md	/^Contributors$/;"	s	chapter:Auto Pairs
Contributors	plugged/vim-one/README.md	/^## Contributors$/;"	s
Copying from a register	plugged/vim-oscyank/README.md	/^## Copying from a register$/;"	s	chapter:vim-oscyank
Credits	plugged/nerdtree-git-plugin/README.md	/^## Credits$/;"	s	chapter:nerdtree-git-plugin
Credits	plugged/vim-nerdtree-tabs/README.md	/^## Credits$/;"	s	chapter:NERDTree and tabs together in Vim, painlessly
Credits	plugged/vim-oscyank/README.md	/^## Credits$/;"	s	chapter:vim-oscyank
Credits	plugged/vim-smoothie/README.md	/^Credits$/;"	s	chapter:vim-smoothie: Smooth scrolling for Vim done right🥤
CtrlSF	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^com! -n=* -comp=customlist,ctrlsf#comp#Completion CtrlSF         call ctrlsf#Search(<q-args>)$/;"	c
CtrlSFClearHL	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^com! -n=0                                         CtrlSFClearHL  call ctrlsf#ClearSelectedLine()$/;"	c
CtrlSFClose	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^com! -n=0                                         CtrlSFClose    call ctrlsf#Quit()$/;"	c
CtrlSFFocus	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^com! -n=0                                         CtrlSFFocus    call ctrlsf#Focus()$/;"	c
CtrlSFGetVisualSelection	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^func! g:CtrlSFGetVisualSelection()$/;"	f
CtrlSFOpen	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^com! -n=0                                         CtrlSFOpen     call ctrlsf#Open()$/;"	c
CtrlSFQuickfix	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^com! -n=* -comp=customlist,ctrlsf#comp#Completion CtrlSFQuickfix call ctrlsf#Quickfix(<q-args>)$/;"	c
CtrlSFStatusLine	plugged/ctrlsf.vim/after/plugin/ctrlsf.vim	/^func! CtrlSFStatusLine(...)$/;"	f
CtrlSFStop	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^com! -n=0                                         CtrlSFStop     call ctrlsf#StopSearch()$/;"	c
CtrlSFSwitchViewMode	plugged/ctrlsf.vim/autoload/ctrlsf/win.vim	/^    command! -buffer CtrlSFSwitchViewMode call ctrlsf#SwitchViewMode()$/;"	c
CtrlSFToggle	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^com! -n=0                                         CtrlSFToggle   call ctrlsf#Toggle()$/;"	c
CtrlSFToggleMap	plugged/ctrlsf.vim/autoload/ctrlsf/win.vim	/^    command! -buffer CtrlSFToggleMap      call ctrlsf#ToggleMap()$/;"	c
CtrlSFUpdate	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^com! -n=0                                         CtrlSFUpdate   call ctrlsf#Update()$/;"	c
Current Behavior (Include screenshots where appropriate.)	plugged/nerdtree/.github/ISSUE_TEMPLATE/bug.md	/^#### Current Behavior (Include screenshots where appropriate.)$/;"	t
Current Result (Include screenshots where appropriate.)	plugged/nerdtree-git-plugin/.github/ISSUE_TEMPLATE/bug.md	/^#### Current Result (Include screenshots where appropriate.)$/;"	t
Current limitation on finding and solving bugs on different setups	plugged/vim-nerdtree-syntax-highlight/README.md	/^### Current limitation on finding and solving bugs on different setups$/;"	S	chapter:vim-nerdtree-syntax-highlight
CursorMovement_BS_InEditMode	plugged/ultisnips/test/test_Movement.py	/^class CursorMovement_BS_InEditMode(_VimTest):$/;"	c
CursorMovement_Multiline_ECR	plugged/ultisnips/test/test_Movement.py	/^class CursorMovement_Multiline_ECR(_VimTest):$/;"	c
Customising One without fork	plugged/vim-one/README.md	/^## Customising One without fork$/;"	s
Customization	plugged/vim-smoothie/README.md	/^Customization$/;"	s	chapter:vim-smoothie: Smooth scrolling for Vim done right🥤
D	plugged/LuaSnip/lua/luasnip/nodes/dynamicNode.lua	/^local function D(pos, fn, args, ...)$/;"	f
DB_FILE	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set DB_FILE=%~2$/;"	v
DB_FILE	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^set DB_FILE=cscope.out$/;"	v
DOCSTRING	plugged/LuaSnip/DOC.md	/^# DOCSTRING$/;"	c
DOCSTRING-CACHE	plugged/LuaSnip/DOC.md	/^# DOCSTRING-CACHE$/;"	c
DUMP_FILENAME	plugged/ultisnips/pythonx/UltiSnips/debug.py	/^DUMP_FILENAME = ($/;"	v
DYNAMICNODE	plugged/LuaSnip/DOC.md	/^# DYNAMICNODE$/;"	c
Debugging	plugged/nvim-lspconfig/README.md	/^## Debugging$/;"	s	chapter:LSP overview
Default mappings	plugged/nerdcommenter/README.md	/^### Default mappings$/;"	S	section:NERD Commenter""Usage
Definition Scope	plugged/nvim-treesitter/CONTRIBUTING.md	/^#### Definition Scope$/;"	t	subsection:Contributing to `nvim-treesitter`""Parser configurations""Locals
DeleteCurrentTabStop1_JumpBack	plugged/ultisnips/test/test_Editing.py	/^class DeleteCurrentTabStop1_JumpBack(_VimTest):$/;"	c
DeleteCurrentTabStop2_JumpBack	plugged/ultisnips/test/test_Editing.py	/^class DeleteCurrentTabStop2_JumpBack(_VimTest):$/;"	c
DeleteCurrentTabStop3_JumpAround	plugged/ultisnips/test/test_Editing.py	/^class DeleteCurrentTabStop3_JumpAround(_VimTest):$/;"	c
DeleteLastTwoLinesInSnippet	plugged/ultisnips/test/test_Editing.py	/^class DeleteLastTwoLinesInSnippet(_VimTest):$/;"	c
DeleteSnippetInsertion0	plugged/ultisnips/test/test_Editing.py	/^class DeleteSnippetInsertion0(_VimTest):$/;"	c
DeleteSnippetInsertion1	plugged/ultisnips/test/test_Editing.py	/^class DeleteSnippetInsertion1(_VimTest):$/;"	c
Demo	plugged/vim-easy-align/README.md	/^Demo$/;"	s	chapter:vim-easy-align ![travis-ci](https://travis-ci.org/junegunn/vim-easy-align.svg?branch=master)
Dependencies	plugged/vim-nerdtree-syntax-highlight/README.md	/^### Dependencies$/;"	S	chapter:vim-nerdtree-syntax-highlight
Description	plugged/nerdtree-git-plugin/.github/ISSUE_TEMPLATE/feature_request.md	/^#### Description$/;"	t
Description	plugged/nerdtree/.github/ISSUE_TEMPLATE/feature_request.md	/^#### Description$/;"	t
Description of Changes	plugged/nerdtree-git-plugin/.github/PULL_REQUEST_TEMPLATE.md	/^### Description of Changes$/;"	S
Description of Changes	plugged/nerdtree/.github/PULL_REQUEST_TEMPLATE.md	/^### Description of Changes$/;"	S
Developers	plugged/vim-devicons/README.md	/^Developers$/;"	s
Difference between v1.0 and pre-v1.0	plugged/ctrlsf.vim/README.md	/^### Difference between v1.0 and pre-v1.0$/;"	S	section:ctrlsf.vim""For user comes from pre v1.0
Different ways to start	plugged/vim-easy-align/README.md	/^### Different ways to start$/;"	S	section:vim-easy-align ![travis-ci](https://travis-ci.org/junegunn/vim-easy-align.svg?branch=master)""Demo
Disabling &foldmethod during alignment	plugged/vim-easy-align/README.md	/^### Disabling &foldmethod during alignment$/;"	S	section:vim-easy-align ![travis-ci](https://travis-ci.org/junegunn/vim-easy-align.svg?branch=master)""Other options
DoNotCrashOnUndoAndJumpInNestedSnippet	plugged/ultisnips/test/test_Editing.py	/^class DoNotCrashOnUndoAndJumpInNestedSnippet(_VimTest):$/;"	c
DoNotExpandAfterSpace_ExpectCorrectResult	plugged/ultisnips/test/test_Expand.py	/^class DoNotExpandAfterSpace_ExpectCorrectResult(_SimpleExpands):$/;"	c
DoNotTrimSpacesAtEndOfLinesByDefault	plugged/ultisnips/test/test_Chars.py	/^class DoNotTrimSpacesAtEndOfLinesByDefault(_VimTest):$/;"	c
Docs	plugged/LuaSnip/README.md	/^## Docs$/;"	s	chapter:Setup
Documentation	plugged/nerdcommenter/README.md	/^### Documentation$/;"	S	section:NERD Commenter""Usage
Documenting	plugged/ultisnips/CONTRIBUTING.md	/^## Documenting$/;"	s	chapter:Contributing to UltiSnips
DoneParseArgs	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^:DoneParseArgs$/;"	l
DoneParseArgs	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^:DoneParseArgs$/;"	l
Drawbacks	plugged/LuaSnip/README.md	/^# Drawbacks$/;"	c
Dynamic tabstop generation	plugged/ultisnips/doc/examples/tabstop-generation/README.md	/^# Dynamic tabstop generation$/;"	c
EA	plugged/ultisnips/test/constant.py	/^EA = "#"  # Expand anonymous$/;"	v
EMPTY_ITER	plugged/nvim-treesitter/lua/nvim-treesitter/query.lua	/^local EMPTY_ITER = function() end$/;"	f
EOF	plugged/vim-easy-align/test/run	/^vim -Nu <(cat << EOF$/;"	h
ESC	plugged/ultisnips/test/constant.py	/^ESC = "\\x1b"$/;"	v
EVENTS	plugged/LuaSnip/DOC.md	/^# EVENTS$/;"	c
EX	plugged/ultisnips/test/constant.py	/^EX = "\\t"  # EXPAND$/;"	v
EXT\\_OPTS	plugged/LuaSnip/DOC.md	/^# EXT\\_OPTS$/;"	c
EasyAlign	plugged/vim-easy-align/plugin/easy_align.vim	/^command! -nargs=* -range -bang EasyAlign <line1>,<line2>call easy_align#align(<bang>0, 0, 'comma/;"	c
Edit Mode	plugged/ctrlsf.vim/README.md	/^## Edit Mode$/;"	s	chapter:ctrlsf.vim
Edit Mode	plugged/ctrlsf.vim/README.md	/^### Edit Mode$/;"	S	chapter:ctrlsf.vim
EditBookmarks	plugged/nerdtree/lib/nerdtree/creator.vim	/^    command! -buffer -nargs=0 EditBookmarks call g:NERDTreeBookmark.Edit()$/;"	c
EditableTextObject	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^class EditableTextObject(TextObject):$/;"	c
Enabling additional language servers	plugged/nvim-lspconfig/README.md	/^## Enabling additional language servers$/;"	s	chapter:LSP overview
EndOfTextToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class EndOfTextToken(Token):$/;"	c
Enforcement	plugged/vim-devicons/CODE_OF_CONDUCT.md	/^## Enforcement$/;"	s	chapter:Contributor Covenant Code of Conduct
Environment	plugged/nerdtree/.github/ISSUE_TEMPLATE/bug.md	/^#### Environment$/;"	t
Environment (for bug reports)	plugged/nerdtree-git-plugin/.github/ISSUE_TEMPLATE/bug.md	/^#### Environment (for bug reports)$/;"	t
EscapeCharToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class EscapeCharToken(Token):$/;"	c
EscapedChar	plugged/ultisnips/pythonx/UltiSnips/text_objects/escaped_char.py	/^class EscapedChar(NoneditableTextObject):$/;"	c
Example	plugged/ctrlsf.vim/README.md	/^### Example$/;"	S	section:ctrlsf.vim""Arguments
Example	plugged/vim-easy-align/EXAMPLES.md	/^### Example$/;"	S	section:easy-align examples""Alignment around =
Example	plugged/vim-easy-align/EXAMPLES.md	/^### Example$/;"	S	section:easy-align examples""Alignment around whitespaces
Example	plugged/vim-easy-align/EXAMPLES.md	/^### Example$/;"	S	section:easy-align examples""Formatting table
Example	plugged/vim-nerdtree-tabs/README.md	/^### Example$/;"	S	section:NERDTree and tabs together in Vim, painlessly""Configuration
Example: custom config	plugged/nvim-lspconfig/ADVANCED_README.md	/^### Example: custom config$/;"	S	section:Advanced usage
Example: override default config for all servers	plugged/nvim-lspconfig/ADVANCED_README.md	/^### Example: override default config for all servers$/;"	S	section:Advanced usage
Example: override some defaults	plugged/nvim-lspconfig/ADVANCED_README.md	/^### Example: override some defaults$/;"	S	section:Advanced usage
Example: using the defaults	plugged/nvim-lspconfig/ADVANCED_README.md	/^### Example: using the defaults$/;"	S	section:Advanced usage
Examples	plugged/vim-easy-align/README.md	/^#### Examples$/;"	t	subsection:vim-easy-align ![travis-ci](https://travis-ci.org/junegunn/vim-easy-align.svg?branch=master)""Alignment options""Extending alignment rules
Examples	plugged/vim-easy-align/README.md	/^#### Examples$/;"	t	subsection:vim-easy-align ![travis-ci](https://travis-ci.org/junegunn/vim-easy-align.svg?branch=master)""Alignment options""Filtering lines
Examples using predefined rules	plugged/vim-easy-align/README.md	/^#### Examples using predefined rules$/;"	t	subsection:vim-easy-align ![travis-ci](https://travis-ci.org/junegunn/vim-easy-align.svg?branch=master)""Usage""Interactive mode
ExclusiveSelection_RealWorldCase_Test	plugged/ultisnips/test/test_Selection.py	/^class ExclusiveSelection_RealWorldCase_Test(_ES_Base):$/;"	c
ExclusiveSelection_SimpleTabstop_Test	plugged/ultisnips/test/test_Selection.py	/^class ExclusiveSelection_SimpleTabstop_Test(_ES_Base):$/;"	c
ExitSnippetModeAfterTabstopZero	plugged/ultisnips/test/test_Expand.py	/^class ExitSnippetModeAfterTabstopZero(_VimTest):$/;"	c
ExpandDown	init.vim	/^function ExpandDown()$/;"	f
ExpandInTheMiddleOfLine_ExpectCorrectResult	plugged/ultisnips/test/test_Expand.py	/^class ExpandInTheMiddleOfLine_ExpectCorrectResult(_SimpleExpands):$/;"	c
ExpandLeft	init.vim	/^function ExpandLeft()$/;"	f
ExpandRight	init.vim	/^function ExpandRight()$/;"	f
ExpandUp	init.vim	/^function ExpandUp()$/;"	f
Expected Result	plugged/nerdtree-git-plugin/.github/ISSUE_TEMPLATE/bug.md	/^#### Expected Result$/;"	t
Expected Result	plugged/nerdtree/.github/ISSUE_TEMPLATE/bug.md	/^#### Expected Result$/;"	t
Extending alignment rules	plugged/vim-easy-align/README.md	/^### Extending alignment rules$/;"	S	section:vim-easy-align ![travis-ci](https://travis-ci.org/junegunn/vim-easy-align.svg?branch=master)""Alignment options
Extra features	plugged/nvim-treesitter/README.md	/^# Extra features$/;"	c
F	plugged/LuaSnip/lua/luasnip/extras/init.lua	/^local F = require("luasnip.nodes.functionNode").F$/;"	f
F	plugged/LuaSnip/lua/luasnip/nodes/functionNode.lua	/^local function F(fn, args, ...)$/;"	f
FAQ	plugged/nerdtree-git-plugin/README.md	/^## FAQ$/;"	s	chapter:nerdtree-git-plugin
FAQ	plugged/nvim-cmp/README.md	/^FAQ$/;"	c
FAQ	plugged/vim-fugitive/README.markdown	/^## FAQ$/;"	s	chapter:fugitive.vim
FILESIZE	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^for \/F %%F in ("%DB_FILE%.files") do set FILESIZE=%%~zF$/;"	v
FILESIZE	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^set FILESIZE=0$/;"	v
FILE_LIST_CMD	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set FILE_LIST_CMD=%~2$/;"	v
FILE_LIST_CMD	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^set FILE_LIST_CMD=$/;"	v
FILE_LIST_CMD	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set FILE_LIST_CMD=%~2$/;"	v
FILE_LIST_CMD	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set FILE_LIST_CMD=$/;"	v
FILE_LIST_CMD_IS_ABSOLUTE	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set FILE_LIST_CMD_IS_ABSOLUTE=1$/;"	v
FILE_LIST_CMD_IS_ABSOLUTE	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set FILE_LIST_CMD_IS_ABSOLUTE=0$/;"	v
FOO	plugged/nvim-treesitter/tests/indent/c/preproc_func.c	/^#define FOO(/;"	d	file:
FORWARD	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    FORWARD = 1$/;"	v	class:JumpDirection
FOSimple_Break_ExpectCorrectResult	plugged/ultisnips/test/test_Format.py	/^class FOSimple_Break_ExpectCorrectResult(_FormatoptionsBase):$/;"	c
FOTextAfter_ExpectCorrectResult	plugged/ultisnips/test/test_Format.py	/^class FOTextAfter_ExpectCorrectResult(_FormatoptionsBase):$/;"	c
FOTextBeforeAndAfter_ExpectCorrectResult	plugged/ultisnips/test/test_Format.py	/^class FOTextBeforeAndAfter_ExpectCorrectResult(_FormatoptionsBase):$/;"	c
FOWrapOnLongWord_ExpectCorrectResult	plugged/ultisnips/test/test_Format.py	/^class FOWrapOnLongWord_ExpectCorrectResult(_FormatoptionsBase):$/;"	c
FUNCTIONNODE	plugged/LuaSnip/DOC.md	/^# FUNCTIONNODE$/;"	c
Feature `X` does not work for `{language}`...	plugged/nvim-treesitter/README.md	/^#### Feature `X` does not work for `{language}`...$/;"	t	chapter:Troubleshooting
Features	plugged/LuaSnip/README.md	/^# Features$/;"	c
Features	plugged/auto-pairs/README.md	/^Features$/;"	s	chapter:Auto Pairs
Features	plugged/ctrlsf.vim/README.md	/^## Features$/;"	s	chapter:ctrlsf.vim
Features	plugged/vim-devicons/README.md	/^Features$/;"	s
Features	plugged/vim-nerdtree-tabs/README.md	/^## Features$/;"	s	chapter:NERDTree and tabs together in Vim, painlessly
Features	plugged/vim-oscyank/README.md	/^## Features$/;"	s	chapter:vim-oscyank
Filter	plugged/vim-devicons/rplugin/python3/denite/filter/devicons_denite_converter.py	/^class Filter(Base):$/;"	c
Filtering lines	plugged/vim-easy-align/README.md	/^### Filtering lines$/;"	S	section:vim-easy-align ![travis-ci](https://travis-ci.org/junegunn/vim-easy-align.svg?branch=master)""Alignment options
Flow of execution	plugged/vim-easy-align/README.md	/^### Flow of execution$/;"	S	section:vim-easy-align ![travis-ci](https://travis-ci.org/junegunn/vim-easy-align.svg?branch=master)""Usage
Fly Mode	plugged/auto-pairs/README.md	/^Fly Mode$/;"	s	chapter:Auto Pairs
FoldOverwrite_Simple_ECR	plugged/ultisnips/test/test_Folding.py	/^class FoldOverwrite_Simple_ECR(_VimTest):$/;"	c
Fold_DeleteMiddleLine_ECR	plugged/ultisnips/test/test_Folding.py	/^class Fold_DeleteMiddleLine_ECR(_VimTest):$/;"	c
Folding	plugged/nvim-treesitter/README.md	/^#### Folding$/;"	t	chapter:Available modules
FoldingEnabled_SnippetWithFold_ExpectNoFolding	plugged/ultisnips/test/test_Folding.py	/^class FoldingEnabled_SnippetWithFold_ExpectNoFolding(_VimTest):$/;"	c
Folds	plugged/nvim-treesitter/CONTRIBUTING.md	/^### Folds$/;"	S	section:Contributing to `nvim-treesitter`""Parser configurations
Foo	plugged/nvim-treesitter/tests/indent/cpp/access.cpp	/^class Foo {$/;"	c	file:
Foo	plugged/nvim-treesitter/tests/indent/cpp/class.cpp	/^class Foo {$/;"	c	file:
Foo	plugged/nvim-treesitter/tests/indent/python/basic_blocks.py	/^class Foo:$/;"	c
Foo	plugged/nvim-treesitter/tests/indent/rust/enum.rs	/^enum Foo {$/;"	g
Foo	plugged/nvim-treesitter/tests/indent/rust/impl.rs	/^impl Foo {$/;"	c
Foo	plugged/nvim-treesitter/tests/indent/rust/impl.rs	/^struct Foo;$/;"	s
Foo	plugged/nvim-treesitter/tests/indent/rust/struct.rs	/^struct Foo {$/;"	s
Foo	plugged/nvim-treesitter/tests/indent/rust/trait.rs	/^impl Bar for Foo {$/;"	c
Foo	plugged/nvim-treesitter/tests/indent/rust/trait.rs	/^struct Foo;$/;"	s
Foo	plugged/nvim-treesitter/tests/indent/rust/where.rs	/^impl<T> Write for Foo<T>$/;"	c
Foo	plugged/nvim-treesitter/tests/indent/rust/where.rs	/^struct Foo<T>(T);$/;"	s
For user comes from pre v1.0	plugged/ctrlsf.vim/README.md	/^## For user comes from pre v1.0$/;"	s	chapter:ctrlsf.vim
Formatting YAML (or JSON)	plugged/vim-easy-align/EXAMPLES.md	/^Formatting YAML (or JSON)$/;"	s	chapter:easy-align examples
Formatting multi-line method chaining	plugged/vim-easy-align/EXAMPLES.md	/^Formatting multi-line method chaining$/;"	s	chapter:easy-align examples
Formatting table	plugged/vim-easy-align/EXAMPLES.md	/^Formatting table$/;"	s	chapter:easy-align examples
Frequently Asked Questions	plugged/nerdtree/README.markdown	/^## Frequently Asked Questions$/;"	s	chapter:The NERDTree [![Vint](https://github.com/preservim/nerdtree/workflows/Vint/badge.svg)](https://github.com/preservim/nerdtree/actions?workflow=Vint)
FugitiveCommonDir	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveCommonDir(...) abort$/;"	f
FugitiveConfig	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveConfig(...) abort$/;"	f
FugitiveConfigGet	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveConfigGet(name, ...) abort$/;"	f
FugitiveConfigGetAll	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveConfigGetAll(name, ...) abort$/;"	f
FugitiveConfigGetRegexp	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveConfigGetRegexp(pattern, ...) abort$/;"	f
FugitiveDetect	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveDetect(...) abort$/;"	f
FugitiveDidChange	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveDidChange(...) abort$/;"	f
FugitiveExecute	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveExecute(args, ...) abort$/;"	f
FugitiveExtractGitDir	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveExtractGitDir(path) abort$/;"	f
FugitiveFind	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveFind(...) abort$/;"	f
FugitiveGitDir	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveGitDir(...) abort$/;"	f
FugitiveGitPath	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveGitPath(path) abort$/;"	f
FugitiveGitVersion	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveGitVersion(...) abort$/;"	f
FugitiveHead	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveHead(...) abort$/;"	f
FugitiveIsGitDir	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveIsGitDir(...) abort$/;"	f
FugitiveParse	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveParse(...) abort$/;"	f
FugitivePath	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitivePath(...) abort$/;"	f
FugitivePrepare	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitivePrepare(...) abort$/;"	f
FugitiveReal	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveReal(...) abort$/;"	f
FugitiveRemoteUrl	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveRemoteUrl(...) abort$/;"	f
FugitiveResult	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveResult(...) abort$/;"	f
FugitiveShellCommand	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveShellCommand(...) abort$/;"	f
FugitiveStatusline	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveStatusline(...) abort$/;"	f
FugitiveVimPath	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveVimPath(path) abort$/;"	f
FugitiveWorkTree	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveWorkTree(...) abort$/;"	f
Functions	plugged/nvim-treesitter/CONTRIBUTING.md	/^#### Functions$/;"	t	subsection:Contributing to `nvim-treesitter`""Parser configurations""Highlights
Future ideas and examples	plugged/vim-snippets/README.md	/^Future ideas and examples$/;"	s	chapter:snipMate & UltiSnip Snippets
G	plugged/vim-fugitive/plugin/fugitive.vim	/^  command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#Complete G   exe fugitive#Comm/;"	c
Generating docs	plugged/nvim-lspconfig/CONTRIBUTING.md	/^## Generating docs$/;"	s
GetVisualSelection	init.vim	/^function! GetVisualSelection(mode)$/;"	f
Getting Started	plugged/nerdtree/README.markdown	/^## Getting Started$/;"	s	chapter:The NERDTree [![Vint](https://github.com/preservim/nerdtree/workflows/Vint/badge.svg)](https://github.com/preservim/nerdtree/actions?workflow=Vint)
Getting help	plugged/vim-snippets/README.md	/^Getting help$/;"	s	chapter:snipMate & UltiSnip Snippets
Git	plugged/vim-fugitive/plugin/fugitive.vim	/^command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#Complete Git exe fugitive#Comman/;"	c
GitHub color scheme for Vim	plugged/vim-colors-github/README.md	/^GitHub color scheme for Vim$/;"	c
Gutentags	plugged/vim-gutentags/README.md	/^# Gutentags$/;"	c
GutentagsToggleEnabled	plugged/vim-gutentags/plugin/gutentags.vim	/^    command! GutentagsToggleEnabled :let g:gutentags_enabled=!g:gutentags_enabled$/;"	c
GutentagsToggleFake	plugged/vim-gutentags/plugin/gutentags.vim	/^    command! GutentagsToggleFake    :call gutentags#fake()$/;"	c
GutentagsToggleTrace	plugged/vim-gutentags/plugin/gutentags.vim	/^    command! GutentagsToggleTrace   :call gutentags#toggletrace()$/;"	c
GutentagsUpdate	plugged/vim-gutentags/autoload/gutentags.vim	/^    command! -buffer -bang GutentagsUpdate :call s:manual_update_tags(<bang>0)$/;"	c
HasDownNeighbor	init.vim	/^function HasDownNeighbor()$/;"	f
HasLeftNeighbor	init.vim	/^function HasLeftNeighbor()$/;"	f
HasRightNeighbor	init.vim	/^function HasRightNeighbor()$/;"	f
HasUpNeighbor	init.vim	/^function HasUpNeighbor()$/;"	f
Highlight	plugged/nvim-treesitter/README.md	/^#### Highlight$/;"	t	chapter:Available modules
Highlights	plugged/nvim-cmp/README.md	/^Highlights$/;"	c
Highlights	plugged/nvim-treesitter/CONTRIBUTING.md	/^### Highlights$/;"	S	section:Contributing to `nvim-treesitter`""Parser configurations
Highlights	plugged/vim-one/CONTRIBUTING.md	/^## Highlights$/;"	s
Historical notes	plugged/vim-snippets/README.md	/^Historical notes$/;"	s	chapter:snipMate & UltiSnip Snippets
How can I change the default arrows?	plugged/nerdtree/README.markdown	/^### How can I change the default arrows?$/;"	S	section:The NERDTree [![Vint](https://github.com/preservim/nerdtree/workflows/Vint/badge.svg)](https://github.com/preservim/nerdtree/actions?workflow=Vint)""Frequently Asked Questions
How can I close Vim or a tab automatically when NERDTree is the last window?	plugged/nerdtree/README.markdown	/^### How can I close Vim or a tab automatically when NERDTree is the last window?$/;"	S	section:The NERDTree [![Vint](https://github.com/preservim/nerdtree/workflows/Vint/badge.svg)](https://github.com/preservim/nerdtree/actions?workflow=Vint)""Frequently Asked Questions
How can I map a specific key or shortcut to open NERDTree?	plugged/nerdtree/README.markdown	/^### How can I map a specific key or shortcut to open NERDTree?$/;"	S	section:The NERDTree [![Vint](https://github.com/preservim/nerdtree/workflows/Vint/badge.svg)](https://github.com/preservim/nerdtree/actions?workflow=Vint)""Frequently Asked Questions
How can I prevent other buffers replacing NERDTree in its window?	plugged/nerdtree/README.markdown	/^### How can I prevent other buffers replacing NERDTree in its window?$/;"	S	section:The NERDTree [![Vint](https://github.com/preservim/nerdtree/workflows/Vint/badge.svg)](https://github.com/preservim/nerdtree/actions?workflow=Vint)""Frequently Asked Questions
How do I open NERDTree automatically when Vim starts?	plugged/nerdtree/README.markdown	/^### How do I open NERDTree automatically when Vim starts?$/;"	S	section:The NERDTree [![Vint](https://github.com/preservim/nerdtree/workflows/Vint/badge.svg)](https://github.com/preservim/nerdtree/actions?workflow=Vint)""Frequently Asked Questions
How should this be manually tested?	plugged/vim-devicons/.github/PULL_REQUEST_TEMPLATE.md	/^#### How should this be manually tested?$/;"	t
How to contribute	plugged/vim-devicons/CONTRIBUTING.md	/^## How to contribute$/;"	s	chapter:Contributing Guide
How to disable nvim-cmp on the specific buffer?	plugged/nvim-cmp/README.md	/^#### How to disable nvim-cmp on the specific buffer?$/;"	t	chapter:FAQ
How to set up like nvim-compe's `preselect = 'always'`?	plugged/nvim-cmp/README.md	/^#### How to set up like nvim-compe's `preselect = 'always'`?$/;"	t	chapter:FAQ
How to setup mapping?	plugged/nvim-cmp/README.md	/^#### How to setup mapping?$/;"	t	chapter:FAQ
How to show name of item kind and source (like compe)?	plugged/nvim-cmp/README.md	/^#### How to show name of item kind and source (like compe)?$/;"	t	chapter:FAQ
How?	plugged/vim-gutentags/README.md	/^## How?$/;"	s	chapter:Gutentags
I	plugged/LuaSnip/lua/luasnip/extras/_lambda.lua	/^function lambda.I(e)$/;"	f	unknown:lambda
I	plugged/LuaSnip/lua/luasnip/nodes/insertNode.lua	/^local function I(pos, static_text)$/;"	f
I can't get the specific source working.	plugged/nvim-cmp/README.md	/^#### I can't get the specific source working.$/;"	t	chapter:FAQ
I dislike auto-completion	plugged/nvim-cmp/README.md	/^#### I dislike auto-completion$/;"	t	chapter:FAQ
I experience bugs when using `nvim-treesitter`'s `foldexpr` similar to [#194](https://github.com/nvim-treesitter/nvim-treesitter/issues/194)	plugged/nvim-treesitter/README.md	/^#### I experience bugs when using `nvim-treesitter`'s `foldexpr` similar to [#194](https:\/\/git/;"	t	chapter:Troubleshooting
I experience weird highlighting issues similar to [#78](https://github.com/nvim-treesitter/nvim-treesitter/issues/78)	plugged/nvim-treesitter/README.md	/^#### I experience weird highlighting issues similar to [#78](https:\/\/github.com\/nvim-treesitt/;"	t	chapter:Troubleshooting
I get `Error detected while processing .../plugin/nvim-treesitter.vim` every time I open Neovim	plugged/nvim-treesitter/README.md	/^#### I get `Error detected while processing ...\/plugin\/nvim-treesitter.vim` every time I open /;"	t	chapter:Troubleshooting
I get `module 'vim.treesitter.query' not found`	plugged/nvim-treesitter/README.md	/^#### I get `module 'vim.treesitter.query' not found`$/;"	t	chapter:Troubleshooting
I run into errors like `module 'nvim-treesitter.configs' not found` at startup	plugged/nvim-treesitter/README.md	/^#### I run into errors like `module 'nvim-treesitter.configs' not found` at startup$/;"	t	chapter:Troubleshooting
I want to see  more sources!	plugged/nvim-cmp/README.md	/^### I want to see  more sources!$/;"	S	chapter:Setup
I want to use Git instead of curl for downloading the parsers	plugged/nvim-treesitter/README.md	/^#### I want to use Git instead of curl for downloading the parsers$/;"	t	chapter:Troubleshooting
I want to use a HTTP proxy for downloading the parsers	plugged/nvim-treesitter/README.md	/^#### I want to use a HTTP proxy for downloading the parsers$/;"	t	chapter:Troubleshooting
IMMoving_AcceptInputWhenMoved_ECR	plugged/ultisnips/test/test_Movement.py	/^class IMMoving_AcceptInputWhenMoved_ECR(_VimTest):$/;"	c
IMMoving_CursorsKeys_ECR	plugged/ultisnips/test/test_Movement.py	/^class IMMoving_CursorsKeys_ECR(_VimTest):$/;"	c
IMMoving_ExitWhenOutsideAbove_ECR	plugged/ultisnips/test/test_Movement.py	/^class IMMoving_ExitWhenOutsideAbove_ECR(_VimTest):$/;"	c
IMMoving_ExitWhenOutsideBelow_ECR	plugged/ultisnips/test/test_Movement.py	/^class IMMoving_ExitWhenOutsideBelow_ECR(_VimTest):$/;"	c
IMMoving_ExitWhenOutsideLeft_ECR	plugged/ultisnips/test/test_Movement.py	/^class IMMoving_ExitWhenOutsideLeft_ECR(_VimTest):$/;"	c
IMMoving_ExitWhenOutsideRight_ECR	plugged/ultisnips/test/test_Movement.py	/^class IMMoving_ExitWhenOutsideRight_ECR(_VimTest):$/;"	c
IMMoving_NoExitingEventAtEnd_ECR	plugged/ultisnips/test/test_Movement.py	/^class IMMoving_NoExitingEventAtEnd_ECR(_VimTest):$/;"	c
IMMoving_NoExiting_ECR	plugged/ultisnips/test/test_Movement.py	/^class IMMoving_NoExiting_ECR(_VimTest):$/;"	c
IMMoving_NotExitingWhenBarelyOutsideLeft_ECR	plugged/ultisnips/test/test_Movement.py	/^class IMMoving_NotExitingWhenBarelyOutsideLeft_ECR(_VimTest):$/;"	c
INDENTSNIPPETNODE	plugged/LuaSnip/DOC.md	/^# INDENTSNIPPETNODE$/;"	c
INDEX_WHOLE_PROJECT	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^        set INDEX_WHOLE_PROJECT=0$/;"	v
INDEX_WHOLE_PROJECT	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set INDEX_WHOLE_PROJECT=1$/;"	v
INSERTNODE	plugged/LuaSnip/DOC.md	/^# INSERTNODE$/;"	c
ISN	plugged/LuaSnip/lua/luasnip/nodes/snippet.lua	/^local function ISN(pos, nodes, indent_text, opts)$/;"	f
Ignoring delimiters in comments or strings	plugged/vim-easy-align/EXAMPLES.md	/^Ignoring delimiters in comments or strings$/;"	s	chapter:easy-align examples
Ignoring delimiters in comments or strings	plugged/vim-easy-align/README.md	/^### Ignoring delimiters in comments or strings$/;"	S	section:vim-easy-align ![travis-ci](https://travis-ci.org/junegunn/vim-easy-align.svg?branch=master)""Alignment options
Ignoring unmatched lines	plugged/vim-easy-align/README.md	/^### Ignoring unmatched lines$/;"	S	section:vim-easy-align ![travis-ci](https://travis-ci.org/junegunn/vim-easy-align.svg?branch=master)""Alignment options
Implementation	plugged/ultisnips/doc/examples/autojump-if-empty/README.md	/^## Implementation$/;"	s	chapter:Autojump from tabstop when it's empty
In progress	plugged/vim-one/README.md	/^### In progress$/;"	S	section:List of enhanced language support
Incremental selection	plugged/nvim-treesitter/README.md	/^#### Incremental selection$/;"	t	chapter:Available modules
IndentUtil	plugged/ultisnips/pythonx/UltiSnips/indent_util.py	/^class IndentUtil:$/;"	c
Indentation	plugged/nvim-treesitter/README.md	/^#### Indentation$/;"	t	chapter:Available modules
Indents	plugged/nvim-treesitter/CONTRIBUTING.md	/^### Indents$/;"	S	section:Contributing to `nvim-treesitter`""Parser configurations
Injections	plugged/nvim-treesitter/CONTRIBUTING.md	/^### Injections$/;"	S	section:Contributing to `nvim-treesitter`""Parser configurations
Inspiration and special thanks	plugged/neodark.vim/README.md	/^## Inspiration and special thanks$/;"	s	chapter:neodark.vim
Install	plugged/LuaSnip/README.md	/^## Install $/;"	s	chapter:Setup
Install	plugged/nvim-lspconfig/README.md	/^## Install$/;"	s	chapter:LSP overview
Install	plugged/vim-colors-github/README.md	/^Install$/;"	s	chapter:GitHub color scheme for Vim
Install	plugged/vim-monokai/README.md	/^Install$/;"	s	chapter:vim-monokai
Installation	plugged/auto-pairs/README.md	/^Installation$/;"	s	chapter:Auto Pairs
Installation	plugged/ctrlsf.vim/README.md	/^## Installation$/;"	s	chapter:ctrlsf.vim
Installation	plugged/current-func-info.vim/README.md	/^Installation$/;"	c
Installation	plugged/neodark.vim/README.md	/^## Installation$/;"	s	chapter:neodark.vim
Installation	plugged/nerdcommenter/README.md	/^## Installation$/;"	s	chapter:NERD Commenter
Installation	plugged/nerdtree-git-plugin/README.md	/^## Installation$/;"	s	chapter:nerdtree-git-plugin
Installation	plugged/nerdtree/README.markdown	/^## Installation$/;"	s	chapter:The NERDTree [![Vint](https://github.com/preservim/nerdtree/workflows/Vint/badge.svg)](https://github.com/preservim/nerdtree/actions?workflow=Vint)
Installation	plugged/nvim-treesitter/README.md	/^## Installation$/;"	s	chapter:Quickstart
Installation	plugged/vim-devicons/README.md	/^Installation$/;"	s
Installation	plugged/vim-easy-align/README.md	/^Installation$/;"	s	chapter:vim-easy-align ![travis-ci](https://travis-ci.org/junegunn/vim-easy-align.svg?branch=master)
Installation	plugged/vim-fugitive/README.markdown	/^## Installation$/;"	s	chapter:fugitive.vim
Installation	plugged/vim-nerdtree-tabs/README.md	/^## Installation$/;"	s	chapter:NERDTree and tabs together in Vim, painlessly
Installation	plugged/vim-one/README.md	/^## Installation$/;"	s
Installation	plugged/vim-oscyank/README.md	/^## Installation$/;"	s	chapter:vim-oscyank
Installation	plugged/vim-smoothie/README.md	/^Installation$/;"	s	chapter:vim-smoothie: Smooth scrolling for Vim done right🥤
Installation	plugged/vim-snippets/README.md	/^Installation$/;"	s	chapter:snipMate & UltiSnip Snippets
Installation:	plugged/vim-nerdtree-syntax-highlight/README.md	/^### Installation:$/;"	S	chapter:vim-nerdtree-syntax-highlight
Integration with other plugins	plugged/vim-devicons/DEVELOPER.md	/^#### Integration with other plugins$/;"	t	subsection:API
Interactive mode	plugged/vim-easy-align/README.md	/^### Interactive mode$/;"	S	section:vim-easy-align ![travis-ci](https://travis-ci.org/junegunn/vim-easy-align.svg?branch=master)""Usage
Introduction	plugged/nerdtree/README.markdown	/^## Introduction$/;"	s	chapter:The NERDTree [![Vint](https://github.com/preservim/nerdtree/workflows/Vint/badge.svg)](https://github.com/preservim/nerdtree/actions?workflow=Vint)
Issue description	plugged/ctrlsf.vim/.github/ISSUE_TEMPLATE.md	/^#### Issue description$/;"	t	section:Issue template
Issue template	plugged/ctrlsf.vim/.github/ISSUE_TEMPLATE.md	/^## Issue template$/;"	s
Italic	plugged/vim-monokai/README.md	/^### Italic$/;"	S	section:vim-monokai""Configuration
Italic support	plugged/vim-one/README.md	/^### Italic support$/;"	S	section:Usage
JB	plugged/ultisnips/test/constant.py	/^JB = "+"  # Jump backwards$/;"	v
JF	plugged/ultisnips/test/constant.py	/^JF = "?"  # Jump forwards$/;"	v
JumpDirection	plugged/ultisnips/pythonx/UltiSnips/position.py	/^class JumpDirection(Enum):$/;"	c
JumpForward_DefSnippet	plugged/ultisnips/test/test_Editing.py	/^class JumpForward_DefSnippet(_VimTest):$/;"	c
Key Maps	plugged/ctrlsf.vim/README.md	/^## Key Maps$/;"	s	chapter:ctrlsf.vim
Keybindings and completion	plugged/nvim-lspconfig/README.md	/^## Keybindings and completion$/;"	s	chapter:LSP overview
Keymaps	plugged/LuaSnip/README.md	/^## Keymaps$/;"	s	chapter:Setup
Keywords	plugged/nvim-treesitter/CONTRIBUTING.md	/^#### Keywords$/;"	t	subsection:Contributing to `nvim-treesitter`""Parser configurations""Highlights
Known Issues	plugged/auto-pairs/README.md	/^Known Issues$/;"	s	chapter:Auto Pairs
Known issues/incompatibilities	plugged/vim-smoothie/README.md	/^Known issues\/incompatibilities$/;"	s	chapter:vim-smoothie: Smooth scrolling for Vim done right🥤
LINE_COMMENT	plugged/LuaSnip/lua/luasnip/util/environ.lua	/^function lazy_vars.LINE_COMMENT()$/;"	f	unknown:lazy_vars
LOG_FILE	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set LOG_FILE=%~2$/;"	v
LOG_FILE	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^if [%LOG_FILE%]==[] set LOG_FILE=CON$/;"	v
LOG_FILE	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^set LOG_FILE=$/;"	v
LOG_FILE	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set LOG_FILE=%~2$/;"	v
LOG_FILE	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^if [%LOG_FILE%]==[] set LOG_FILE=CON$/;"	v
LOG_FILE	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set LOG_FILE=$/;"	v
LS	plugged/ultisnips/test/constant.py	/^LS = "@"  # List snippets$/;"	v
LSP overview	plugged/nvim-lspconfig/README.md	/^# LSP overview$/;"	c
LSP-SNIPPETS	plugged/LuaSnip/DOC.md	/^# LSP-SNIPPETS$/;"	c
Language maintainers	plugged/vim-snippets/README.md	/^Language maintainers$/;"	s	chapter:Versions / dialects / ..
Language parsers	plugged/nvim-treesitter/README.md	/^## Language parsers$/;"	s	chapter:Quickstart
LeaveTrailingWhitespace	plugged/ultisnips/test/test_Chars.py	/^class LeaveTrailingWhitespace(_VimTest):$/;"	c
Left/right/center mode switch in interactive mode	plugged/vim-easy-align/README.md	/^### Left\/right\/center mode switch in interactive mode$/;"	S	section:vim-easy-align ![travis-ci](https://travis-ci.org/junegunn/vim-easy-align.svg?branch=master)""Other options
Len	plugged/LuaSnip/lua/luasnip/extras/_lambda.lua	/^function lambda.Len(arg)$/;"	f	unknown:lambda
License	plugged/auto-pairs/README.md	/^License$/;"	s	chapter:Auto Pairs
License	plugged/vim-colors-github/README.md	/^License$/;"	s	chapter:GitHub color scheme for Vim
License	plugged/vim-devicons/README.md	/^License$/;"	s
License	plugged/vim-easy-align/README.md	/^License$/;"	s	chapter:vim-easy-align ![travis-ci](https://travis-ci.org/junegunn/vim-easy-align.svg?branch=master)
License	plugged/vim-fugitive/README.markdown	/^## License$/;"	s	chapter:fugitive.vim
License	plugged/vim-smoothie/README.md	/^License$/;"	s	chapter:vim-smoothie: Smooth scrolling for Vim done right🥤
License	plugged/vim-snippets/README.md	/^License$/;"	s	chapter:Versions / dialects / ..
Limitation	plugged/ctrlsf.vim/README.md	/^### Limitation$/;"	S	section:ctrlsf.vim""Edit Mode
LineIterator	plugged/ultisnips/pythonx/UltiSnips/text.py	/^class LineIterator:$/;"	c
Lint	plugged/nvim-lspconfig/CONTRIBUTING.md	/^## Lint$/;"	s
List of enhanced language support	plugged/vim-one/README.md	/^## List of enhanced language support$/;"	s
List of options	plugged/vim-easy-align/README.md	/^### List of options$/;"	S	section:vim-easy-align ![travis-ci](https://travis-ci.org/junegunn/vim-easy-align.svg?branch=master)""Alignment options
ListAllAvailable_BraceInFront_ExpectCorrectResult	plugged/ultisnips/test/test_ListSnippets.py	/^class ListAllAvailable_BraceInFront_ExpectCorrectResult(_ListAllSnippets):$/;"	c
ListAllAvailable_Disabled_ExpectCorrectResult	plugged/ultisnips/test/test_ListSnippets.py	/^class ListAllAvailable_Disabled_ExpectCorrectResult(_ListAllSnippets):$/;"	c
ListAllAvailable_NonDefined_NoExpectionShouldBeRaised	plugged/ultisnips/test/test_ListSnippets.py	/^class ListAllAvailable_NonDefined_NoExpectionShouldBeRaised(_ListAllSnippets):$/;"	c
ListAllAvailable_NothingTyped_ExpectCorrectResult	plugged/ultisnips/test/test_ListSnippets.py	/^class ListAllAvailable_NothingTyped_ExpectCorrectResult(_ListAllSnippets):$/;"	c
ListAllAvailable_SpaceInFront_ExpectCorrectResult	plugged/ultisnips/test/test_ListSnippets.py	/^class ListAllAvailable_SpaceInFront_ExpectCorrectResult(_ListAllSnippets):$/;"	c
ListAllAvailable_testtypedSecondOpt_ExpectCorrectResult	plugged/ultisnips/test/test_ListSnippets.py	/^class ListAllAvailable_testtypedSecondOpt_ExpectCorrectResult(_ListAllSnippets):$/;"	c
ListAllAvailable_testtyped_ExpectCorrectResult	plugged/ultisnips/test/test_ListSnippets.py	/^class ListAllAvailable_testtyped_ExpectCorrectResult(_ListAllSnippets):$/;"	c
Live interactive mode	plugged/vim-easy-align/README.md	/^#### Live interactive mode$/;"	t	subsection:vim-easy-align ![travis-ci](https://travis-ci.org/junegunn/vim-easy-align.svg?branch=master)""Usage""Interactive mode
LiveEasyAlign	plugged/vim-easy-align/plugin/easy_align.vim	/^command! -nargs=* -range -bang LiveEasyAlign <line1>,<line2>call easy_align#align(<bang>0, 1, 'c/;"	c
Locals	plugged/nvim-treesitter/CONTRIBUTING.md	/^### Locals$/;"	S	section:Contributing to `nvim-treesitter`""Parser configurations
LoopParseArgs	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^:LoopParseArgs$/;"	l
LoopParseArgs	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^:LoopParseArgs$/;"	l
LuaSnip	plugged/LuaSnip/README.md	/^# LuaSnip$/;"	c
LuaSnipListAvailable	plugged/LuaSnip/plugin/luasnip.vim	/^command! LuaSnipListAvailable lua print(vim.inspect(require'luasnip'.available()))$/;"	c
LuaSnipUnlinkCurrent	plugged/LuaSnip/plugin/luasnip.vim	/^command! LuaSnipUnlinkCurrent lua require'luasnip'.unlink_current()$/;"	c
MAKEFILE_DIR	plugged/ultisnips/Makefile	/^MAKEFILE_DIR := $(dir ${MAKEFILE_PATH})$/;"	m
MAKEFILE_PATH	plugged/ultisnips/Makefile	/^MAKEFILE_PATH := $(abspath $(lastword $(MAKEFILE_LIST)))$/;"	m
Manual	plugged/current-func-info.vim/README.md	/^Manual$/;"	s	chapter:Installation
Manual Installation	plugged/nerdcommenter/README.md	/^### Manual Installation$/;"	S	section:NERD Commenter""Installation
Manually	plugged/vim-monokai/README.md	/^### Manually$/;"	S	section:vim-monokai""Install
MatchIsTooCheap	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class MatchIsTooCheap(_Base, unittest.TestCase):$/;"	c
Mirror	plugged/ultisnips/pythonx/UltiSnips/text_objects/mirror.py	/^class Mirror(NoneditableTextObject):$/;"	c
MirrorBeforeTabstopLeave_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class MirrorBeforeTabstopLeave_ExpectCorrectResult(_VimTest):$/;"	c
MirrorBeforeTabstopOverwrite_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class MirrorBeforeTabstopOverwrite_ExpectCorrectResult(_VimTest):$/;"	c
MirrorRealLifeExample_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class MirrorRealLifeExample_ExpectCorrectResult(_VimTest):$/;"	c
MirrorToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class MirrorToken(Token):$/;"	c
Mirror_TestKillTabstop_Kill	plugged/ultisnips/test/test_Mirror.py	/^class Mirror_TestKillTabstop_Kill(_VimTest):$/;"	c
Mirror_TestKill_InsertAfter_NoKill	plugged/ultisnips/test/test_Mirror.py	/^class Mirror_TestKill_InsertAfter_NoKill(_VimTest):$/;"	c
Mirror_TestKill_InsertBefore_NoKill	plugged/ultisnips/test/test_Mirror.py	/^class Mirror_TestKill_InsertBefore_NoKill(_VimTest):$/;"	c
Mirror_TestKill_InsertBeginning_Kill	plugged/ultisnips/test/test_Mirror.py	/^class Mirror_TestKill_InsertBeginning_Kill(_VimTest):$/;"	c
Mirror_TestKill_InsertEnd_Kill	plugged/ultisnips/test/test_Mirror.py	/^class Mirror_TestKill_InsertEnd_Kill(_VimTest):$/;"	c
Misc	plugged/nvim-treesitter/CONTRIBUTING.md	/^#### Misc$/;"	t	subsection:Contributing to `nvim-treesitter`""Parser configurations""Highlights
Mitigating lag issues	plugged/vim-nerdtree-syntax-highlight/README.md	/^### Mitigating lag issues$/;"	S	chapter:vim-nerdtree-syntax-highlight
Modules	plugged/nvim-treesitter/README.md	/^## Modules$/;"	s	chapter:Quickstart
Motions	plugged/nerdcommenter/README.md	/^## Motions$/;"	s	chapter:NERD Commenter
MovePosition_DelSameLine	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^class MovePosition_DelSameLine(_MPBase, unittest.TestCase):$/;"	c
MovePosition_DelSameLine1	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^class MovePosition_DelSameLine1(_MPBase, unittest.TestCase):$/;"	c
MovePosition_DelSecondLine	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^class MovePosition_DelSecondLine(_MPBase, unittest.TestCase):$/;"	c
MovePosition_DelSecondLine1	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^class MovePosition_DelSecondLine1(_MPBase, unittest.TestCase):$/;"	c
MovePosition_InsSameLine1	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^class MovePosition_InsSameLine1(_MPBase, unittest.TestCase):$/;"	c
MovePosition_InsSameLine2	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^class MovePosition_InsSameLine2(_MPBase, unittest.TestCase):$/;"	c
MultiLine	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class MultiLine(_Base, unittest.TestCase):$/;"	c
MultiLineDefault_BS	plugged/ultisnips/test/test_Chars.py	/^class MultiLineDefault_BS(_MultiLineDefault):$/;"	c
MultiLineDefault_Jump	plugged/ultisnips/test/test_Chars.py	/^class MultiLineDefault_Jump(_MultiLineDefault):$/;"	c
MultiLineDefault_Type	plugged/ultisnips/test/test_Chars.py	/^class MultiLineDefault_Type(_MultiLineDefault):$/;"	c
MultiWordSnippet_Simple	plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWordSnippet_Simple(_VimTest):$/;"	c
MultiWord_SnippetOptions_ExpandInwordSnippets_ExpandSingle	plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_ExpandInwordSnippets_ExpandSingle(_VimTest):$/;"	c
MultiWord_SnippetOptions_ExpandInwordSnippets_SimpleExpand	plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_ExpandInwordSnippets_SimpleExpand(_VimTest):$/;"	c
MultiWord_SnippetOptions_ExpandWordSnippets_ExpandSuffix	plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_ExpandWordSnippets_ExpandSuffix($/;"	c
MultiWord_SnippetOptions_ExpandWordSnippets_NoExpand	plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_ExpandWordSnippets_NoExpand($/;"	c
MultiWord_SnippetOptions_ExpandWordSnippets_NormalExpand	plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_ExpandWordSnippets_NormalExpand($/;"	c
MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_DontExpand	plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_DontExpand(_VimTest):$/;"	c
MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand	plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand(_VimTest):$/;"	c
MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand2	plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand2(_VimTest):$/;"	c
MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO	plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO(_VimTest):$/;"	c
MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose	plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose(_VimTest):$/;"	c
Multibyte Pairs	plugged/auto-pairs/README.md	/^Multibyte Pairs$/;"	s	chapter:Auto Pairs
MultilineExpandTestTyping_ExpectCorrectResult	plugged/ultisnips/test/test_Expand.py	/^class MultilineExpandTestTyping_ExpectCorrectResult(_VimTest):$/;"	c
MultilineExpand_ExpectCorrectResult	plugged/ultisnips/test/test_Expand.py	/^class MultilineExpand_ExpectCorrectResult(_VimTest):$/;"	c
MultilineTabStopSimpleMirrorDeleteInLine_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class MultilineTabStopSimpleMirrorDeleteInLine_ExpectCorrectResult(_VimTest):$/;"	c
MultilineTabStopSimpleMirrorMultiline1_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class MultilineTabStopSimpleMirrorMultiline1_ExpectCorrectResult(_VimTest):$/;"	c
MultilineTabStopSimpleMirrorMultiline_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class MultilineTabStopSimpleMirrorMultiline_ExpectCorrectResult(_VimTest):$/;"	c
Multiple_ManySnippetsOneTrigger_ECR	plugged/ultisnips/test/test_MultipleMatches.py	/^class Multiple_ManySnippetsOneTrigger_ECR(_VimTest):$/;"	c
Multiple_SimpleCaseEscapeOut_ECR	plugged/ultisnips/test/test_MultipleMatches.py	/^class Multiple_SimpleCaseEscapeOut_ECR(_MultipleMatches):$/;"	c
Multiple_SimpleCaseSelectFirst_ECR	plugged/ultisnips/test/test_MultipleMatches.py	/^class Multiple_SimpleCaseSelectFirst_ECR(_MultipleMatches):$/;"	c
Multiple_SimpleCaseSelectSecond_ECR	plugged/ultisnips/test/test_MultipleMatches.py	/^class Multiple_SimpleCaseSelectSecond_ECR(_MultipleMatches):$/;"	c
Multiple_SimpleCaseSelectTooHigh_ESelectLast	plugged/ultisnips/test/test_MultipleMatches.py	/^class Multiple_SimpleCaseSelectTooHigh_ESelectLast(_MultipleMatches):$/;"	c
Multiple_SimpleCaseSelectZero_EEscape	plugged/ultisnips/test/test_MultipleMatches.py	/^class Multiple_SimpleCaseSelectZero_EEscape(_MultipleMatches):$/;"	c
NERD Commenter	plugged/nerdcommenter/README.md	/^# NERD Commenter$/;"	c
NERDComment	plugged/nerdcommenter/plugin/nerdcommenter.vim	/^function! NERDComment(mode, type) range$/;"	f
NERDCommentIsCharCommented	plugged/nerdcommenter/plugin/nerdcommenter.vim	/^function! NERDCommentIsCharCommented(line, col)$/;"	f
NERDCommentIsLineCommented	plugged/nerdcommenter/plugin/nerdcommenter.vim	/^function! NERDCommentIsLineCommented(lineNo)$/;"	f
NERDTree	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^    command! -n=? -complete=dir -bar NERDTree :call g:NERDTreeCreator.CreateTabTree('<args>')$/;"	c
NERDTree	plugged/nerdtree/plugin/NERD_tree.vim	/^augroup NERDTree$/;"	a
NERDTree Change Log	plugged/nerdtree/CHANGELOG.md	/^# NERDTree Change Log$/;"	c
NERDTree Plugins	plugged/nerdtree/README.markdown	/^## NERDTree Plugins$/;"	s	chapter:The NERDTree [![Vint](https://github.com/preservim/nerdtree/workflows/Vint/badge.svg)](https://github.com/preservim/nerdtree/actions?workflow=Vint)
NERDTree and tabs together in Vim, painlessly	plugged/vim-nerdtree-tabs/README.md	/^# NERDTree and tabs together in Vim, painlessly$/;"	c
NERDTreeAddKeyMap	plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddKeyMap(options)$/;"	f
NERDTreeAddMenuItem	plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuItem(options)$/;"	f
NERDTreeAddMenuSeparator	plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuSeparator(...)$/;"	f
NERDTreeAddNode	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeAddNode()$/;"	f
NERDTreeAddPathFilter	plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddPathFilter(callback)$/;"	f
NERDTreeAddSubmenu	plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddSubmenu(options)$/;"	f
NERDTreeAutoCenter	init.vim	/^let NERDTreeAutoCenter=1$/;"	v
NERDTreeCWD	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^    command! -n=0 -bar NERDTreeCWD call NERDTreeCWD()$/;"	c
NERDTreeCWD	plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeCWD()$/;"	f
NERDTreeChDirOnTabSwitch	plugged/nerdtree/plugin/NERD_tree.vim	/^    augroup NERDTreeChDirOnTabSwitch$/;"	a
NERDTreeClose	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^    command! -n=0 -bar NERDTreeClose :call g:NERDTree.Close()$/;"	c
NERDTreeCopyNode	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeCopyNode()$/;"	f
NERDTreeCopyPath	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeCopyPath()$/;"	f
NERDTreeDeleteNode	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeDeleteNode()$/;"	f
NERDTreeExecFile	plugged/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFile()$/;"	f
NERDTreeExecFileActive	plugged/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFileActive()$/;"	f
NERDTreeExecuteFile	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeExecuteFile()$/;"	f
NERDTreeExecuteFileLinux	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeExecuteFileLinux()$/;"	f
NERDTreeExecuteFileWindows	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeExecuteFileWindows()$/;"	f
NERDTreeFind	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^    command! -n=? -complete=file -bar NERDTreeFind call s:findAndRevealPath('<args>')$/;"	c
NERDTreeFlagsTrans	plugged/vim-nerdtree-syntax-highlight/after/syntax/nerdtree.vim	/^    let NERDTreeFlagsTrans = synIDattr(synIDtrans(hlID('NERDTreeFlags')), 'name')$/;"	v
NERDTreeFocus	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^    command! -n=0 -bar NERDTreeFocus call NERDTreeFocus()$/;"	c
NERDTreeFocus	plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeFocus()$/;"	f
NERDTreeFocusToggle	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^command! NERDTreeFocusToggle  call <SID>NERDTreeFocusToggle()$/;"	c
NERDTreeFromBookmark	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^    command! -n=1 -complete=customlist,nerdtree#completeBookmarks -bar NERDTreeFromBookmark call/;"	c
NERDTreeHijackNetrw	plugged/nerdtree/plugin/NERD_tree.vim	/^    augroup NERDTreeHijackNetrw$/;"	a
NERDTreeIgnore	init.vim	/^let NERDTreeIgnore=['\\.pyc','\\~$','\\.swp']$/;"	v
NERDTreeListNode	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeListNode()$/;"	f
NERDTreeListNodeWin32	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeListNodeWin32()$/;"	f
NERDTreeMirror	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^    command! -n=0 -bar NERDTreeMirror call g:NERDTreeCreator.CreateMirror()$/;"	c
NERDTreeMirrorOpen	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^command! NERDTreeMirrorOpen   call <SID>NERDTreeMirrorOrCreate()$/;"	c
NERDTreeMirrorToggle	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^command! NERDTreeMirrorToggle call <SID>NERDTreeMirrorToggle()$/;"	c
NERDTreeMoveNode	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeMoveNode()$/;"	f
NERDTreeQuickLook	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeQuickLook()$/;"	f
NERDTreeRefreshRoot	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^    command! -n=0 -bar NERDTreeRefreshRoot call s:refreshRoot()$/;"	c
NERDTreeRender	plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeRender()$/;"	f
NERDTreeRevealFileLinux	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeRevealFileLinux()$/;"	f
NERDTreeRevealInFinder	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeRevealInFinder()$/;"	f
NERDTreeShowBookmarks	init.vim	/^let NERDTreeShowBookmarks=2$/;"	v
NERDTreeShowHidden	init.vim	/^let NERDTreeShowHidden=1$/;"	v
NERDTreeShowLineNumbers	init.vim	/^let NERDTreeShowLineNumbers=0$/;"	v
NERDTreeSteppedClose	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^command! NERDTreeSteppedClose call <SID>NERDTreeSteppedClose()$/;"	c
NERDTreeSteppedOpen	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^command! NERDTreeSteppedOpen  call <SID>NERDTreeSteppedOpen()$/;"	c
NERDTreeSystemCommand	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeSystemCommand()$/;"	f
NERDTreeTabs	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^  augroup NERDTreeTabs$/;"	a
NERDTreeTabsClose	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^command! NERDTreeTabsClose    call <SID>NERDTreeCloseAllTabs()$/;"	c
NERDTreeTabsFind	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^command! NERDTreeTabsFind     call <SID>NERDTreeFindFile()$/;"	c
NERDTreeTabsOpen	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^command! NERDTreeTabsOpen     call <SID>NERDTreeOpenAllTabs()$/;"	c
NERDTreeTabsToggle	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^command! NERDTreeTabsToggle   call <SID>NERDTreeToggleAllTabs()$/;"	c
NERDTreeToggle	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^    command! -n=? -complete=dir -bar NERDTreeToggle :call g:NERDTreeCreator.ToggleTabTree('<args/;"	c
NERDTreeToggleVCS	plugged/nerdtree/nerdtree_plugin/vcs.vim	/^command! -n=? -complete=dir -bar NERDTreeToggleVCS :call <SID>ToggleTabTreeVCS('<args>')$/;"	c
NERDTreeVCS	plugged/nerdtree/nerdtree_plugin/vcs.vim	/^command! -n=? -complete=dir -bar NERDTreeVCS :call <SID>CreateTabTreeVCS('<args>')$/;"	c
NERDTreeWebDevIconsRefreshListener	plugged/vim-devicons/plugin/webdevicons.vim	/^function! NERDTreeWebDevIconsRefreshListener(event)$/;"	f
NEVER	plugged/vim-snippets/pythonx/javascript_snippets.py	/^NEVER = 'never'$/;"	v
New Version Info	plugged/nerdtree/.github/PULL_REQUEST_TEMPLATE.md	/^### New Version Info$/;"	S
New project	plugged/nerdtree-git-plugin/README.md	/^## New project$/;"	s	chapter:nerdtree-git-plugin
No longer actively maintained	plugged/vim-nerdtree-tabs/README.md	/^# No longer actively maintained$/;"	c
NoUmlautsBeforeTriggerAndCharsAfter	plugged/ultisnips/test/test_Chars.py	/^class NoUmlautsBeforeTriggerAndCharsAfter(_UmlautsBase):$/;"	c
No_Tab_Expand_ET	plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_ET(_No_Tab_Expand):$/;"	c
No_Tab_Expand_ET_Leading_Spaces	plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_ET_Leading_Spaces(_No_Tab_Expand):$/;"	c
No_Tab_Expand_ET_SW	plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_ET_SW(_No_Tab_Expand):$/;"	c
No_Tab_Expand_ET_SW_TS	plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_ET_SW_TS(_No_Tab_Expand):$/;"	c
No_Tab_Expand_Leading_Spaces	plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_Leading_Spaces(_No_Tab_Expand):$/;"	c
No_Tab_Expand_Leading_Tabs	plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_Leading_Tabs(_No_Tab_Expand):$/;"	c
No_Tab_Expand_No_TS	plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_No_TS(_No_Tab_Expand):$/;"	c
No_Tab_Expand_RealWorld	plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_RealWorld(_TabExpand_RealWorld, _VimTest):$/;"	c
No_Tab_Expand_Simple	plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_Simple(_No_Tab_Expand):$/;"	c
NonUnicodeDataInUnnamedRegister	plugged/ultisnips/test/test_Fixes.py	/^class NonUnicodeDataInUnnamedRegister(_VimTest):$/;"	c
NoneditableTextObject	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^class NoneditableTextObject(TextObject):$/;"	c
Not	plugged/LuaSnip/lua/luasnip/extras/_lambda.lua	/^function lambda.Not(arg)$/;"	f	unknown:lambda
NvimTreesitter	plugged/nvim-treesitter/plugin/nvim-treesitter.vim	/^augroup NvimTreesitter$/;"	a
OSCYank	plugged/vim-oscyank/plugin/oscyank.vim	/^command! -range OSCYank <line1>,<line2>call OSCYankVisual()$/;"	c
OSCYankOperator	plugged/vim-oscyank/plugin/oscyank.vim	/^function! OSCYankOperator(type, ...) abort$/;"	f
OSCYankReg	plugged/vim-oscyank/plugin/oscyank.vim	/^command! -nargs=1 OSCYankReg call OSCYankString(getreg(<f-args>))$/;"	c
OSCYankString	plugged/vim-oscyank/plugin/oscyank.vim	/^function! OSCYankString(str)$/;"	f
OSCYankVisual	plugged/vim-oscyank/plugin/oscyank.vim	/^function! OSCYankVisual() range$/;"	f
OldSelection_RealWorldCase_Test	plugged/ultisnips/test/test_Selection.py	/^class OldSelection_RealWorldCase_Test(_OS_Base):$/;"	c
OldSelection_SimpleTabstop_Test	plugged/ultisnips/test/test_Selection.py	/^class OldSelection_SimpleTabstop_Test(_OS_Base):$/;"	c
OpenBookmark	plugged/nerdtree/lib/nerdtree/creator.vim	/^    command! -buffer -complete=customlist,nerdtree#completeBookmarks -nargs=1 OpenBookmark call /;"	c
Optional Info	plugged/vim-devicons/.github/ISSUE_TEMPLATE.md	/^#### Optional Info$/;"	t
Options	plugged/auto-pairs/README.md	/^Options$/;"	s	chapter:Auto Pairs
OsName	plugged/nvim-treesitter/tests/indent/python/basic_blocks.py	/^    name as OsName$/;"	x	nameref:unknown:name
Other options	plugged/vim-easy-align/README.md	/^Other options$/;"	s	chapter:vim-easy-align ![travis-ci](https://travis-ci.org/junegunn/vim-easy-align.svg?branch=master)
Other terminals with OSC52 support	plugged/vim-oscyank/README.md	/^## Other terminals with OSC52 support$/;"	s	chapter:vim-oscyank
Our Pledge	plugged/vim-devicons/CODE_OF_CONDUCT.md	/^## Our Pledge$/;"	s	chapter:Contributor Covenant Code of Conduct
Our Responsibilities	plugged/vim-devicons/CODE_OF_CONDUCT.md	/^## Our Responsibilities$/;"	s	chapter:Contributor Covenant Code of Conduct
Our Standards	plugged/vim-devicons/CODE_OF_CONDUCT.md	/^## Our Standards$/;"	s	chapter:Contributor Covenant Code of Conduct
P	plugged/LuaSnip/lua/luasnip/extras/_lambda.lua	/^local function P(t)$/;"	f
P	plugged/LuaSnip/lua/luasnip/nodes/snippet.lua	/^local function P(indx)$/;"	f
PAUSE_BEFORE_EXIT	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set PAUSE_BEFORE_EXIT=1$/;"	v
PAUSE_BEFORE_EXIT	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set PAUSE_BEFORE_EXIT=0$/;"	v
PH	plugged/LuaSnip/lua/luasnip/extras/_lambda.lua	/^local function PH(idx)$/;"	f
PLENARY_PATH	plugged/LuaSnip/Makefile	/^PLENARY_PATH=deps\/plenary.nvim$/;"	m
POST_PROCESS_CMD	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set POST_PROCESS_CMD=%~2$/;"	v
POST_PROCESS_CMD	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set POST_PROCESS_CMD=$/;"	v
PROJECT_ROOT	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set PROJECT_ROOT=%~2$/;"	v
PROJECT_ROOT	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set PROJECT_ROOT=$/;"	v
PROJ_ROOT	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set PROJ_ROOT=%~2$/;"	v
ParseArgs	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^:ParseArgs$/;"	l
ParseArgs	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^:ParseArgs$/;"	l
ParseSnippets_ClearAll	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_ClearAll(_VimTest):$/;"	c
ParseSnippets_ClearOne	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_ClearOne(_VimTest):$/;"	c
ParseSnippets_ClearTwo	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_ClearTwo(_VimTest):$/;"	c
ParseSnippets_ExtendsWithoutFiletype	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_ExtendsWithoutFiletype(_VimTest):$/;"	c
ParseSnippets_Global_Local_Python	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_Global_Local_Python(_VimTest):$/;"	c
ParseSnippets_Global_Python	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_Global_Python(_VimTest):$/;"	c
ParseSnippets_InvalidPriorityLine	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_InvalidPriorityLine(_VimTest):$/;"	c
ParseSnippets_InvalidPriorityLine1	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_InvalidPriorityLine1(_VimTest):$/;"	c
ParseSnippets_MissingEndSnippet	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MissingEndSnippet(_VimTest):$/;"	c
ParseSnippets_MultiWord_Description	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_Description(_ParseSnippets_MultiWord):$/;"	c
ParseSnippets_MultiWord_Description_Option	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_Description_Option(_ParseSnippets_MultiWord):$/;"	c
ParseSnippets_MultiWord_NoContainer	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_NoContainer(_VimTest):$/;"	c
ParseSnippets_MultiWord_Quotes	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_Quotes(_VimTest):$/;"	c
ParseSnippets_MultiWord_RE1	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_RE1(_ParseSnippets_MultiWord_RE):$/;"	c
ParseSnippets_MultiWord_RE2	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_RE2(_ParseSnippets_MultiWord_RE):$/;"	c
ParseSnippets_MultiWord_RE3	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_RE3(_ParseSnippets_MultiWord_RE):$/;"	c
ParseSnippets_MultiWord_Simple	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_Simple(_ParseSnippets_MultiWord):$/;"	c
ParseSnippets_MultiWord_UnmatchedContainer	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_UnmatchedContainer(_VimTest):$/;"	c
ParseSnippets_MultiWord_WithQuotes	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_WithQuotes(_VimTest):$/;"	c
ParseSnippets_PrintErroneousSnippet	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_PrintErroneousSnippet(_VimTest):$/;"	c
ParseSnippets_PrintErroneousSnippetContext	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_PrintErroneousSnippetContext(_VimTest):$/;"	c
ParseSnippets_PrintErroneousSnippetLocation	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_PrintErroneousSnippetLocation(_VimTest):$/;"	c
ParseSnippets_PrintErroneousSnippetPostAction	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_PrintErroneousSnippetPostAction(_VimTest):$/;"	c
ParseSnippets_PrintErroneousSnippetPreAction	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_PrintErroneousSnippetPreAction(_VimTest):$/;"	c
ParseSnippets_PrintPythonStacktrace	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_PrintPythonStacktrace(_VimTest):$/;"	c
ParseSnippets_PrintPythonStacktraceMultiline	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_PrintPythonStacktraceMultiline(_VimTest):$/;"	c
ParseSnippets_SimpleSnippet	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_SimpleSnippet(_VimTest):$/;"	c
ParseSnippets_UnknownDirective	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_UnknownDirective(_VimTest):$/;"	c
Parser configurations	plugged/nvim-treesitter/CONTRIBUTING.md	/^## Parser configurations$/;"	s	chapter:Contributing to `nvim-treesitter`
Partial alignment in blockwise-visual mode	plugged/vim-easy-align/README.md	/^### Partial alignment in blockwise-visual mode$/;"	S	section:vim-easy-align ![travis-ci](https://travis-ci.org/junegunn/vim-easy-align.svg?branch=master)""Usage
PebkacError	plugged/ultisnips/pythonx/UltiSnips/error.py	/^class PebkacError(RuntimeError):$/;"	c
PerlSyntaxFold	plugged/ultisnips/test/test_Folding.py	/^class PerlSyntaxFold(_VimTest):$/;"	c
Plugin_SuperTab_SimpleTest	plugged/ultisnips/test/test_Plugin.py	/^class Plugin_SuperTab_SimpleTest(_VimTest):$/;"	c
Position	plugged/ultisnips/pythonx/UltiSnips/position.py	/^class Position:$/;"	c
Post Installation	plugged/nerdcommenter/README.md	/^### Post Installation$/;"	S	section:NERD Commenter""Installation
Prerequisite	plugged/vim-easy-align/test/README.md	/^### Prerequisite$/;"	S	chapter:Test cases for vim-easy-align
Programatic API	plugged/nvim-cmp/README.md	/^Programatic API$/;"	c
Promotion	plugged/vim-devicons/README.md	/^### Promotion$/;"	S	section:Contributing
ProperIndenting_AutoIndentAndNewline_ECR	plugged/ultisnips/test/test_Format.py	/^class ProperIndenting_AutoIndentAndNewline_ECR(_VimTest):$/;"	c
ProperIndenting_FirstLineInFileComplete_ECR	plugged/ultisnips/test/test_Format.py	/^class ProperIndenting_FirstLineInFileComplete_ECR(ProperIndenting_FirstLineInFile_ECR):$/;"	c
ProperIndenting_FirstLineInFile_ECR	plugged/ultisnips/test/test_Format.py	/^class ProperIndenting_FirstLineInFile_ECR(_VimTest):$/;"	c
ProperIndenting_SimpleCase_ECR	plugged/ultisnips/test/test_Format.py	/^class ProperIndenting_SimpleCase_ECR(_VimTest):$/;"	c
ProperIndenting_SingleLineNoReindenting_ECR	plugged/ultisnips/test/test_Format.py	/^class ProperIndenting_SingleLineNoReindenting_ECR(_VimTest):$/;"	c
Public Methods	plugged/vim-devicons/DEVELOPER.md	/^#### Public Methods$/;"	t	subsection:API
Pushing	plugged/vim-gutentags/CONTRIBUTING.md	/^## Pushing$/;"	s	chapter:Contributing
PythonCode	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^class PythonCode(NoneditableTextObject):$/;"	c
PythonCodeOld_IndentedMultiline	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCodeOld_IndentedMultiline(_VimTest):$/;"	c
PythonCodeOld_ReferencePlaceholderAfter	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCodeOld_ReferencePlaceholderAfter(_VimTest):$/;"	c
PythonCodeOld_ReferencePlaceholderBefore	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCodeOld_ReferencePlaceholderBefore(_VimTest):$/;"	c
PythonCodeOld_SimpleExample	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCodeOld_SimpleExample(_VimTest):$/;"	c
PythonCodeOld_TransformedBeforeMultiLine	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCodeOld_TransformedBeforeMultiLine(_VimTest):$/;"	c
PythonCodeToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class PythonCodeToken(Token):$/;"	c
PythonCode_AccessKilledTabstop_OverwriteFirst	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_AccessKilledTabstop_OverwriteFirst(_VimTest):$/;"	c
PythonCode_AccessKilledTabstop_OverwriteSecond	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_AccessKilledTabstop_OverwriteSecond(_VimTest):$/;"	c
PythonCode_CanOverwriteTabstop	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_CanOverwriteTabstop(_VimTest):$/;"	c
PythonCode_IndentEtSw	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_IndentEtSw(_VimTest):$/;"	c
PythonCode_IndentEtSwOffset	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_IndentEtSwOffset(_VimTest):$/;"	c
PythonCode_IndentNoetSwTs	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_IndentNoetSwTs(_VimTest):$/;"	c
PythonCode_IndentProblem	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_IndentProblem(_VimTest):$/;"	c
PythonCode_Locals	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_Locals(_VimTest):$/;"	c
PythonCode_LongerTextThanSource_Chars	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_LongerTextThanSource_Chars(_VimTest):$/;"	c
PythonCode_LongerTextThanSource_MultiLine	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_LongerTextThanSource_MultiLine(_VimTest):$/;"	c
PythonCode_MultiAppend	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_MultiAppend(_VimTest):$/;"	c
PythonCode_MultiAppendShift	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_MultiAppendShift(_VimTest):$/;"	c
PythonCode_MultiAppendShiftMethods	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_MultiAppendShiftMethods(_VimTest):$/;"	c
PythonCode_MultiAppendSimpleIndent	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_MultiAppendSimpleIndent(_VimTest):$/;"	c
PythonCode_MultilineIndented	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_MultilineIndented(_VimTest):$/;"	c
PythonCode_OptExists	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_OptExists(_VimTest):$/;"	c
PythonCode_OptNoExists	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_OptNoExists(_VimTest):$/;"	c
PythonCode_ReferencePlaceholder	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_ReferencePlaceholder(_VimTest):$/;"	c
PythonCode_ReferencePlaceholderBefore	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_ReferencePlaceholderBefore(_VimTest):$/;"	c
PythonCode_ResetIndent	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_ResetIndent(_VimTest):$/;"	c
PythonCode_SimpleAppend	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_SimpleAppend(_VimTest):$/;"	c
PythonCode_SimpleExample	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_SimpleExample(_VimTest):$/;"	c
PythonCode_SimpleExample_ReturnValueIsEmptyString	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_SimpleExample_ReturnValueIsEmptyString(_VimTest):$/;"	c
PythonCode_SimpleMkline	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_SimpleMkline(_VimTest):$/;"	c
PythonCode_TransformedBeforeMultiLine	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_TransformedBeforeMultiLine(_VimTest):$/;"	c
PythonCode_TrickyReferences	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_TrickyReferences(_VimTest):$/;"	c
PythonCode_UseNewOverOld	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_UseNewOverOld(_VimTest):$/;"	c
PythonVisual_HasAccessToSelectedPlaceholders	plugged/ultisnips/test/test_Interpolation.py	/^class PythonVisual_HasAccessToSelectedPlaceholders(_VimTest):$/;"	c
PythonVisual_HasAccessToZeroPlaceholders	plugged/ultisnips/test/test_Interpolation.py	/^class PythonVisual_HasAccessToZeroPlaceholders(_VimTest):$/;"	c
PythonVisual_LineSelect_Simple	plugged/ultisnips/test/test_Interpolation.py	/^class PythonVisual_LineSelect_Simple(_VimTest):$/;"	c
PythonVisual_NoVisualSelection_Ignore	plugged/ultisnips/test/test_Interpolation.py	/^class PythonVisual_NoVisualSelection_Ignore(_VimTest):$/;"	c
PythonVisual_SelectOneWord	plugged/ultisnips/test/test_Interpolation.py	/^class PythonVisual_SelectOneWord(_VimTest):$/;"	c
Python_SnipRvCanBeNonText	plugged/ultisnips/test/test_Interpolation.py	/^class Python_SnipRvCanBeNonText(_VimTest):$/;"	c
Quick Start	plugged/ctrlsf.vim/README.md	/^## Quick Start$/;"	s	chapter:ctrlsf.vim
Quick Start	plugged/ultisnips/README.md	/^Quick Start$/;"	s	chapter:UltiSnips
Quick start guide	plugged/vim-easy-align/README.md	/^Quick start guide$/;"	s	chapter:vim-easy-align ![travis-ci](https://travis-ci.org/junegunn/vim-easy-align.svg?branch=master)
QuickCopy	init.vim	/^function QuickCopy() range$/;"	f
QuickCut	init.vim	/^function QuickCut() range$/;"	f
QuickDebug	init.vim	/^function QuickDebug()$/;"	f
QuickRun	init.vim	/^function QuickRun()$/;"	f
QuickTest	init.vim	/^function QuickTest()$/;"	f
Quickstart	plugged/nvim-lspconfig/README.md	/^## Quickstart$/;"	s	chapter:LSP overview
Quickstart	plugged/nvim-treesitter/README.md	/^# Quickstart$/;"	c
RANDOM	plugged/LuaSnip/lua/luasnip/util/environ.lua	/^function lazy_vars.RANDOM()$/;"	f	unknown:lazy_vars
RANDOM_HEX	plugged/LuaSnip/lua/luasnip/util/environ.lua	/^function lazy_vars.RANDOM_HEX()$/;"	f	unknown:lazy_vars
RELATIVE_FILEPATH	plugged/LuaSnip/lua/luasnip/util/environ.lua	/^function lazy_vars.RELATIVE_FILEPATH() -- The relative (to the opened workspace or folder) file /;"	f	unknown:lazy_vars
ReadBookmarks	plugged/nerdtree/lib/nerdtree/creator.vim	/^    command! -buffer -nargs=0 ReadBookmarks call g:NERDTreeBookmark.CacheBookmarks(0) <bar> call/;"	c
Readme!	plugged/nvim-cmp/README.md	/^Readme!$/;"	c
RecTabStopsWithExpandtab_SimpleExample_ECR	plugged/ultisnips/test/test_Format.py	/^class RecTabStopsWithExpandtab_SimpleExample_ECR(_ExpandTabs):$/;"	c
RecTabStopsWithExpandtab_SpecialIndentProblem_ECR	plugged/ultisnips/test/test_Format.py	/^class RecTabStopsWithExpandtab_SpecialIndentProblem_ECR(_ExpandTabs):$/;"	c
RecTabStops_BarelyNotLeavingInner_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_BarelyNotLeavingInner_ECR(_VimTest):$/;"	c
RecTabStops_ChildTriggerContainsParentTextObjects	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_ChildTriggerContainsParentTextObjects(_VimTest):$/;"	c
RecTabStops_ExpandedInZeroTSSecondTime_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_ExpandedInZeroTSSecondTime_ECR(_VimTest):$/;"	c
RecTabStops_ExpandedInZeroTSTwice_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_ExpandedInZeroTSTwice_ECR(_VimTest):$/;"	c
RecTabStops_ExpandedInZeroTS_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_ExpandedInZeroTS_ECR(_VimTest):$/;"	c
RecTabStops_InNewlineInTabstopNotAtBeginOfLine_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InNewlineInTabstopNotAtBeginOfLine_ECR(_VimTest):$/;"	c
RecTabStops_InNewlineInTabstop_ExpectCorrectResult	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InNewlineInTabstop_ExpectCorrectResult(_VimTest):$/;"	c
RecTabStops_InNewlineManualIndentTextInFront_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InNewlineManualIndentTextInFront_ECR(_VimTest):$/;"	c
RecTabStops_InNewlineManualIndent_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InNewlineManualIndent_ECR(_VimTest):$/;"	c
RecTabStops_InNewlineMultilineWithIndent_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InNewlineMultilineWithIndent_ECR(_VimTest):$/;"	c
RecTabStops_InNewlineMultilineWithNonZeroTS_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InNewlineMultilineWithNonZeroTS_ECR(_VimTest):$/;"	c
RecTabStops_InNewlineMultiline_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InNewlineMultiline_ECR(_VimTest):$/;"	c
RecTabStops_InnerWOTabStopTwiceDirectly_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InnerWOTabStopTwiceDirectly_ECR(_VimTest):$/;"	c
RecTabStops_InnerWOTabStopTwice_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InnerWOTabStopTwice_ECR(_VimTest):$/;"	c
RecTabStops_InnerWOTabStop_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InnerWOTabStop_ECR(_VimTest):$/;"	c
RecTabStops_LeavingInnerInnerTwo_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_LeavingInnerInnerTwo_ECR(_VimTest):$/;"	c
RecTabStops_LeavingInnerInner_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_LeavingInnerInner_ECR(_VimTest):$/;"	c
RecTabStops_LeavingInner_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_LeavingInner_ECR(_VimTest):$/;"	c
RecTabStops_MirrorInnerSnippet_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_MirrorInnerSnippet_ECR(_VimTest):$/;"	c
RecTabStops_MirroredZeroTS_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_MirroredZeroTS_ECR(_VimTest):$/;"	c
RecTabStops_NotAtBeginningOfTS_ExpectCorrectResult	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_NotAtBeginningOfTS_ExpectCorrectResult(_VimTest):$/;"	c
RecTabStops_OuterOnlyWithZeroTS_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_OuterOnlyWithZeroTS_ECR(_VimTest):$/;"	c
RecTabStops_OuterOnlyWithZero_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_OuterOnlyWithZero_ECR(_VimTest):$/;"	c
RecTabStops_SimpleCaseLeaveFirstSecond_ExpectCorrectResult	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_SimpleCaseLeaveFirstSecond_ExpectCorrectResult(_VimTest):$/;"	c
RecTabStops_SimpleCaseLeaveSecondSecond_ExpectCorrectResult	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_SimpleCaseLeaveSecondSecond_ExpectCorrectResult(_VimTest):$/;"	c
RecTabStops_SimpleCase_ExpectCorrectResult	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_SimpleCase_ExpectCorrectResult(_VimTest):$/;"	c
RecTabStops_ZeroTSisNothingSpecial_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_ZeroTSisNothingSpecial_ECR(_VimTest):$/;"	c
RecTabsStops_BackspaceZero_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabsStops_BackspaceZero_ECR(_VimTest):$/;"	c
RecTabsStops_TypeInZero2_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabsStops_TypeInZero2_ECR(_VimTest):$/;"	c
RecTabsStops_TypeInZero_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabsStops_TypeInZero_ECR(_VimTest):$/;"	c
Recommend syntax plugins	plugged/vim-monokai/README.md	/^Recommend syntax plugins$/;"	s	chapter:vim-monokai
Recommended Configuration	plugged/nvim-cmp/README.md	/^### Recommended Configuration$/;"	S	chapter:Setup
Regular expression vs. predefined rules	plugged/vim-easy-align/README.md	/^### Regular expression vs. predefined rules$/;"	S	section:vim-easy-align ![travis-ci](https://travis-ci.org/junegunn/vim-easy-align.svg?branch=master)""Usage
Related Projects	plugged/vim-gutentags/README.md	/^# Related Projects$/;"	c
Related repositories	plugged/vim-snippets/README.md	/^Related repositories$/;"	s	chapter:snipMate & UltiSnip Snippets
Related work	plugged/vim-easy-align/README.md	/^Related work$/;"	s	chapter:vim-easy-align ![travis-ci](https://travis-ci.org/junegunn/vim-easy-align.svg?branch=master)
RemoveTrailingWhitespace	plugged/ultisnips/test/test_Chars.py	/^class RemoveTrailingWhitespace(_VimTest):$/;"	c
Reproducing Bugs	plugged/ultisnips/CONTRIBUTING.md	/^# Reproducing Bugs$/;"	c
Required Info	plugged/vim-devicons/.github/ISSUE_TEMPLATE.md	/^#### Required Info$/;"	t
Requirements	plugged/LuaSnip/README.md	/^# Requirements$/;"	c
Requirements	plugged/nvim-lspconfig/CONTRIBUTING.md	/^## Requirements$/;"	s
Requirements	plugged/nvim-treesitter/README.md	/^## Requirements$/;"	s	chapter:Quickstart
Requirements	plugged/vim-devicons/.github/ISSUE_TEMPLATE.md	/^#### Requirements$/;"	t
Requirements (please check off with 'x')	plugged/vim-devicons/.github/PULL_REQUEST_TEMPLATE.md	/^#### Requirements (please check off with 'x')$/;"	t
RetainsTheUnnamedRegister	plugged/ultisnips/test/test_Fixes.py	/^class RetainsTheUnnamedRegister(_VimTest):$/;"	c
RetainsTheUnnamedRegister_ButOnlyOnce	plugged/ultisnips/test/test_Fixes.py	/^class RetainsTheUnnamedRegister_ButOnlyOnce(_VimTest):$/;"	c
RevealBookmark	plugged/nerdtree/lib/nerdtree/creator.vim	/^    command! -buffer -complete=customlist,nerdtree#completeBookmarks -nargs=1 RevealBookmark :ca/;"	c
RubyExample	plugged/neodark.vim/test/test.rb	/^  class RubyExample$/;"	c	module:VimColors
Run	plugged/vim-easy-align/test/README.md	/^### Run$/;"	S	chapter:Test cases for vim-easy-align
Running the test suite.	plugged/ultisnips/CONTRIBUTING.md	/^### Running the test suite.$/;"	S	section:Contributing to UltiSnips""Testing
Running using docker.	plugged/ultisnips/CONTRIBUTING.md	/^#### Running using docker.$/;"	t	subsection:Contributing to UltiSnips""Testing""Running the test suite.
S	plugged/LuaSnip/lua/luasnip/nodes/snippet.lua	/^local function S(context, nodes, opts)$/;"	f
SEQUENCES	plugged/ultisnips/test/constant.py	/^SEQUENCES = [ARR_L, ARR_R, ARR_U, ARR_D]$/;"	v
SN	plugged/LuaSnip/lua/luasnip/nodes/snippet.lua	/^local function SN(pos, nodes, opts)$/;"	f
SNIPMATE_SNIPPET_PRIORITY	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/snipmate.py	/^    SNIPMATE_SNIPPET_PRIORITY = -1000$/;"	v	class:SnipMateSnippetDefinition
SNIPPETNODE	plugged/LuaSnip/DOC.md	/^# SNIPPETNODE$/;"	c
SNIPPETS	plugged/LuaSnip/DOC.md	/^# SNIPPETS$/;"	c
Scope	plugged/vim-devicons/CODE_OF_CONDUCT.md	/^## Scope$/;"	s	chapter:Contributor Covenant Code of Conduct
Screencasts	plugged/ultisnips/README.md	/^Screencasts$/;"	s	chapter:UltiSnips
Screencasts	plugged/vim-fugitive/README.markdown	/^## Screencasts$/;"	s	chapter:fugitive.vim
Screenshots	plugged/vim-monokai/README.md	/^Screenshots$/;"	s	chapter:vim-monokai
Screenshots (if appropriate or helpful)	plugged/vim-devicons/.github/PULL_REQUEST_TEMPLATE.md	/^#### Screenshots (if appropriate or helpful)$/;"	t
Screenshots:	plugged/vim-nerdtree-syntax-highlight/README.md	/^### Screenshots:$/;"	S	chapter:vim-nerdtree-syntax-highlight
SelectModeMappings_BufferLocalMappings_ECR	plugged/ultisnips/test/test_Selection.py	/^class SelectModeMappings_BufferLocalMappings_ECR(_SelectModeMappings):$/;"	c
SelectModeMappings_DisableRemoveBeforeSelecting_ECR	plugged/ultisnips/test/test_Selection.py	/^class SelectModeMappings_DisableRemoveBeforeSelecting_ECR(_SelectModeMappings):$/;"	c
SelectModeMappings_IgnoreMappings1_ECR	plugged/ultisnips/test/test_Selection.py	/^class SelectModeMappings_IgnoreMappings1_ECR(_SelectModeMappings):$/;"	c
SelectModeMappings_IgnoreMappings2_ECR	plugged/ultisnips/test/test_Selection.py	/^class SelectModeMappings_IgnoreMappings2_ECR(_SelectModeMappings):$/;"	c
SelectModeMappings_IgnoreMappings_ECR	plugged/ultisnips/test/test_Selection.py	/^class SelectModeMappings_IgnoreMappings_ECR(_SelectModeMappings):$/;"	c
SelectModeMappings_RemoveBeforeSelecting_ECR	plugged/ultisnips/test/test_Selection.py	/^class SelectModeMappings_RemoveBeforeSelecting_ECR(_SelectModeMappings):$/;"	c
Self-Diagnosis	plugged/nerdtree-git-plugin/.github/ISSUE_TEMPLATE/bug.md	/^#### Self-Diagnosis$/;"	t
Self-Diagnosis	plugged/nerdtree-git-plugin/.github/ISSUE_TEMPLATE/question.md	/^#### Self-Diagnosis$/;"	t
Self-Diagnosis	plugged/nerdtree/.github/ISSUE_TEMPLATE/bug.md	/^#### Self-Diagnosis$/;"	t
Self-Promotion	plugged/vim-fugitive/README.markdown	/^## Self-Promotion$/;"	s	chapter:fugitive.vim
Settings	plugged/nerdcommenter/README.md	/^### Settings$/;"	S	section:NERD Commenter""Usage
Setup	plugged/LuaSnip/README.md	/^# Setup$/;"	c
Setup	plugged/cmp-nvim-lsp/README.md	/^# Setup$/;"	c
Setup	plugged/nvim-cmp/README.md	/^Setup$/;"	c
Shameless Self Promotion	plugged/nerdtree-git-plugin/README.md	/^## Shameless Self Promotion$/;"	s	chapter:nerdtree-git-plugin
ShellCode	plugged/ultisnips/pythonx/UltiSnips/text_objects/shell_code.py	/^class ShellCode(NoneditableTextObject):$/;"	c
ShellCodeToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class ShellCodeToken(Token):$/;"	c
ShiftWidthZero	plugged/ultisnips/test/test_Fixes.py	/^class ShiftWidthZero(_VimTest):$/;"	c
Shortcuts	plugged/auto-pairs/README.md	/^Shortcuts$/;"	s	chapter:Auto Pairs
ShowUsage	plugged/vim-gutentags/plat/unix/update_scopedb.sh	/^ShowUsage() {$/;"	f
ShowUsage	plugged/vim-gutentags/plat/unix/update_tags.sh	/^ShowUsage() {$/;"	f
Simple function call	plugged/vim-devicons/DEVELOPER.md	/^##### Simple function call$/;"	T	subsubsection:API""API Examples
SimpleExpandEndingWithNewline_ExpectCorrectResult	plugged/ultisnips/test/test_Expand.py	/^class SimpleExpandEndingWithNewline_ExpectCorrectResult(_VimTest):$/;"	c
SimpleExpandNewLineAndBackspae_ExpectCorrectResult	plugged/ultisnips/test/test_Expand.py	/^class SimpleExpandNewLineAndBackspae_ExpectCorrectResult(_SimpleExpands):$/;"	c
SimpleExpandTwice_ExpectCorrectResult	plugged/ultisnips/test/test_Expand.py	/^class SimpleExpandTwice_ExpectCorrectResult(_SimpleExpands):$/;"	c
SimpleExpandTypeAfterExpand_ExpectCorrectResult	plugged/ultisnips/test/test_Expand.py	/^class SimpleExpandTypeAfterExpand_ExpectCorrectResult(_SimpleExpands):$/;"	c
SimpleExpandTypeAndDelete_ExpectCorrectResult	plugged/ultisnips/test/test_Expand.py	/^class SimpleExpandTypeAndDelete_ExpectCorrectResult(_SimpleExpands):$/;"	c
SimpleExpand_DoNotClobberDefaultRegister	plugged/ultisnips/test/test_Expand.py	/^class SimpleExpand_DoNotClobberDefaultRegister(_VimTest):$/;"	c
SimpleExpand_ExpectCorrectResult	plugged/ultisnips/test/test_Expand.py	/^class SimpleExpand_ExpectCorrectResult(_SimpleExpands):$/;"	c
SimpleExpand_Issue1343	plugged/ultisnips/test/test_Expand.py	/^class SimpleExpand_Issue1343(_VimTest):$/;"	c
SimpleMirrorDeleteSomeEnterSome_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorDeleteSomeEnterSome_ExpectCorrectResult(_VimTest):$/;"	c
SimpleMirrorDelete_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorDelete_ExpectCorrectResult(_VimTest):$/;"	c
SimpleMirrorMultilineMany_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorMultilineMany_ExpectCorrectResult(_VimTest):$/;"	c
SimpleMirrorSameLineBeforeTabDefVal_DelB4Typing_ECR	plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorSameLineBeforeTabDefVal_DelB4Typing_ECR(_VimTest):$/;"	c
SimpleMirrorSameLineBeforeTabDefVal_ECR	plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorSameLineBeforeTabDefVal_ECR(_VimTest):$/;"	c
SimpleMirrorSameLineManyMultiline_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorSameLineManyMultiline_ExpectCorrectResult(_VimTest):$/;"	c
SimpleMirrorSameLineMany_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorSameLineMany_ExpectCorrectResult(_VimTest):$/;"	c
SimpleMirrorSameLineNoSpaceInsideOtherSpaceAfter_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorSameLineNoSpaceInsideOtherSpaceAfter_ExpectCorrectResult(_VimTest):$/;"	c
SimpleMirrorSameLineNoSpaceInsideOther_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorSameLineNoSpaceInsideOther_ExpectCorrectResult(_VimTest):$/;"	c
SimpleMirrorSameLineNoSpaceSpaceAfter_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorSameLineNoSpaceSpaceAfter_ExpectCorrectResult(_VimTest):$/;"	c
SimpleMirrorSameLineNoSpace_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorSameLineNoSpace_ExpectCorrectResult(_VimTest):$/;"	c
SimpleMirrorSameLine_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorSameLine_ExpectCorrectResult(_VimTest):$/;"	c
SimpleMirrorSameLine_InText_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorSameLine_InText_ExpectCorrectResult(_VimTest):$/;"	c
SimpleTabstopWithDefaultComplexKeep_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleTabstopWithDefaultComplexKeep_ExpectCorrectResult(_VimTest):$/;"	c
SimpleTabstopWithDefaultComplexType_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleTabstopWithDefaultComplexType_ExpectCorrectResult(_VimTest):$/;"	c
SimpleTabstopWithDefaultSimpelKeep_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleTabstopWithDefaultSimpelKeep_ExpectCorrectResult(_VimTest):$/;"	c
SimpleTabstopWithDefaultSimpelType_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleTabstopWithDefaultSimpelType_ExpectCorrectResult(_VimTest):$/;"	c
SnipMateFileSource	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^class SnipMateFileSource(SnippetFileSource):$/;"	c
SnipMateSnippetDefinition	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/snipmate.py	/^class SnipMateSnippetDefinition(SnippetDefinition):$/;"	c
Snippet engines supporting vim-snippets	plugged/vim-snippets/README.md	/^Snippet engines supporting vim-snippets$/;"	s	chapter:snipMate & UltiSnip Snippets
SnippetActions_CanEvenWrapSnippetInPreAction	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanEvenWrapSnippetInPreAction(_VimTest):$/;"	c
SnippetActions_CanExpandAnonOnPreExpand	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanExpandAnonOnPreExpand(_VimTest):$/;"	c
SnippetActions_CanExpandAnonSnippetInJumpAction	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanExpandAnonSnippetInJumpAction(_VimTest):$/;"	c
SnippetActions_CanExpandAnonSnippetInJumpActionWhileSelected	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanExpandAnonSnippetInJumpActionWhileSelected(_VimTest):$/;"	c
SnippetActions_CanExpandAnonSnippetOnFirstJump	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanExpandAnonSnippetOnFirstJump(_VimTest):$/;"	c
SnippetActions_CanExpandSnippetInDifferentPlace	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanExpandSnippetInDifferentPlace(_VimTest):$/;"	c
SnippetActions_CanMirrorTabStopsOutsideOfSnippet	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanMirrorTabStopsOutsideOfSnippet(_VimTest):$/;"	c
SnippetActions_CanModifyParentBody	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanModifyParentBody(_VimTest):$/;"	c
SnippetActions_CanUseContextFromContextMatch	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanUseContextFromContextMatch(_VimTest):$/;"	c
SnippetActions_CanVisuallySelectFirstPlaceholderInAnonSnippetInPre	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanVisuallySelectFirstPlaceholderInAnonSnippetInPre(_VimTest):$/;"	c
SnippetActions_DoNotBreakCursorOnSingleLikeChange	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_DoNotBreakCursorOnSingleLikeChange(_VimTest):$/;"	c
SnippetActions_EnsureIndent	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_EnsureIndent(_VimTest):$/;"	c
SnippetActions_ErrorOnBufferModificationThroughCommand	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_ErrorOnBufferModificationThroughCommand(_VimTest):$/;"	c
SnippetActions_ErrorOnModificationSnippetLine	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_ErrorOnModificationSnippetLine(_VimTest):$/;"	c
SnippetActions_MoveParentSnippetFromChildInPreAction	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_MoveParentSnippetFromChildInPreAction(_VimTest):$/;"	c
SnippetActions_MoveVisual	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_MoveVisual(_VimTest):$/;"	c
SnippetActions_PostActionCanUseSnippetRange	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_PostActionCanUseSnippetRange(_VimTest):$/;"	c
SnippetActions_PostActionModifiesBuffer	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_PostActionModifiesBuffer(_VimTest):$/;"	c
SnippetActions_PostActionModifiesCharAfterSnippet	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_PostActionModifiesCharAfterSnippet(_VimTest):$/;"	c
SnippetActions_PostActionModifiesLineAfterSnippet	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_PostActionModifiesLineAfterSnippet(_VimTest):$/;"	c
SnippetActions_PreActionModifiesBuffer	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_PreActionModifiesBuffer(_VimTest):$/;"	c
SnippetActions_UseCorrectJumpActions	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_UseCorrectJumpActions(_VimTest):$/;"	c
SnippetDefinition	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^class SnippetDefinition:$/;"	c
SnippetDictionary	plugged/ultisnips/pythonx/UltiSnips/snippet/source/snippet_dictionary.py	/^class SnippetDictionary:$/;"	c
SnippetFileSource	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^class SnippetFileSource(SnippetSource):$/;"	c
SnippetInstance	plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^class SnippetInstance(EditableTextObject):$/;"	c
SnippetManager	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^class SnippetManager:$/;"	c
SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand(_VimTest):$/;"	c
SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand2	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand2(_VimTest):$/;"	c
SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3(_VimTest):$/;"	c
SnippetOptions_ExpandInwordSnippets_ExpandSingle	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_ExpandInwordSnippets_ExpandSingle(_VimTest):$/;"	c
SnippetOptions_ExpandInwordSnippets_SimpleExpand	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_ExpandInwordSnippets_SimpleExpand(_VimTest):$/;"	c
SnippetOptions_ExpandWordSnippets_ExpandSuffix	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_ExpandWordSnippets_ExpandSuffix($/;"	c
SnippetOptions_ExpandWordSnippets_ExpandSuffix2	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_ExpandWordSnippets_ExpandSuffix2($/;"	c
SnippetOptions_ExpandWordSnippets_ExpandSuffix3	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_ExpandWordSnippets_ExpandSuffix3($/;"	c
SnippetOptions_ExpandWordSnippets_NoExpand	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_ExpandWordSnippets_NoExpand(_SnippetOptions_ExpandWordSnippets):$/;"	c
SnippetOptions_ExpandWordSnippets_NormalExpand	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_ExpandWordSnippets_NormalExpand($/;"	c
SnippetOptions_OnlyExpandWhenWSInFront_DontExpand	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_OnlyExpandWhenWSInFront_DontExpand(_VimTest):$/;"	c
SnippetOptions_OnlyExpandWhenWSInFront_Expand	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_OnlyExpandWhenWSInFront_Expand(_VimTest):$/;"	c
SnippetOptions_OnlyExpandWhenWSInFront_Expand2	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_OnlyExpandWhenWSInFront_Expand2(_VimTest):$/;"	c
SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO(_VimTest):$/;"	c
SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose(_VimTest):$/;"	c
SnippetOptions_Regex_Expand	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_Expand(_VimTest):$/;"	c
SnippetOptions_Regex_Multiple	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_Multiple(_VimTest):$/;"	c
SnippetOptions_Regex_PythonBlockMatch	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_PythonBlockMatch(_VimTest):$/;"	c
SnippetOptions_Regex_PythonBlockNoMatch	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_PythonBlockNoMatch(_VimTest):$/;"	c
SnippetOptions_Regex_SameLine_Long_End	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_SameLine_Long_End(_VimTest):$/;"	c
SnippetOptions_Regex_SameLine_Long_Start	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_SameLine_Long_Start(_VimTest):$/;"	c
SnippetOptions_Regex_SameLine_Simple	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_SameLine_Simple(_VimTest):$/;"	c
SnippetOptions_Regex_Self_Space	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_Self_Space(_Regex_Self):$/;"	c
SnippetOptions_Regex_Self_Start	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_Self_Start(_Regex_Self):$/;"	c
SnippetOptions_Regex_Self_TextAfter	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_Self_TextAfter(_Regex_Self):$/;"	c
SnippetOptions_Regex_Self_TextBefore	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_Self_TextBefore(_Regex_Self):$/;"	c
SnippetOptions_Regex_WithSpace	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_WithSpace(_VimTest):$/;"	c
SnippetPriorities_AddedHasHigherThanFile	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_AddedHasHigherThanFile(_VimTest):$/;"	c
SnippetPriorities_ClearedByChild	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_ClearedByChild(_VimTest):$/;"	c
SnippetPriorities_ClearedByParent	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_ClearedByParent(_VimTest):$/;"	c
SnippetPriorities_DoNotCareAboutNonMatchings	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_DoNotCareAboutNonMatchings(_VimTest):$/;"	c
SnippetPriorities_FileHasHigherThanAdded	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_FileHasHigherThanAdded(_VimTest):$/;"	c
SnippetPriorities_FileHasHigherThanAdded_neg_prio	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_FileHasHigherThanAdded_neg_prio(_VimTest):$/;"	c
SnippetPriorities_MultiWordTriggerOverwriteExisting	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_MultiWordTriggerOverwriteExisting(_VimTest):$/;"	c
SnippetPriorities_OverwriteExisting	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_OverwriteExisting(_VimTest):$/;"	c
SnippetPriorities_OverwriteThenChoose_ECR	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_OverwriteThenChoose_ECR(_VimTest):$/;"	c
SnippetPriorities_OverwriteTwice_ECR	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_OverwriteTwice_ECR(_VimTest):$/;"	c
SnippetPriorities_SimpleClear	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_SimpleClear(_VimTest):$/;"	c
SnippetPriorities_SimpleClear2	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_SimpleClear2(_VimTest):$/;"	c
SnippetSource	plugged/ultisnips/pythonx/UltiSnips/snippet/source/base.py	/^class SnippetSource:$/;"	c
SnippetSyntaxError	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^class SnippetSyntaxError(PebkacError):$/;"	c
SnippetUtil	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^class SnippetUtil:$/;"	c
SnippetUtilForAction	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^class SnippetUtilForAction(dict):$/;"	c
Snippet_With_DoubleQuote	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_DoubleQuote(_VimTest):$/;"	c
Snippet_With_DoubleQuote_List	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_DoubleQuote_List(_VimTest):$/;"	c
Snippet_With_SingleQuote	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_SingleQuote(_VimTest):$/;"	c
Snippet_With_SingleQuote_List	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_SingleQuote_List(_VimTest):$/;"	c
Snippet_With_Umlauts	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_Umlauts(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_List	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_Umlauts_List(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_Mirrors	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_Umlauts_Mirrors(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_OverwriteFirst	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_Umlauts_OverwriteFirst(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_OverwriteNone	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_Umlauts_OverwriteNone(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_OverwriteSecond	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_Umlauts_OverwriteSecond(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_Python	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_Umlauts_Python(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_TypeOn	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_Umlauts_TypeOn(_UmlautsBase):$/;"	c
Source	plugged/ultisnips/rplugin/python3/deoplete/sources/ultisnips.py	/^class Source(Base):$/;"	c
Source creation	plugged/nvim-cmp/README.md	/^Source creation$/;"	c
Stable	plugged/vim-one/README.md	/^### Stable$/;"	S	section:List of enhanced language support
State Your Question	plugged/nerdtree-git-plugin/.github/ISSUE_TEMPLATE/question.md	/^#### State Your Question$/;"	t
State Your Question	plugged/nerdtree/.github/ISSUE_TEMPLATE/question.md	/^#### State Your Question$/;"	t
Status line	plugged/vim-devicons/DEVELOPER.md	/^##### Status line$/;"	T	subsubsection:API""API Examples
Statusline indicator	plugged/nvim-treesitter/README.md	/^### Statusline indicator$/;"	S	chapter:Extra features
Steps to Reproduce the Issue	plugged/nerdtree-git-plugin/.github/ISSUE_TEMPLATE/bug.md	/^#### Steps to Reproduce the Issue$/;"	t
Steps to Reproduce the Issue	plugged/nerdtree/.github/ISSUE_TEMPLATE/bug.md	/^#### Steps to Reproduce the Issue$/;"	t
Style Checks and Tests	plugged/nvim-treesitter/CONTRIBUTING.md	/^## Style Checks and Tests$/;"	s	chapter:Contributing to `nvim-treesitter`
Supported Languages	plugged/current-func-info.vim/README.md	/^Supported Languages$/;"	s	chapter:current-func-info.vim
Supported languages	plugged/nvim-treesitter/README.md	/^# Supported languages$/;"	c
Syntax-aware alignment	plugged/vim-easy-align/README.md	/^### Syntax-aware alignment$/;"	S	section:vim-easy-align ![travis-ci](https://travis-ci.org/junegunn/vim-easy-align.svg?branch=master)""Demo
T	plugged/LuaSnip/lua/luasnip/nodes/textNode.lua	/^local function T(static_text)$/;"	f
TAGS_FILE	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set TAGS_FILE=%~2$/;"	v
TAGS_FILE	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set TAGS_FILE=tags$/;"	v
TEXTNODE	plugged/LuaSnip/DOC.md	/^# TEXTNODE$/;"	c
TM_DIRECTORY	plugged/LuaSnip/lua/luasnip/util/environ.lua	/^function lazy_vars.TM_DIRECTORY()$/;"	f	unknown:lazy_vars
TM_FILENAME	plugged/LuaSnip/lua/luasnip/util/environ.lua	/^function lazy_vars.TM_FILENAME()$/;"	f	unknown:lazy_vars
TM_FILENAME_BASE	plugged/LuaSnip/lua/luasnip/util/environ.lua	/^function lazy_vars.TM_FILENAME_BASE()$/;"	f	unknown:lazy_vars
TM_FILEPATH	plugged/LuaSnip/lua/luasnip/util/environ.lua	/^function lazy_vars.TM_FILEPATH()$/;"	f	unknown:lazy_vars
TabStop	plugged/ultisnips/pythonx/UltiSnips/text_objects/tabstop.py	/^class TabStop(EditableTextObject):$/;"	c
TabStopEscapingWhenSelectedNoCharTS_ECR	plugged/ultisnips/test/test_TabStop.py	/^class TabStopEscapingWhenSelectedNoCharTS_ECR(_VimTest):$/;"	c
TabStopEscapingWhenSelectedSingleCharTS_ECR	plugged/ultisnips/test/test_TabStop.py	/^class TabStopEscapingWhenSelectedSingleCharTS_ECR(_VimTest):$/;"	c
TabStopEscapingWhenSelected_ECR	plugged/ultisnips/test/test_TabStop.py	/^class TabStopEscapingWhenSelected_ECR(_VimTest):$/;"	c
TabStopNavigatingInInsertModeSimple_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopNavigatingInInsertModeSimple_ExpectCorrectResult(_VimTest):$/;"	c
TabStopNoReplace_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopNoReplace_ExpectCorrectResult(_VimTest):$/;"	c
TabStopSimpleReplaceReversed_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopSimpleReplaceReversed_ExpectCorrectResult(_VimTest):$/;"	c
TabStopSimpleReplaceSurrounded1_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopSimpleReplaceSurrounded1_ExpectCorrectResult(_VimTest):$/;"	c
TabStopSimpleReplaceSurrounded_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopSimpleReplaceSurrounded_ExpectCorrectResult(_VimTest):$/;"	c
TabStopSimpleReplaceZeroLengthTabstops_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopSimpleReplaceZeroLengthTabstops_ExpectCorrectResult(_VimTest):$/;"	c
TabStopSimpleReplace_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopSimpleReplace_ExpectCorrectResult(_VimTest):$/;"	c
TabStopTestBackwardJumping2_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopTestBackwardJumping2_ExpectCorrectResult(_VimTest):$/;"	c
TabStopTestBackwardJumping_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopTestBackwardJumping_ExpectCorrectResult(_VimTest):$/;"	c
TabStopTestJumping2_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopTestJumping2_ExpectCorrectResult(_VimTest):$/;"	c
TabStopTestJumpingDontJumpToEndIfThereIsTabZero_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopTestJumpingDontJumpToEndIfThereIsTabZero_ExpectCorrectResult(_VimTest):$/;"	c
TabStopTestJumpingRLExampleWithZeroTab_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopTestJumpingRLExampleWithZeroTab_ExpectCorrectResult(_VimTest):$/;"	c
TabStopTestJumping_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopTestJumping_ExpectCorrectResult(_VimTest):$/;"	c
TabStopTestMultilineExpand_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopTestMultilineExpand_ExpectCorrectResult(_VimTest):$/;"	c
TabStopToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class TabStopToken(Token):$/;"	c
TabStopWithOneChar_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopWithOneChar_ExpectCorrectResult(_VimTest):$/;"	c
TabStop_AdjacentTabStopAddText_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_AdjacentTabStopAddText_ExpectCorrectResult(_VimTest):$/;"	c
TabStop_CROnlyOnSelectedNear	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_CROnlyOnSelectedNear(_VimTest):$/;"	c
TabStop_EscapingCharsBackticks	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingCharsBackticks(_VimTest):$/;"	c
TabStop_EscapingCharsDollars	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingCharsDollars(_VimTest):$/;"	c
TabStop_EscapingCharsDollars1	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingCharsDollars1(_VimTest):$/;"	c
TabStop_EscapingCharsDollars_BeginningOfDefinitionText	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingCharsDollars_BeginningOfDefinitionText(_VimTest):$/;"	c
TabStop_EscapingCharsDollars_BeginningOfLine	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingCharsDollars_BeginningOfLine(_VimTest):$/;"	c
TabStop_EscapingChars_Backslash	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingChars_Backslash(_VimTest):$/;"	c
TabStop_EscapingChars_Backslash2	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingChars_Backslash2(_VimTest):$/;"	c
TabStop_EscapingChars_Backslash3	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingChars_Backslash3(_VimTest):$/;"	c
TabStop_EscapingChars_Backslash4	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingChars_Backslash4(_VimTest):$/;"	c
TabStop_EscapingChars_RealLife	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingChars_RealLife(_VimTest):$/;"	c
TabStop_Exit_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_Exit_ExpectCorrectResult(_VimTest):$/;"	c
TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippet	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippet(_VimTest):$/;"	c
TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippetRE	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippetRE(_VimTest):$/;"	c
TabStop_Multiline_DelFirstOverwriteSecond_Overwrite	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_Multiline_DelFirstOverwriteSecond_Overwrite(_VimTest):$/;"	c
TabStop_Multiline_Leave	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_Multiline_Leave(_VimTest):$/;"	c
TabStop_Multiline_MirrorInFront_Leave	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_Multiline_MirrorInFront_Leave(_VimTest):$/;"	c
TabStop_Multiline_MirrorInFront_Overwrite	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_Multiline_MirrorInFront_Overwrite(_VimTest):$/;"	c
TabStop_Multiline_Overwrite	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_Multiline_Overwrite(_VimTest):$/;"	c
TabStop_Shell_InDefValue_Leave	plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_Shell_InDefValue_Leave(_VimTest):$/;"	c
TabStop_Shell_InDefValue_Overwrite	plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_Shell_InDefValue_Overwrite(_VimTest):$/;"	c
TabStop_Shell_ShebangPython	plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_Shell_ShebangPython(_VimTest):$/;"	c
TabStop_Shell_SimpleExample	plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_Shell_SimpleExample(_VimTest):$/;"	c
TabStop_Shell_TestEscapedCharsAndShellVars_Overwrite	plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_Shell_TestEscapedCharsAndShellVars_Overwrite(_VimTest):$/;"	c
TabStop_Shell_TestEscapedChars_Overwrite	plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_Shell_TestEscapedChars_Overwrite(_VimTest):$/;"	c
TabStop_Shell_TextInNextLine	plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_Shell_TextInNextLine(_VimTest):$/;"	c
TabStop_Shell_WithUmlauts	plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_Shell_WithUmlauts(_VimTest):$/;"	c
TabStop_TSInDefaultNested_OverwriteOneJumpAround	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultNested_OverwriteOneJumpAround(_VimTest):$/;"	c
TabStop_TSInDefaultNested_OverwriteOneJumpBackToOther	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultNested_OverwriteOneJumpBackToOther(_VimTest):$/;"	c
TabStop_TSInDefaultNested_OverwriteOneJumpToThird	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultNested_OverwriteOneJumpToThird(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_DeleteFirst	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultTextRLExample_DeleteFirst(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_OverwriteFirstJumpBack	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteFirstJumpBack(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_OverwriteFirst_NoJumpBack	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteFirst_NoJumpBack(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_OverwriteNone_ECR	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteNone_ECR(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_OverwriteSecond	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteSecond(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBack	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBack(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBackTwice	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBackTwice(_VimTest):$/;"	c
TabStop_TSInDefaultText_ZeroLengthNested_OverwriteFirst	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultText_ZeroLengthNested_OverwriteFirst(_VimTest):$/;"	c
TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecond	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecond(_VimTest):$/;"	c
TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward0	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward0($/;"	c
TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward1	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward1($/;"	c
TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackOverwrite	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackOverwrite($/;"	c
TabStop_TSInDefaultText_ZeroLengthZerothTabstop	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultText_ZeroLengthZerothTabstop(_VimTest):$/;"	c
TabStop_TSInDefaultText_ZeroLengthZerothTabstop_Override	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultText_ZeroLengthZerothTabstop_Override(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_DoNothing	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_DoNothing(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_Overwrite0	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_Overwrite0(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_Overwrite1	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_Overwrite1(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_OverwriteFirstSwitchNumbers	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_OverwriteFirstSwitchNumbers(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_OverwriteFirst_RLExample	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_OverwriteFirst_RLExample(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_OverwriteSecond	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_OverwriteSecond(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_OverwriteSecond1	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_OverwriteSecond1(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_OverwriteSecond_RLExample	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_OverwriteSecond_RLExample(_VimTest):$/;"	c
TabStop_VimScriptInterpolation_SimpleExample	plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_VimScriptInterpolation_SimpleExample(_VimTest):$/;"	c
Table of Contents	plugged/ctrlsf.vim/README.md	/^## Table of Contents$/;"	s	chapter:ctrlsf.vim
Table of contents	plugged/nvim-treesitter/README.md	/^### Table of contents$/;"	S
TabstopWithMirrorInDefaultMultipleLeave_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorInDefaultMultipleLeave_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultMultipleOverwrite_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorInDefaultMultipleOverwrite_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultNoOverwrite1_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorInDefaultNoOverwrite1_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultNoType1_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorInDefaultNoType1_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultNoType_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorInDefaultNoType_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultOverwrite1_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorInDefaultOverwrite1_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultOverwrite_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorInDefaultOverwrite_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultTwiceAndExtra_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorInDefaultTwiceAndExtra_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorManyFromAll_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorManyFromAll_ExpectCorrectResult(_VimTest):$/;"	c
Tags	plugged/nvim-treesitter/CONTRIBUTING.md	/^#### Tags$/;"	t	subsection:Contributing to `nvim-treesitter`""Parser configurations""Highlights
TempFileManager	plugged/ultisnips/test/vim_interface.py	/^class TempFileManager:$/;"	c
Terminal	plugged/neodark.vim/README.md	/^### Terminal$/;"	S	section:neodark.vim""Installation
Terminal support	plugged/vim-monokai/README.md	/^Terminal support$/;"	s	chapter:vim-monokai
Test cases for vim-easy-align	plugged/vim-easy-align/test/README.md	/^Test cases for vim-easy-align$/;"	c
TestAllMatch	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestAllMatch(_Base, unittest.TestCase):$/;"	c
TestCheapDelete	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestCheapDelete(_Base, unittest.TestCase):$/;"	c
TestCommonCharacters	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestCommonCharacters(_Base, unittest.TestCase):$/;"	c
TestCrash	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestCrash(_Base, unittest.TestCase):$/;"	c
TestEmptyString	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestEmptyString(_Base, unittest.TestCase):$/;"	c
TestGuessing_BackspaceOneChar	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestGuessing_BackspaceOneChar(_BaseGuessing, unittest.TestCase):$/;"	c
TestGuessing_DeleteOneChar	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestGuessing_DeleteOneChar(_BaseGuessing, unittest.TestCase):$/;"	c
TestGuessing_InsertOneChar	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestGuessing_InsertOneChar(_BaseGuessing, unittest.TestCase):$/;"	c
TestGuessing_InsertOneChar1	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestGuessing_InsertOneChar1(_BaseGuessing, unittest.TestCase):$/;"	c
TestGuessing_Noop0	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestGuessing_Noop0(_BaseGuessing, unittest.TestCase):$/;"	c
TestLangmapWithUtf8_ExpectCorrectResult	plugged/ultisnips/test/test_UltiSnipFunc.py	/^class TestLangmapWithUtf8_ExpectCorrectResult(_VimTest):$/;"	c
TestLotsaNewlines	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestLotsaNewlines(_Base, unittest.TestCase):$/;"	c
TestNoSubstring	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestNoSubstring(_Base, unittest.TestCase):$/;"	c
TestNonEmptyLangmapWithSemi_ExpectCorrectResult	plugged/ultisnips/test/test_UltiSnipFunc.py	/^class TestNonEmptyLangmapWithSemi_ExpectCorrectResult(_VimTest):$/;"	c
TestNonEmptyLangmap_ExpectCorrectResult	plugged/ultisnips/test/test_UltiSnipFunc.py	/^class TestNonEmptyLangmap_ExpectCorrectResult(_VimTest):$/;"	c
TestRealLife	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestRealLife(_Base, unittest.TestCase):$/;"	c
TestRealLife1	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestRealLife1(_Base, unittest.TestCase):$/;"	c
TestUltiSnipsProblem	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestUltiSnipsProblem(_Base, unittest.TestCase):$/;"	c
TestWithNewline	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestWithNewline(_Base, unittest.TestCase):$/;"	c
Testing	plugged/ultisnips/CONTRIBUTING.md	/^## Testing$/;"	s	chapter:Contributing to UltiSnips
Testing	plugged/vim-gutentags/CONTRIBUTING.md	/^## Testing$/;"	s	chapter:Contributing
Text	plugged/nvim-treesitter/CONTRIBUTING.md	/^#### Text$/;"	t	subsection:Contributing to `nvim-treesitter`""Parser configurations""Highlights
TextObject	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^class TextObject:$/;"	c
TextObjectTransformation	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^class TextObjectTransformation:$/;"	c
TextTabStopAfterMirror_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopAfterMirror_ExpectCorrectResult(_VimTest):$/;"	c
TextTabStopAllSurrounded_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopAllSurrounded_ExpectCorrectResult(_VimTest):$/;"	c
TextTabStopSimpleMirrorMultilineMirrorInFront_ECR	plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopSimpleMirrorMultilineMirrorInFront_ECR(_VimTest):$/;"	c
TextTabStopSimpleMirrorMultiline_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopSimpleMirrorMultiline_ExpectCorrectResult(_VimTest):$/;"	c
TextTabStopSurroundMirror_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopSurroundMirror_ExpectCorrectResult(_VimTest):$/;"	c
TextTabStopTextAfterTab_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopTextAfterTab_ExpectCorrectResult(_VimTest):$/;"	c
TextTabStopTextBeforeMirror_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopTextBeforeMirror_ExpectCorrectResult(_VimTest):$/;"	c
TextTabStopTextBeforeTab_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopTextBeforeTab_ExpectCorrectResult(_VimTest):$/;"	c
TextTabStopTextSurroundedTab_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopTextSurroundedTab_ExpectCorrectResult(_VimTest):$/;"	c
The NERDTree [![Vint](https://github.com/preservim/nerdtree/workflows/Vint/badge.svg)](https://github.com/preservim/nerdtree/actions?workflow=Vint)	plugged/nerdtree/README.markdown	/^# The NERDTree [![Vint](https:\/\/github.com\/preservim\/nerdtree\/workflows\/Vint\/badge.svg)](/;"	c
The wiki	plugged/nvim-lspconfig/README.md	/^## The wiki$/;"	s	chapter:LSP overview
Things about your system and environment（请在此填写你的系统信息）	plugged/ctrlsf.vim/.github/ISSUE_TEMPLATE.md	/^#### Things about your system and environment（请在此填写你的系统信息）$/;"	t	section:Issue template
Things to consider when contributing	plugged/vim-snippets/README.md	/^Things to consider when contributing$/;"	s	chapter:snipMate & UltiSnip Snippets
Things to keep in mind	plugged/vim-devicons/CONTRIBUTING.md	/^## Things to keep in mind$/;"	s	chapter:Contributing Guide
Tips	plugged/ctrlsf.vim/README.md	/^## Tips$/;"	s	chapter:ctrlsf.vim
Tmux support	plugged/vim-one/README.md	/^### Tmux support$/;"	S	section:Usage
Token	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class Token:$/;"	c
TrailingNewline_TabStop_EndNL	plugged/ultisnips/test/test_Chars.py	/^class TrailingNewline_TabStop_EndNL(_VimTest):$/;"	c
TrailingNewline_TabStop_EndStartNL	plugged/ultisnips/test/test_Chars.py	/^class TrailingNewline_TabStop_EndStartNL(_VimTest):$/;"	c
TrailingNewline_TabStop_ExtraNL_ECR	plugged/ultisnips/test/test_Chars.py	/^class TrailingNewline_TabStop_ExtraNL_ECR(_VimTest):$/;"	c
TrailingNewline_TabStop_JustNL	plugged/ultisnips/test/test_Chars.py	/^class TrailingNewline_TabStop_JustNL(_VimTest):$/;"	c
TrailingNewline_TabStop_NLInsideStuffBehind	plugged/ultisnips/test/test_Chars.py	/^class TrailingNewline_TabStop_NLInsideStuffBehind(_VimTest):$/;"	c
TrailingNewline_TabStop_NotEndStartNL	plugged/ultisnips/test/test_Chars.py	/^class TrailingNewline_TabStop_NotEndStartNL(_VimTest):$/;"	c
TrailingNewline_TabStop_StartNL	plugged/ultisnips/test/test_Chars.py	/^class TrailingNewline_TabStop_StartNL(_VimTest):$/;"	c
Transformation	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^class Transformation(Mirror, TextObjectTransformation):$/;"	c
TransformationToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class TransformationToken(Token):$/;"	c
TransformationUsingBackspaceToDeleteDefaultValueInFirstTab_ECR	plugged/ultisnips/test/test_Transformation.py	/^class TransformationUsingBackspaceToDeleteDefaultValueInFirstTab_ECR(_VimTest):$/;"	c
TransformationUsingBackspaceToDeleteDefaultValueInSecondTab_ECR	plugged/ultisnips/test/test_Transformation.py	/^class TransformationUsingBackspaceToDeleteDefaultValueInSecondTab_ECR(_VimTest):$/;"	c
TransformationUsingBackspaceToDeleteDefaultValueTypeSomethingThen_ECR	plugged/ultisnips/test/test_Transformation.py	/^class TransformationUsingBackspaceToDeleteDefaultValueTypeSomethingThen_ECR(_VimTest):$/;"	c
TransformationUsingBackspaceToDeleteDefaultValue_ECR	plugged/ultisnips/test/test_Transformation.py	/^class TransformationUsingBackspaceToDeleteDefaultValue_ECR(_VimTest):$/;"	c
Transformation_BackreferenceTwice_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_BackreferenceTwice_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_Backreference_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_Backreference_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_CIBothDefinedNegative_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CIBothDefinedNegative_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_CIBothDefinedPositive_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CIBothDefinedPositive_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_CIEscapedParensinReplace_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CIEscapedParensinReplace_ECR(_VimTest):$/;"	c
Transformation_CINewlines_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CINewlines_ECR(_VimTest):$/;"	c
Transformation_CITabstop_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CITabstop_ECR(_VimTest):$/;"	c
Transformation_CleverTransformLongLower_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CleverTransformLongLower_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_CleverTransformLongUpper_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CleverTransformLongUpper_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_CleverTransformLowercaseChar_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CleverTransformLowercaseChar_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_CleverTransformUpercaseChar_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CleverTransformUpercaseChar_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_ConditionalInConditional_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_ConditionalInConditional_ECR(_VimTest):$/;"	c
Transformation_ConditionalInsertRWEllipsis_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_ConditionalInsertRWEllipsis_ECR(_VimTest):$/;"	c
Transformation_ConditionalInsertionSimple_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_ConditionalInsertionSimple_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_ConditionalWithBackslashBeforeDelimiter	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_ConditionalWithBackslashBeforeDelimiter(_VimTest):$/;"	c
Transformation_ConditionalWithBackslashBeforeDelimiter1	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_ConditionalWithBackslashBeforeDelimiter1(_VimTest):$/;"	c
Transformation_ConditionalWithEscapedDelimiter	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_ConditionalWithEscapedDelimiter(_VimTest):$/;"	c
Transformation_InsideTabLeaveAtDefault_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_InsideTabLeaveAtDefault_ECR(_VimTest):$/;"	c
Transformation_InsideTabOvertype_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_InsideTabOvertype_ECR(_VimTest):$/;"	c
Transformation_LowerCaseAsciiResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_LowerCaseAsciiResult(_VimTest):$/;"	c
Transformation_MultipleTransformations_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_MultipleTransformations_ECR(_VimTest):$/;"	c
Transformation_OptionIgnoreCase_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_OptionIgnoreCase_ECR(_VimTest):$/;"	c
Transformation_OptionMultiline_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_OptionMultiline_ECR(_VimTest):$/;"	c
Transformation_OptionReplaceGlobalMatchInReplace_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_OptionReplaceGlobalMatchInReplace_ECR(_VimTest):$/;"	c
Transformation_OptionReplaceGlobal_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_OptionReplaceGlobal_ECR(_VimTest):$/;"	c
Transformation_SimpleCaseAsciiResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_SimpleCaseAsciiResult(_VimTest):$/;"	c
Transformation_SimpleCaseNoTransform_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_SimpleCaseNoTransform_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_SimpleCaseTransformInFrontDefVal_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_SimpleCaseTransformInFrontDefVal_ECR(_VimTest):$/;"	c
Transformation_SimpleCaseTransformInFront_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_SimpleCaseTransformInFront_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_SimpleCase_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_SimpleCase_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_TabIsAtEndAndDeleted1_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_TabIsAtEndAndDeleted1_ECR(_VimTest):$/;"	c
Transformation_TabIsAtEndAndDeleted_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_TabIsAtEndAndDeleted_ECR(_VimTest):$/;"	c
Transformation_TabIsAtEndNoTextLeave_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_TabIsAtEndNoTextLeave_ECR(_VimTest):$/;"	c
Transformation_TabIsAtEndNoTextType_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_TabIsAtEndNoTextType_ECR(_VimTest):$/;"	c
Transformation_TestKill_InsertAfter_NoKill	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_TestKill_InsertAfter_NoKill(_VimTest):$/;"	c
Transformation_TestKill_InsertBefore_NoKill	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_TestKill_InsertBefore_NoKill(_VimTest):$/;"	c
Transformation_TestKill_InsertBeginning_Kill	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_TestKill_InsertBeginning_Kill(_VimTest):$/;"	c
Transformation_TestKill_InsertEnd_Kill	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_TestKill_InsertEnd_Kill(_VimTest):$/;"	c
TrimSpacesAtEndOfLines	plugged/ultisnips/test/test_Chars.py	/^class TrimSpacesAtEndOfLines(_VimTest):$/;"	c
TroubleShooting	plugged/auto-pairs/README.md	/^TroubleShooting$/;"	s	chapter:Auto Pairs
Troubleshooting	plugged/nvim-treesitter/README.md	/^# Troubleshooting$/;"	c
Troubleshooting	plugged/vim-devicons/README.md	/^Troubleshooting$/;"	s
True color support	plugged/vim-one/README.md	/^### True color support$/;"	S	section:Usage
UNIDECODE_ALERT_RAISED	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^UNIDECODE_ALERT_RAISED = False$/;"	v
UNIDECODE_IMPORTED	plugged/ultisnips/test/util.py	/^    UNIDECODE_IMPORTED = False$/;"	v
UNIDECODE_IMPORTED	plugged/ultisnips/test/util.py	/^    UNIDECODE_IMPORTED = True$/;"	v
UPDATED_SOURCE	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set UPDATED_SOURCE=%~2$/;"	v
UPDATED_SOURCE	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set UPDATED_SOURCE=$/;"	v
UUID	plugged/LuaSnip/lua/luasnip/util/environ.lua	/^function lazy_vars.UUID()$/;"	f	unknown:lazy_vars
UltiSnips	plugged/ultisnips/README.md	/^UltiSnips$/;"	c
UltiSnips#AddFiletypes	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#AddFiletypes(filetypes) abort$/;"	f
UltiSnips#AddSnippetWithPriority	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#AddSnippetWithPriority(trigger, value, description, options, filetype, prior/;"	f
UltiSnips#Anon	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#Anon(value, ...) abort$/;"	f
UltiSnips#CanExpandSnippet	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#CanExpandSnippet() abort$/;"	f
UltiSnips#CanJumpBackwards	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#CanJumpBackwards() abort$/;"	f
UltiSnips#CanJumpForwards	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#CanJumpForwards() abort$/;"	f
UltiSnips#CursorMoved	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#CursorMoved() abort$/;"	f
UltiSnips#Edit	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#Edit(bang, ...) abort$/;"	f
UltiSnips#ExpandSnippet	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#ExpandSnippet() abort$/;"	f
UltiSnips#ExpandSnippetOrJump	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#ExpandSnippetOrJump() abort$/;"	f
UltiSnips#FileTypeComplete	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#FileTypeComplete(arglead, cmdline, cursorpos) abort$/;"	f
UltiSnips#JumpBackwards	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#JumpBackwards() abort$/;"	f
UltiSnips#JumpForwards	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#JumpForwards() abort$/;"	f
UltiSnips#LeavingBuffer	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#LeavingBuffer() abort$/;"	f
UltiSnips#LeavingInsertMode	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#LeavingInsertMode() abort$/;"	f
UltiSnips#ListSnippets	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#ListSnippets() abort$/;"	f
UltiSnips#RefreshSnippets	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#RefreshSnippets() abort$/;"	f
UltiSnips#SaveLastVisualSelection	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#SaveLastVisualSelection() range abort$/;"	f
UltiSnips#SnippetsInCurrentScope	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#SnippetsInCurrentScope(...) abort$/;"	f
UltiSnips#TrackChange	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#TrackChange() abort$/;"	f
UltiSnips#map_keys#MapKeys	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^function! UltiSnips#map_keys#MapKeys() abort$/;"	f
UltiSnipsAddFiletypes	plugged/ultisnips/plugin/UltiSnips.vim	/^command! -nargs=1 UltiSnipsAddFiletypes :call UltiSnips#AddFiletypes(<q-args>)$/;"	c
UltiSnipsEdit	plugged/ultisnips/plugin/UltiSnips.vim	/^command! -bang -nargs=? -complete=customlist,UltiSnips#FileTypeComplete UltiSnipsEdit$/;"	c
UltiSnipsFileSource	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^class UltiSnipsFileSource(SnippetFileSource):$/;"	c
UltiSnipsSnippetDefinition	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/ulti_snips.py	/^class UltiSnipsSnippetDefinition(SnippetDefinition):$/;"	c
UltiSnips_AutoTrigger	plugged/ultisnips/plugin/UltiSnips.vim	/^augroup UltiSnips_AutoTrigger$/;"	a
UltiSnips_Manager	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^UltiSnips_Manager = SnippetManager(  # pylint:disable=invalid-name$/;"	v
UmlautsBeforeTriggerAndCharsAfter	plugged/ultisnips/test/test_Chars.py	/^class UmlautsBeforeTriggerAndCharsAfter(_UmlautsBase):$/;"	c
Undo_ChangesInPlaceholder	plugged/ultisnips/test/test_Editing.py	/^class Undo_ChangesInPlaceholder(_VimTest):$/;"	c
Undo_CompletelyUndoSnippet	plugged/ultisnips/test/test_Editing.py	/^class Undo_CompletelyUndoSnippet(_VimTest):$/;"	c
Undo_RemoveEditInTabstop	plugged/ultisnips/test/test_Editing.py	/^class Undo_RemoveEditInTabstop(_VimTest):$/;"	c
Undo_RemoveMultilineSnippet	plugged/ultisnips/test/test_Editing.py	/^class Undo_RemoveMultilineSnippet(_VimTest):$/;"	c
Undo_RemoveOneSnippetByTime	plugged/ultisnips/test/test_Editing.py	/^class Undo_RemoveOneSnippetByTime(_VimTest):$/;"	c
Undo_RemoveOneSnippetByTime2	plugged/ultisnips/test/test_Editing.py	/^class Undo_RemoveOneSnippetByTime2(_VimTest):$/;"	c
Undo_RemoveWholeSnippet	plugged/ultisnips/test/test_Editing.py	/^class Undo_RemoveWholeSnippet(_VimTest):$/;"	c
Unix	plugged/nerdcommenter/README.md	/^#### Unix$/;"	t	subsection:NERD Commenter""Installation""Manual Installation
Unlock	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^:Unlock$/;"	l
Update parsers used_by	plugged/nvim-treesitter/README.md	/^## Update parsers used_by$/;"	s	chapter:Advanced setup
UpdateModifiedSnippetWithoutCursorMove1	plugged/ultisnips/test/test_Editing.py	/^class UpdateModifiedSnippetWithoutCursorMove1(_VimTest):$/;"	c
UpdateModifiedSnippetWithoutCursorMove2	plugged/ultisnips/test/test_Editing.py	/^class UpdateModifiedSnippetWithoutCursorMove2(_VimTest):$/;"	c
Usage	plugged/nerdcommenter/README.md	/^## Usage$/;"	s	chapter:NERD Commenter
Usage	plugged/vim-easy-align/README.md	/^Usage$/;"	s	chapter:vim-easy-align ![travis-ci](https://travis-ci.org/junegunn/vim-easy-align.svg?branch=master)
Usage	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^:Usage$/;"	l
Usage	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^:Usage$/;"	l
Usage	plugged/vim-monokai/README.md	/^Usage$/;"	s	chapter:vim-monokai
Usage	plugged/vim-one/README.md	/^## Usage$/;"	s
Use Your Own Map	plugged/ctrlsf.vim/README.md	/^## Use Your Own Map$/;"	s	chapter:ctrlsf.vim
Using [Vundle](https://github.com/gmarik/vundle)	plugged/current-func-info.vim/README.md	/^Using [Vundle](https:\/\/github.com\/gmarik\/vundle)$/;"	s	chapter:Installation
Using blockwise-visual mode	plugged/vim-easy-align/README.md	/^### Using blockwise-visual mode$/;"	S	section:vim-easy-align ![travis-ci](https://travis-ci.org/junegunn/vim-easy-align.svg?branch=master)""Demo
Using blockwise-visual mode or negative N-th parameter	plugged/vim-easy-align/EXAMPLES.md	/^Using blockwise-visual mode or negative N-th parameter$/;"	s	chapter:easy-align examples
Using predefined alignment rules	plugged/vim-easy-align/README.md	/^### Using predefined alignment rules$/;"	S	section:vim-easy-align ![travis-ci](https://travis-ci.org/junegunn/vim-easy-align.svg?branch=master)""Demo
Using regular expression	plugged/vim-easy-align/README.md	/^### Using regular expression$/;"	S	section:vim-easy-align ![travis-ci](https://travis-ci.org/junegunn/vim-easy-align.svg?branch=master)""Demo
Utilities	plugged/nvim-treesitter/README.md	/^### Utilities$/;"	S	chapter:Extra features
VARIABLES	plugged/LuaSnip/DOC.md	/^# VARIABLES$/;"	c
VSCODE SNIPPETS LOADER	plugged/LuaSnip/DOC.md	/^# VSCODE SNIPPETS LOADER$/;"	c
Var	plugged/LuaSnip/lua/luasnip/extras/_lambda.lua	/^function lambda.Var(name)$/;"	f	unknown:lambda
Variables	plugged/nvim-treesitter/CONTRIBUTING.md	/^#### Variables$/;"	t	subsection:Contributing to `nvim-treesitter`""Parser configurations""Highlights
Vendor Snippets	plugged/vim-snippets/README.md	/^Vendor Snippets$/;"	s	chapter:snipMate & UltiSnip Snippets
VerifyVimDict1	plugged/ultisnips/test/test_UltiSnipFunc.py	/^class VerifyVimDict1(_VimTest):$/;"	c
VerifyVimDict2	plugged/ultisnips/test/test_UltiSnipFunc.py	/^class VerifyVimDict2(_VimTest):$/;"	c
VerifyVimDict3	plugged/ultisnips/test/test_UltiSnipFunc.py	/^class VerifyVimDict3(_VimTest):$/;"	c
Versions / dialects / ..	plugged/vim-snippets/README.md	/^Versions \/ dialects \/ ..$/;"	c
Via Plugin Manager (Recommended)	plugged/nerdcommenter/README.md	/^### Via Plugin Manager (Recommended)$/;"	S	section:NERD Commenter""Installation
Vim	plugged/neodark.vim/README.md	/^### Vim$/;"	S	section:neodark.vim""Installation
Vim (256 color)	plugged/neodark.vim/README.md	/^### Vim (256 color)$/;"	S	chapter:neodark.vim
Vim (True color)	plugged/neodark.vim/README.md	/^### Vim (True color)$/;"	S	chapter:neodark.vim
Vim Airline theme	plugged/vim-one/README.md	/^## Vim Airline theme$/;"	s
VimBuffer	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^class VimBuffer:$/;"	c
VimBufferProxy	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^class VimBufferProxy(vim_helper.VimBuffer):$/;"	c
VimColors	plugged/neodark.vim/test/test.rb	/^module VimColors$/;"	m
VimInterface	plugged/ultisnips/test/vim_interface.py	/^class VimInterface(TempFileManager):$/;"	c
VimInterfaceTmux	plugged/ultisnips/test/vim_interface.py	/^class VimInterfaceTmux(VimInterface):$/;"	c
VimInterfaceTmuxNeovim	plugged/ultisnips/test/vim_interface.py	/^class VimInterfaceTmuxNeovim(VimInterfaceTmux):$/;"	c
VimInterfaceWindows	plugged/ultisnips/test/vim_interface.py	/^class VimInterfaceWindows(VimInterface):$/;"	c
VimLCode	plugged/ultisnips/pythonx/UltiSnips/text_objects/viml_code.py	/^class VimLCode(NoneditableTextObject):$/;"	c
VimLCodeToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class VimLCodeToken(Token):$/;"	c
VimPosition	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^class VimPosition(Position):$/;"	c
VimState	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^class VimState:$/;"	c
VimTestCase	plugged/ultisnips/test/vim_test_case.py	/^class VimTestCase(unittest.TestCase, TempFileManager):$/;"	c
VirtualEdit	plugged/ultisnips/test/test_Fixes.py	/^class VirtualEdit(_VimTest):$/;"	c
Visual	plugged/ultisnips/pythonx/UltiSnips/text_objects/visual.py	/^class Visual(NoneditableTextObject, TextObjectTransformation):$/;"	c
VisualContentPreserver	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^class VisualContentPreserver:$/;"	c
VisualToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class VisualToken(Token):$/;"	c
VisualTransformationWithDefault_ExpandWithVisual	plugged/ultisnips/test/test_Visual.py	/^class VisualTransformationWithDefault_ExpandWithVisual(_VimTest):$/;"	c
VisualTransformationWithDefault_ExpandWithoutVisual	plugged/ultisnips/test/test_Visual.py	/^class VisualTransformationWithDefault_ExpandWithoutVisual(_VimTest):$/;"	c
VisualTransformation_InDefaultText_LineSelect_NoOverwrite	plugged/ultisnips/test/test_Visual.py	/^class VisualTransformation_InDefaultText_LineSelect_NoOverwrite(_VimTest):$/;"	c
VisualTransformation_InDefaultText_LineSelect_Overwrite	plugged/ultisnips/test/test_Visual.py	/^class VisualTransformation_InDefaultText_LineSelect_Overwrite(_VimTest):$/;"	c
VisualTransformation_LineSelect_Simple	plugged/ultisnips/test/test_Visual.py	/^class VisualTransformation_LineSelect_Simple(_VimTest):$/;"	c
VisualTransformation_SelectOneWord	plugged/ultisnips/test/test_Visual.py	/^class VisualTransformation_SelectOneWord(_VimTest):$/;"	c
VisualWithDefaultWithSlashes_ExpandWithoutVisual	plugged/ultisnips/test/test_Visual.py	/^class VisualWithDefaultWithSlashes_ExpandWithoutVisual(_VimTest):$/;"	c
VisualWithDefault_ExpandWithVisual	plugged/ultisnips/test/test_Visual.py	/^class VisualWithDefault_ExpandWithVisual(_VimTest):$/;"	c
VisualWithDefault_ExpandWithoutVisual	plugged/ultisnips/test/test_Visual.py	/^class VisualWithDefault_ExpandWithoutVisual(_VimTest):$/;"	c
Visual_CrossOneLine	plugged/ultisnips/test/test_Visual.py	/^class Visual_CrossOneLine(_VimTest):$/;"	c
Visual_ExpandTwice	plugged/ultisnips/test/test_Visual.py	/^class Visual_ExpandTwice(_VimTest):$/;"	c
Visual_InDefaultText_IndentBeforeTabstop_NoOverwrite	plugged/ultisnips/test/test_Visual.py	/^class Visual_InDefaultText_IndentBeforeTabstop_NoOverwrite(_VimTest):$/;"	c
Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite	plugged/ultisnips/test/test_Visual.py	/^class Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite(_VimTest):$/;"	c
Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite1	plugged/ultisnips/test/test_Visual.py	/^class Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite1(_VimTest):$/;"	c
Visual_InDefaultText_IndentSpacesToTabstop_Overwrite	plugged/ultisnips/test/test_Visual.py	/^class Visual_InDefaultText_IndentSpacesToTabstop_Overwrite(_VimTest):$/;"	c
Visual_InDefaultText_LineSelect_NoOverwrite	plugged/ultisnips/test/test_Visual.py	/^class Visual_InDefaultText_LineSelect_NoOverwrite(_VimTest):$/;"	c
Visual_InDefaultText_LineSelect_Overwrite	plugged/ultisnips/test/test_Visual.py	/^class Visual_InDefaultText_LineSelect_Overwrite(_VimTest):$/;"	c
Visual_InDefaultText_SelectOneWord	plugged/ultisnips/test/test_Visual.py	/^class Visual_InDefaultText_SelectOneWord(_VimTest):$/;"	c
Visual_InDefaultText_SelectOneWord_NoOverwrite	plugged/ultisnips/test/test_Visual.py	/^class Visual_InDefaultText_SelectOneWord_NoOverwrite(_VimTest):$/;"	c
Visual_LineSelect_CheckIndentSimple	plugged/ultisnips/test/test_Visual.py	/^class Visual_LineSelect_CheckIndentSimple(_VimTest):$/;"	c
Visual_LineSelect_CheckIndentTwice	plugged/ultisnips/test/test_Visual.py	/^class Visual_LineSelect_CheckIndentTwice(_VimTest):$/;"	c
Visual_LineSelect_CheckIndentWithTS_NoOverwrite	plugged/ultisnips/test/test_Visual.py	/^class Visual_LineSelect_CheckIndentWithTS_NoOverwrite(_VimTest):$/;"	c
Visual_LineSelect_DedentLine	plugged/ultisnips/test/test_Visual.py	/^class Visual_LineSelect_DedentLine(_VimTest):$/;"	c
Visual_LineSelect_Simple	plugged/ultisnips/test/test_Visual.py	/^class Visual_LineSelect_Simple(_VimTest):$/;"	c
Visual_LineSelect_WithTabStop	plugged/ultisnips/test/test_Visual.py	/^class Visual_LineSelect_WithTabStop(_VimTest):$/;"	c
Visual_NoVisualSelection_Ignore	plugged/ultisnips/test/test_Visual.py	/^class Visual_NoVisualSelection_Ignore(_VimTest):$/;"	c
Visual_SelectOneWord	plugged/ultisnips/test/test_Visual.py	/^class Visual_SelectOneWord(_VimTest):$/;"	c
Visual_SelectOneWordExclusive	plugged/ultisnips/test/test_Visual.py	/^class Visual_SelectOneWordExclusive(_VimTest):$/;"	c
Visual_SelectOneWordInclusive	plugged/ultisnips/test/test_Visual.py	/^class Visual_SelectOneWordInclusive(_VimTest):$/;"	c
Visual_SelectOneWordWithTabstop_TillEndOfLine	plugged/ultisnips/test/test_Visual.py	/^class Visual_SelectOneWordWithTabstop_TillEndOfLine(_VimTest):$/;"	c
Visual_SelectOneWord_Inword	plugged/ultisnips/test/test_Visual.py	/^class Visual_SelectOneWord_Inword(_VimTest):$/;"	c
Visual_SelectOneWord_ProblemAfterTab	plugged/ultisnips/test/test_Visual.py	/^class Visual_SelectOneWord_ProblemAfterTab(_VimTest):$/;"	c
Visual_SelectOneWord_TillEndOfLine	plugged/ultisnips/test/test_Visual.py	/^class Visual_SelectOneWord_TillEndOfLine(_VimTest):$/;"	c
Visual_SelectOneWord_TwiceVisual	plugged/ultisnips/test/test_Visual.py	/^class Visual_SelectOneWord_TwiceVisual(_VimTest):$/;"	c
WIN_ESCAPES	plugged/ultisnips/test/vim_interface.py	/^    WIN_ESCAPES = ["+", "^", "%", "~", "[", "]", "<", ">", "(", ")"]$/;"	v	class:VimInterfaceWindows
WIN_REPLACES	plugged/ultisnips/test/vim_interface.py	/^    WIN_REPLACES = [$/;"	v	class:VimInterfaceWindows
WORKSPACE_FOLDER	plugged/LuaSnip/lua/luasnip/util/environ.lua	/^function lazy_vars.WORKSPACE_FOLDER() -- The path of the opened workspace or folder$/;"	f	unknown:lazy_vars
WORKSPACE_NAME	plugged/LuaSnip/lua/luasnip/util/environ.lua	/^function lazy_vars.WORKSPACE_NAME() -- The name of the opened workspace or folder$/;"	f	unknown:lazy_vars
WebDevIconsGetFileFormatSymbol	plugged/vim-devicons/plugin/webdevicons.vim	/^function! WebDevIconsGetFileFormatSymbol(...)$/;"	f
WebDevIconsGetFileTypeSymbol	plugged/vim-devicons/plugin/webdevicons.vim	/^function! WebDevIconsGetFileTypeSymbol(...) abort$/;"	f
WebDevIconsNERDTreeChangeRootHandler	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeChangeRootHandler(node)$/;"	f
WebDevIconsNERDTreeDirClose	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeDirClose(node)$/;"	f
WebDevIconsNERDTreeDirCloseChildren	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeDirCloseChildren(node)$/;"	f
WebDevIconsNERDTreeDirCloseRecursively	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeDirCloseRecursively(node)$/;"	f
WebDevIconsNERDTreeDirOpen	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeDirOpen(node)$/;"	f
WebDevIconsNERDTreeDirOpenRecursively	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeDirOpenRecursively(node)$/;"	f
WebDevIconsNERDTreeDirUpdateFlags	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeDirUpdateFlags(node, glyph)$/;"	f
WebDevIconsNERDTreeMapActivateNode	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeMapActivateNode(node)$/;"	f
WebDevIconsNERDTreeMapActivateNodeSingleMode	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeMapActivateNodeSingleMode(node)$/;"	f
WebDevIconsNERDTreeMapCloseChildren	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeMapCloseChildren(node)$/;"	f
WebDevIconsNERDTreeMapCloseDir	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeMapCloseDir(node)$/;"	f
WebDevIconsNERDTreeMapOpenRecursively	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeMapOpenRecursively(node)$/;"	f
WebDevIconsNERDTreeMapUpdirKeepOpen	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeMapUpdirKeepOpen()$/;"	f
WebDevIconsNERDTreeUpDirCurrentRootClosedHandler	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeUpDirCurrentRootClosedHandler()$/;"	f
What are the relevant tickets (if any)?	plugged/vim-devicons/.github/PULL_REQUEST_TEMPLATE.md	/^#### What are the relevant tickets (if any)?$/;"	t
What does this Pull Request (PR) do?	plugged/vim-devicons/.github/PULL_REQUEST_TEMPLATE.md	/^#### What does this Pull Request (PR) do?$/;"	t
What is the `pairs-wise plugin automatically supported`?	plugged/nvim-cmp/README.md	/^#### What is the `pairs-wise plugin automatically supported`?$/;"	t	chapter:FAQ
What?	plugged/vim-gutentags/README.md	/^## What?$/;"	s	chapter:Gutentags
Where and why backward compatibility is given up?	plugged/ctrlsf.vim/README.md	/^### Where and why backward compatibility is given up?$/;"	S	section:ctrlsf.vim""For user comes from pre v1.0
Why?	plugged/vim-gutentags/README.md	/^## Why?$/;"	s	chapter:Gutentags
Windows	plugged/nvim-lspconfig/README.md	/^## Windows$/;"	s	chapter:LSP overview
Windows (PowerShell)	plugged/nerdcommenter/README.md	/^#### Windows (PowerShell)$/;"	t	subsection:NERD Commenter""Installation""Manual Installation
WriteBookmarks	plugged/nerdtree/lib/nerdtree/creator.vim	/^    command! -buffer -nargs=0 WriteBookmarks call g:NERDTreeBookmark.Write()$/;"	c
Writing	plugged/vim-gutentags/CONTRIBUTING.md	/^## Writing$/;"	s	chapter:Contributing
X	plugged/nvim-treesitter/tests/indent/rust/enum.rs	/^    X,$/;"	e	enum:Foo
X	plugged/vim-one/colors/one.vim	/^  function! <SID>X(group, fg, bg, attr, ...)$/;"	f
XAPI	plugged/vim-one/colors/one.vim	/^  fun <SID>XAPI(group, fg, bg, attr)$/;"	f
Y	plugged/nvim-treesitter/tests/indent/rust/enum.rs	/^    Y($/;"	e	enum:Foo
Z	plugged/nvim-treesitter/tests/indent/rust/enum.rs	/^    Z {$/;"	e	enum:Foo
['eslint/confirmESLintExecution']	plugged/nvim-lspconfig/lua/lspconfig/eslint.lua	/^      ['eslint\/confirmESLintExecution'] = function(_, result)$/;"	f
['eslint/noLibrary']	plugged/nvim-lspconfig/lua/lspconfig/eslint.lua	/^      ['eslint\/noLibrary'] = function()$/;"	f
['eslint/openDoc']	plugged/nvim-lspconfig/lua/lspconfig/eslint.lua	/^      ['eslint\/openDoc'] = function(_, result)$/;"	f
['eslint/probeFailed']	plugged/nvim-lspconfig/lua/lspconfig/eslint.lua	/^      ['eslint\/probeFailed'] = function()$/;"	f
['textDocument/codeAction']	plugged/nvim-lspconfig/lua/lspconfig/jdtls.lua	/^      ['textDocument\/codeAction'] = function(a, b, actions)$/;"	f
['textDocument/rename']	plugged/nvim-lspconfig/lua/lspconfig/jdtls.lua	/^      ['textDocument\/rename'] = function(a, b, workspace_edit)$/;"	f
['workspace/applyEdit']	plugged/nvim-lspconfig/lua/lspconfig/jdtls.lua	/^      ['workspace\/applyEdit'] = function(a, b, workspace_edit)$/;"	f
[Code of Conduct](CODE_OF_CONDUCT.md)	plugged/vim-devicons/README.md	/^### [Code of Conduct](CODE_OF_CONDUCT.md)$/;"	S	section:Contributing
[Contributing Guide](CONTRIBUTING.md)	plugged/vim-devicons/README.md	/^### [Contributing Guide](CONTRIBUTING.md)$/;"	S	section:Contributing
[NeoBundle](https://github.com/Shougo/neobundle.vim)	plugged/nerdcommenter/README.md	/^#### [NeoBundle](https:\/\/github.com\/Shougo\/neobundle.vim)$/;"	t	subsection:NERD Commenter""Installation""Via Plugin Manager (Recommended)
[Pathogen](https://github.com/tpope/vim-pathogen)	plugged/nerdcommenter/README.md	/^#### [Pathogen](https:\/\/github.com\/tpope\/vim-pathogen)$/;"	t	subsection:NERD Commenter""Installation""Via Plugin Manager (Recommended)
[Vim-Plug](https://github.com/junegunn/vim-plug)	plugged/nerdcommenter/README.md	/^#### [Vim-Plug](https:\/\/github.com\/junegunn\/vim-plug)$/;"	t	subsection:NERD Commenter""Installation""Via Plugin Manager (Recommended)
[Vundle](https://github.com/VundleVim/Vundle.vim) or similar	plugged/nerdcommenter/README.md	/^#### [Vundle](https:\/\/github.com\/VundleVim\/Vundle.vim) or similar$/;"	t	subsection:NERD Commenter""Installation""Via Plugin Manager (Recommended)
[['<S-Tab>']	lua/lsp.lua	/^       [['<S-Tab>'] = function(fallback)$/;"	f
[['<Tab>']	lua/lsp.lua	/^       [['<Tab>'] = function(fallback)$/;"	f
[neobundle.vim](https://github.com/Shougo/neobundle.vim) :	plugged/vim-nerdtree-syntax-highlight/README.md	/^##### [neobundle.vim](https:\/\/github.com\/Shougo\/neobundle.vim) :$/;"	T	subsection:vim-nerdtree-syntax-highlight""Installation:
[vim-plug](https://github.com/junegunn/vim-plug)	plugged/vim-monokai/README.md	/^### [vim-plug](https:\/\/github.com\/junegunn\/vim-plug)$/;"	S	section:vim-monokai""Install
_	plugged/LuaSnip/lua/luasnip/extras/_lambda.lua	/^function lambda._(value)$/;"	f	unknown:lambda
_AddFuncBase	plugged/ultisnips/test/test_UltiSnipFunc.py	/^class _AddFuncBase(_VimTest):$/;"	c
_AnonBase	plugged/ultisnips/test/test_AnonymousExpansion.py	/^class _AnonBase(_VimTest):$/;"	c
_Base	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class _Base:$/;"	c
_BaseGuessing	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class _BaseGuessing:$/;"	c
_CONDITIONAL	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^_CONDITIONAL = re.compile(r"\\(\\?(\\d+):", re.DOTALL)$/;"	v
_CleverReplace	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^class _CleverReplace:$/;"	c
_DOLLAR	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^_DOLLAR = re.compile(r"\\$(\\d+)", re.DOTALL)$/;"	v
_ES_Base	plugged/ultisnips/test/test_Selection.py	/^class _ES_Base(_VimTest):$/;"	c
_ExpandTabs	plugged/ultisnips/test/test_Format.py	/^class _ExpandTabs(_VimTest):$/;"	c
_FormatoptionsBase	plugged/ultisnips/test/test_Format.py	/^class _FormatoptionsBase(_VimTest):$/;"	c
_INDENT	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    _INDENT = re.compile(r"^[ \\t]*")$/;"	v	class:SnippetDefinition
_LONG_CASEFOLDINGS	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^_LONG_CASEFOLDINGS = re.compile(r"\\\\([UL].*?)\\\\E", re.DOTALL)$/;"	v
_ListAllSnippets	plugged/ultisnips/test/test_ListSnippets.py	/^class _ListAllSnippets(_VimTest):$/;"	c
_MPBase	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^class _MPBase:$/;"	c
_MultiLineDefault	plugged/ultisnips/test/test_Chars.py	/^class _MultiLineDefault(_VimTest):$/;"	c
_MultiWord_SnippetOptions_ExpandWordSnippets	plugged/ultisnips/test/test_SnippetOptions.py	/^class _MultiWord_SnippetOptions_ExpandWordSnippets(_VimTest):$/;"	c
_MultipleMatches	plugged/ultisnips/test/test_MultipleMatches.py	/^class _MultipleMatches(_VimTest):$/;"	c
_No_Tab_Expand	plugged/ultisnips/test/test_SnippetOptions.py	/^class _No_Tab_Expand(_VimTest):$/;"	c
_ONE_CHAR_CASE_SWITCH	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^_ONE_CHAR_CASE_SWITCH = re.compile(r"\\\\([ul].)", re.DOTALL)$/;"	v
_OS_Base	plugged/ultisnips/test/test_Selection.py	/^class _OS_Base(_VimTest):$/;"	c
_ParseSnippets_MultiWord	plugged/ultisnips/test/test_ParseSnippets.py	/^class _ParseSnippets_MultiWord(_VimTest):$/;"	c
_ParseSnippets_MultiWord_RE	plugged/ultisnips/test/test_ParseSnippets.py	/^class _ParseSnippets_MultiWord_RE(_VimTest):$/;"	c
_Placeholder	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^_Placeholder = namedtuple("_FrozenPlaceholder", ["current_text", "start", "end"])$/;"	v
_REPLACE_NON_WS	plugged/ultisnips/pythonx/UltiSnips/text_objects/visual.py	/^_REPLACE_NON_WS = re.compile(r"[^ \\t]")$/;"	v
_Regex_Self	plugged/ultisnips/test/test_SnippetOptions.py	/^class _Regex_Self(_VimTest):$/;"	c
_SelectModeMappings	plugged/ultisnips/test/test_Selection.py	/^class _SelectModeMappings(_VimTest):$/;"	c
_SimpleExpands	plugged/ultisnips/test/test_Expand.py	/^class _SimpleExpands(_VimTest):$/;"	c
_SnippetOptions_ExpandWordSnippets	plugged/ultisnips/test/test_SnippetOptions.py	/^class _SnippetOptions_ExpandWordSnippets(_VimTest):$/;"	c
_SnippetUtilCursor	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^class _SnippetUtilCursor:$/;"	c
_TABS	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    _TABS = re.compile(r"^\\t*")$/;"	v	class:SnippetDefinition
_TOKEN_TO_TEXTOBJECT	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/snipmate.py	/^_TOKEN_TO_TEXTOBJECT = {$/;"	v
_TOKEN_TO_TEXTOBJECT	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/ulti_snips.py	/^_TOKEN_TO_TEXTOBJECT = {$/;"	v
_TabExpand_RealWorld	plugged/ultisnips/test/test_SnippetOptions.py	/^class _TabExpand_RealWorld:$/;"	c
_Tabs	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^class _Tabs:$/;"	c
_TextIterator	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class _TextIterator:$/;"	c
_UmlautsBase	plugged/ultisnips/test/test_Chars.py	/^class _UmlautsBase(_VimTest):$/;"	c
_VimCursor	plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^class _VimCursor(NoneditableTextObject):$/;"	c
_VimTest	plugged/ultisnips/test/test_AnonymousExpansion.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x	nameref:unknown:VimTestCase
_VimTest	plugged/ultisnips/test/test_Autocommands.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x	nameref:unknown:VimTestCase
_VimTest	plugged/ultisnips/test/test_Autotrigger.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x	nameref:unknown:VimTestCase
_VimTest	plugged/ultisnips/test/test_Chars.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x	nameref:unknown:VimTestCase
_VimTest	plugged/ultisnips/test/test_Choices.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x	nameref:unknown:VimTestCase
_VimTest	plugged/ultisnips/test/test_Completion.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x	nameref:unknown:VimTestCase
_VimTest	plugged/ultisnips/test/test_ContextSnippets.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x	nameref:unknown:VimTestCase
_VimTest	plugged/ultisnips/test/test_Editing.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x	nameref:unknown:VimTestCase
_VimTest	plugged/ultisnips/test/test_Expand.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x	nameref:unknown:VimTestCase
_VimTest	plugged/ultisnips/test/test_Fixes.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x	nameref:unknown:VimTestCase
_VimTest	plugged/ultisnips/test/test_Folding.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x	nameref:unknown:VimTestCase
_VimTest	plugged/ultisnips/test/test_Format.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x	nameref:unknown:VimTestCase
_VimTest	plugged/ultisnips/test/test_Interpolation.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x	nameref:unknown:VimTestCase
_VimTest	plugged/ultisnips/test/test_ListSnippets.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x	nameref:unknown:VimTestCase
_VimTest	plugged/ultisnips/test/test_Mirror.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x	nameref:unknown:VimTestCase
_VimTest	plugged/ultisnips/test/test_Movement.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x	nameref:unknown:VimTestCase
_VimTest	plugged/ultisnips/test/test_MultipleMatches.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x	nameref:unknown:VimTestCase
_VimTest	plugged/ultisnips/test/test_ParseSnippets.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x	nameref:unknown:VimTestCase
_VimTest	plugged/ultisnips/test/test_Plugin.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x	nameref:unknown:VimTestCase
_VimTest	plugged/ultisnips/test/test_Recursive.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x	nameref:unknown:VimTestCase
_VimTest	plugged/ultisnips/test/test_Selection.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x	nameref:unknown:VimTestCase
_VimTest	plugged/ultisnips/test/test_SnipMate.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x	nameref:unknown:VimTestCase
_VimTest	plugged/ultisnips/test/test_SnippetActions.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x	nameref:unknown:VimTestCase
_VimTest	plugged/ultisnips/test/test_SnippetOptions.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x	nameref:unknown:VimTestCase
_VimTest	plugged/ultisnips/test/test_SnippetPriorities.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x	nameref:unknown:VimTestCase
_VimTest	plugged/ultisnips/test/test_TabStop.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x	nameref:unknown:VimTestCase
_VimTest	plugged/ultisnips/test/test_Transformation.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x	nameref:unknown:VimTestCase
_VimTest	plugged/ultisnips/test/test_UltiSnipFunc.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x	nameref:unknown:VimTestCase
_VimTest	plugged/ultisnips/test/test_Visual.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x	nameref:unknown:VimTestCase
_VisualContent	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^_VisualContent = namedtuple("_VisualContent", ["mode", "text"])$/;"	v
__ALLOWED_TOKENS	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/snipmate.py	/^__ALLOWED_TOKENS = [$/;"	v
__ALLOWED_TOKENS	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/ulti_snips.py	/^__ALLOWED_TOKENS = [$/;"	v
__ALLOWED_TOKENS_IN_TABSTOPS	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/snipmate.py	/^__ALLOWED_TOKENS_IN_TABSTOPS = [$/;"	v
__WHITESPACE_SPLIT	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^__WHITESPACE_SPLIT = re.compile(r"\\s")$/;"	v
__add__	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __add__(self, pos):$/;"	m	class:Position
__add__	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def __add__(self, value):$/;"	m	class:SnippetUtil
__call	plugged/LuaSnip/lua/luasnip/extras/_lambda.lua	/^function _PEMT.__call(fun, ...)$/;"	f	unknown:_PEMT
__call	plugged/LuaSnip/lua/luasnip/extras/init.lua	/^function LM:__call(expr, input_ids)$/;"	f	unknown:LM
__call	plugged/nvim-cmp/lua/cmp/config/mapping.lua	/^  __call = function(_, invoke, modes)$/;"	f
__call	plugged/nvim-cmp/lua/cmp/init.lua	/^  __call = function(self, c)$/;"	f
__call	plugged/nvim-cmp/lua/cmp/utils/async.lua	/^    __call = function(self, ...)$/;"	f
__call	plugged/nvim-cmp/lua/cmp/utils/buffer.lua	/^  __call = function(self, name)$/;"	f
__call	plugged/nvim-cmp/lua/cmp/utils/keymap.lua	/^  __call = function(self, keys, mode, callback)$/;"	f
__call	plugged/nvim-cmp/lua/cmp/utils/keymap.lua	/^  __call = function(self, mode, keys_or_chars, callback)$/;"	f
__call	plugged/nvim-cmp/lua/cmp/utils/misc.lua	/^  __call = function(_, group)$/;"	f
__call	plugged/nvim-cmp/lua/cmp/vim_source.lua	/^  __call = function(self, callback)$/;"	f
__delitem__	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def __delitem__(self, key):$/;"	m	class:VimBufferProxy
__eq__	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __eq__(self, other):$/;"	m	class:Position
__getitem__	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def __getitem__(self, key):$/;"	m	class:VimBufferProxy
__getitem__	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __getitem__(self, index):$/;"	m	class:Position
__getitem__	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def __getitem__(self, index):$/;"	m	class:_SnippetUtilCursor
__getitem__	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def __getitem__(self, no):$/;"	m	class:_Tabs
__getitem__	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^    def __getitem__(self, idx):$/;"	m	class:VimBuffer
__getslice__	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def __getslice__(self, i, j):$/;"	m	class:VimBufferProxy
__index	plugged/LuaSnip/lua/luasnip/extras/_lambda.lua	/^	__index = function(_, key)$/;"	f
__index	plugged/LuaSnip/lua/luasnip/extras/_lambda.lua	/^function _PEMT.__index(obj, key)$/;"	f	unknown:_PEMT
__index	plugged/LuaSnip/lua/luasnip/extras/init.lua	/^		__index = function(table, key)$/;"	f
__index	plugged/LuaSnip/lua/luasnip/extras/init.lua	/^function LM:__index(key)$/;"	f	unknown:LM
__index	plugged/LuaSnip/lua/luasnip/nodes/choiceNode.lua	/^			__index = function(node, key)$/;"	f
__index	plugged/LuaSnip/lua/luasnip/nodes/snippet.lua	/^		__index = function(_, key)$/;"	f
__index	plugged/LuaSnip/lua/luasnip/nodes/snippet.lua	/^		__index = function(table, key)$/;"	f
__index	plugged/LuaSnip/lua/luasnip/session.lua	/^	__index = function(table, key)$/;"	f
__index	plugged/LuaSnip/lua/luasnip/util/environ.lua	/^function Environ:__index(key)$/;"	f	unknown:Environ
__index	plugged/nvim-lspconfig/lua/lspconfig.lua	/^function mt:__index(k)$/;"	f	unknown:mt
__index	plugged/nvim-treesitter/lua/nvim-treesitter/caching.lua	/^    __index = function(tbl, key)$/;"	f
__index	plugged/nvim-treesitter/lua/nvim-treesitter/parsers.lua	/^    __index = function(tbl, key)$/;"	f
__index	plugged/nvim-treesitter/lua/nvim-treesitter/query.lua	/^  mt.__index = function(tbl, key)$/;"	f	unknown:mt
__init__	plugged/nvim-treesitter/tests/indent/python/basic_blocks.py	/^    def __init__(self):$/;"	m	class:Foo
__init__	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def __init__(self, snippets_stack, vstate):$/;"	m	class:VimBufferProxy
__init__	plugged/ultisnips/pythonx/UltiSnips/indent_util.py	/^    def __init__(self):$/;"	m	class:IndentUtil
__init__	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __init__(self, line, col):$/;"	m	class:Position
__init__	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def __init__($/;"	m	class:SnippetDefinition
__init__	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def __init__(self, cursor):$/;"	m	class:_SnippetUtilCursor
__init__	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/snipmate.py	/^    def __init__(self, trigger, value, description, location):$/;"	m	class:SnipMateSnippetDefinition
__init__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __init__(self, gen, indent):$/;"	m	class:Token
__init__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __init__(self, text, offset):$/;"	m	class:_TextIterator
__init__	plugged/ultisnips/pythonx/UltiSnips/snippet/source/base.py	/^    def __init__(self):$/;"	m	class:SnippetSource
__init__	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^    def __init__(self):$/;"	m	class:SnippetFileSource
__init__	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^    def __init__(self, filename, line_index, msg):$/;"	m	class:SnippetSyntaxError
__init__	plugged/ultisnips/pythonx/UltiSnips/snippet/source/snippet_dictionary.py	/^    def __init__(self):$/;"	m	class:SnippetDictionary
__init__	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def __init__(self, expand_trigger, forward_trigger, backward_trigger):$/;"	m	class:SnippetManager
__init__	plugged/ultisnips/pythonx/UltiSnips/text.py	/^    def __init__(self, text):$/;"	m	class:LineIterator
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def __init__($/;"	m	class:TextObject
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:EditableTextObject
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/choices.py	/^    def __init__(self, parent, token: ChoicesToken):$/;"	m	class:Choices
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/mirror.py	/^    def __init__(self, parent, tabstop, token):$/;"	m	class:Mirror
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:SnippetUtilForAction
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def __init__(self, initial_indent, vmode, vtext, context, parent):$/;"	m	class:SnippetUtil
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def __init__(self, parent, token):$/;"	m	class:PythonCode
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def __init__(self, to):$/;"	m	class:_Tabs
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/shell_code.py	/^    def __init__(self, parent, token):$/;"	m	class:ShellCode
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^    def __init__($/;"	m	class:SnippetInstance
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^    def __init__(self, parent):$/;"	m	class:_VimCursor
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/tabstop.py	/^    def __init__(self, parent, token, start=None, end=None):$/;"	m	class:TabStop
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^    def __init__(self, expression):$/;"	m	class:_CleverReplace
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^    def __init__(self, parent, ts, token):$/;"	m	class:Transformation
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^    def __init__(self, token):$/;"	m	class:TextObjectTransformation
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/viml_code.py	/^    def __init__(self, parent, token):$/;"	m	class:VimLCode
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/visual.py	/^    def __init__(self, parent, token):$/;"	m	class:Visual
__init__	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def __init__(self):$/;"	m	class:VimPosition
__init__	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def __init__(self):$/;"	m	class:VimState
__init__	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def __init__(self):$/;"	m	class:VisualContentPreserver
__init__	plugged/ultisnips/rplugin/python3/deoplete/sources/ultisnips.py	/^    def __init__(self, vim):$/;"	m	class:Source
__init__	plugged/ultisnips/test/vim_interface.py	/^    def __init__(self):$/;"	m	class:VimInterfaceWindows
__init__	plugged/ultisnips/test/vim_interface.py	/^    def __init__(self, name=""):$/;"	m	class:TempFileManager
__init__	plugged/ultisnips/test/vim_interface.py	/^    def __init__(self, vim_executable, name):$/;"	m	class:VimInterface
__init__	plugged/ultisnips/test/vim_interface.py	/^    def __init__(self, vim_executable, session):$/;"	m	class:VimInterfaceTmux
__init__	plugged/ultisnips/test/vim_interface.py	/^    def __init__(self, vim_executable, session):$/;"	m	class:VimInterfaceTmuxNeovim
__init__	plugged/ultisnips/test/vim_test_case.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:VimTestCase
__init__	plugged/vim-devicons/rplugin/python3/denite/filter/devicons_denite_converter.py	/^	def __init__(self, vim):$/;"	m	class:Filter
__iter__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __iter__(self):$/;"	m	class:_TextIterator
__iter__	plugged/ultisnips/pythonx/UltiSnips/text.py	/^    def __iter__(self):$/;"	m	class:LineIterator
__le__	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __le__(self, other):$/;"	m	class:Position
__le__	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def __le__(self, other):$/;"	m	class:TextObject
__len__	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def __len__(self):$/;"	m	class:VimBufferProxy
__len__	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def __len__(self):$/;"	m	class:_SnippetUtilCursor
__len__	plugged/ultisnips/pythonx/UltiSnips/snippet/source/snippet_dictionary.py	/^    def __len__(self):$/;"	m	class:SnippetDictionary
__len__	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^    def __len__(self):$/;"	m	class:VimBuffer
__lshift__	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def __lshift__(self, other):$/;"	m	class:SnippetUtil
__lt__	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __lt__(self, other):$/;"	m	class:Position
__lt__	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def __lt__(self, other):$/;"	m	class:TextObject
__ne__	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __ne__(self, other):$/;"	m	class:Position
__newindex	plugged/nvim-lspconfig/lua/lspconfig/configs.lua	/^function configs.__newindex(t, config_name, config_def)$/;"	f	unknown:configs
__newindex	plugged/nvim-treesitter/lua/nvim-treesitter/parsers.lua	/^        __newindex = function(parserconfigtable, key, value)$/;"	f
__newindex	plugged/nvim-treesitter/lua/nvim-treesitter/parsers.lua	/^  __newindex = function(table, parsername, parserconfig)$/;"	f
__next__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __next__(self):$/;"	m	class:_TextIterator
__next__	plugged/ultisnips/pythonx/UltiSnips/text.py	/^    def __next__(self):$/;"	m	class:LineIterator
__repr__	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __repr__(self):$/;"	m	class:Position
__repr__	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def __repr__(self):$/;"	m	class:SnippetDefinition
__repr__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __repr__(self):$/;"	m	class:ChoicesToken
__repr__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __repr__(self):$/;"	m	class:EndOfTextToken
__repr__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __repr__(self):$/;"	m	class:EscapeCharToken
__repr__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __repr__(self):$/;"	m	class:MirrorToken
__repr__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __repr__(self):$/;"	m	class:PythonCodeToken
__repr__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __repr__(self):$/;"	m	class:ShellCodeToken
__repr__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __repr__(self):$/;"	m	class:TabStopToken
__repr__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __repr__(self):$/;"	m	class:TransformationToken
__repr__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __repr__(self):$/;"	m	class:VimLCodeToken
__repr__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __repr__(self):$/;"	m	class:VisualToken
__repr__	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def __repr__(self):$/;"	m	class:TextObject
__repr__	plugged/ultisnips/pythonx/UltiSnips/text_objects/choices.py	/^    def __repr__(self):$/;"	m	class:Choices
__repr__	plugged/ultisnips/pythonx/UltiSnips/text_objects/tabstop.py	/^    def __repr__(self):$/;"	m	class:TabStop
__rshift__	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def __rshift__(self, other):$/;"	m	class:SnippetUtil
__setitem__	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def __setitem__(self, key, value):$/;"	m	class:VimBufferProxy
__setitem__	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def __setitem__(self, index, value):$/;"	m	class:_SnippetUtilCursor
__setitem__	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def __setitem__(self, no, value):$/;"	m	class:_Tabs
__setitem__	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^    def __setitem__(self, idx, text):$/;"	m	class:VimBuffer
__setslice__	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def __setslice__(self, i, j, text):$/;"	m	class:VimBufferProxy
__str__	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def __str__(self):$/;"	m	class:_SnippetUtilCursor
__sub__	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __sub__(self, pos):$/;"	m	class:Position
__tostring	plugged/LuaSnip/lua/luasnip/extras/_lambda.lua	/^function _PEMT.__tostring(e)$/;"	f	unknown:_PEMT
__unm	plugged/LuaSnip/lua/luasnip/extras/_lambda.lua	/^function _PEMT.__unm(arg)$/;"	f	unknown:_PEMT
_action_context	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _action_context(self):$/;"	m	class:SnippetManager
_add_child	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _add_child(self, child):$/;"	m	class:EditableTextObject
_apply_change	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def _apply_change(self, change):$/;"	m	class:VimBufferProxy
_arg	plugged/LuaSnip/lua/luasnip/extras/_lambda.lua	/^local function _arg(...)$/;"	f
_ask_snippets	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^def _ask_snippets(snippets):$/;"	f
_ask_user	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^def _ask_user(a, formatted):$/;"	f
_before_test	plugged/ultisnips/test/test_Fixes.py	/^    def _before_test(self):$/;"	m	class:NonUnicodeDataInUnnamedRegister
_before_test	plugged/ultisnips/test/test_Plugin.py	/^    def _before_test(self):$/;"	m	class:Plugin_SuperTab_SimpleTest
_before_test	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    def _before_test(self):$/;"	m	class:TestLangmapWithUtf8_ExpectCorrectResult
_before_test	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    def _before_test(self):$/;"	m	class:TestNonEmptyLangmapWithSemi_ExpectCorrectResult
_before_test	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    def _before_test(self):$/;"	m	class:_AddFuncBase
_before_test	plugged/ultisnips/test/vim_test_case.py	/^    def _before_test(self):$/;"	m	class:VimTestCase
_calc_end	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^def _calc_end(text, start):$/;"	f
_can_expand	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _can_expand(self, autotrigger_only=False):$/;"	m	class:SnippetManager
_check_if_still_inside_snippet	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _check_if_still_inside_snippet(self):$/;"	m	class:SnippetManager
_check_version	plugged/ultisnips/test/vim_interface.py	/^    def _check_version(self):$/;"	m	class:VimInterfaceTmux
_child_has_moved	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _child_has_moved(self, idx, pivot, diff):$/;"	m	class:EditableTextObject
_chomp	plugged/ultisnips/pythonx/UltiSnips/text_objects/shell_code.py	/^def _chomp(string):$/;"	f
_concat	plugged/LuaSnip/lua/luasnip/extras/init.lua	/^local function _concat(lines)$/;"	f
_context_match	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def _context_match(self, visual_content):$/;"	m	class:SnippetDefinition
_create_file	plugged/ultisnips/test/vim_test_case.py	/^    def _create_file(self, file_path, content):$/;"	m	class:VimTestCase
_create_transformations	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/ulti_snips.py	/^def _create_transformations(all_tokens, seen_ts):$/;"	f
_current_snippet	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _current_snippet(self):$/;"	m	class:SnippetManager
_current_snippet_is_done	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _current_snippet_is_done(self):$/;"	m	class:SnippetManager
_cursor_moved	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _cursor_moved(self):$/;"	m	class:SnippetManager
_del_child	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _del_child(self, child):$/;"	m	class:EditableTextObject
_disable_edits	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def _disable_edits(self):$/;"	m	class:VimBufferProxy
_do_edit	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _do_edit(self, cmd, ctab=None):$/;"	m	class:EditableTextObject
_do_edit	plugged/ultisnips/pythonx/UltiSnips/text_objects/choices.py	/^    def _do_edit(self, cmd, ctab=None):$/;"	m	class:Choices
_do_parse	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/base.py	/^    def _do_parse(parent, text, allowed_tokens):$/;"	f	function:tokenize_snippet_text	file:
_do_print	plugged/ultisnips/pythonx/UltiSnips/debug.py	/^    def _do_print(text_object, indent=""):$/;"	f	function:echo_to_hierarchy	file:
_do_snippet	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _do_snippet(self, snippet, before):$/;"	m	class:SnippetManager
_editable_children	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _editable_children(self):$/;"	m	class:EditableTextObject
_else	plugged/LuaSnip/lua/luasnip/extras/init.lua	/^	_else = to_function(_else or "")$/;"	f
_enable_edits	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def _enable_edits(self):$/;"	m	class:VimBufferProxy
_eval_code	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def _eval_code(self, code, additional_locals={}):$/;"	m	class:SnippetDefinition
_execute_action	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def _execute_action(self, action, context, additional_locals={}):$/;"	m	class:SnippetDefinition
_extra_vim_config	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:_AnonBase
_extra_vim_config	plugged/ultisnips/test/test_Autocommands.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:Autocommands
_extra_vim_config	plugged/ultisnips/test/test_Expand.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:SimpleExpandNewLineAndBackspae_ExpectCorrectResult
_extra_vim_config	plugged/ultisnips/test/test_Expand.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:SimpleExpand_DoNotClobberDefaultRegister
_extra_vim_config	plugged/ultisnips/test/test_Fixes.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:ShiftWidthZero
_extra_vim_config	plugged/ultisnips/test/test_Fixes.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:VirtualEdit
_extra_vim_config	plugged/ultisnips/test/test_Folding.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:FoldingEnabled_SnippetWithFold_ExpectNoFolding
_extra_vim_config	plugged/ultisnips/test/test_Folding.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:PerlSyntaxFold
_extra_vim_config	plugged/ultisnips/test/test_Format.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:ProperIndenting_AutoIndentAndNewline_ECR
_extra_vim_config	plugged/ultisnips/test/test_Format.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:RecTabStopsWithExpandtab_SpecialIndentProblem_ECR
_extra_vim_config	plugged/ultisnips/test/test_Format.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:_ExpandTabs
_extra_vim_config	plugged/ultisnips/test/test_Format.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:_FormatoptionsBase
_extra_vim_config	plugged/ultisnips/test/test_Interpolation.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:PythonCode_IndentEtSw
_extra_vim_config	plugged/ultisnips/test/test_Interpolation.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:PythonCode_IndentEtSwOffset
_extra_vim_config	plugged/ultisnips/test/test_Interpolation.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:PythonCode_IndentNoetSwTs
_extra_vim_config	plugged/ultisnips/test/test_Interpolation.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:PythonCode_OptExists
_extra_vim_config	plugged/ultisnips/test/test_ListSnippets.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:ListAllAvailable_Disabled_ExpectCorrectResult
_extra_vim_config	plugged/ultisnips/test/test_Movement.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:CursorMovement_BS_InEditMode
_extra_vim_config	plugged/ultisnips/test/test_Plugin.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:Plugin_SuperTab_SimpleTest
_extra_vim_config	plugged/ultisnips/test/test_Selection.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:_ES_Base
_extra_vim_config	plugged/ultisnips/test/test_Selection.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:_OS_Base
_extra_vim_config	plugged/ultisnips/test/test_Selection.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:_SelectModeMappings
_extra_vim_config	plugged/ultisnips/test/test_SnipMate.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:snipMate_Disabled
_extra_vim_config	plugged/ultisnips/test/test_SnippetOptions.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:No_Tab_Expand_ET
_extra_vim_config	plugged/ultisnips/test/test_SnippetOptions.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:No_Tab_Expand_ET_Leading_Spaces
_extra_vim_config	plugged/ultisnips/test/test_SnippetOptions.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:No_Tab_Expand_ET_SW
_extra_vim_config	plugged/ultisnips/test/test_SnippetOptions.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:No_Tab_Expand_ET_SW_TS
_extra_vim_config	plugged/ultisnips/test/test_SnippetOptions.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:No_Tab_Expand_No_TS
_extra_vim_config	plugged/ultisnips/test/test_SnippetOptions.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:No_Tab_Expand_RealWorld
_extra_vim_config	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:AddNewSnippetSource
_extra_vim_config	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:TestNonEmptyLangmap_ExpectCorrectResult
_extra_vim_config	plugged/ultisnips/test/test_Visual.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:Visual_SelectOneWordExclusive
_extra_vim_config	plugged/ultisnips/test/vim_test_case.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:VimTestCase
_file_to_edit	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _file_to_edit(self, requested_ft, bang):$/;"	m	class:SnippetManager
_fill_eager_vars	plugged/LuaSnip/lua/luasnip/util/environ.lua	/^local function _fill_eager_vars(env)$/;"	f
_find_closing_brace	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^def _find_closing_brace(string, start_pos):$/;"	f
_find_recursive	plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^        def _find_recursive(obj):$/;"	f	member:SnippetInstance.update_textobjects	file:
_get	plugged/cmp-nvim-lsp/lua/cmp_nvim_lsp/source.lua	/^source._get = function(_, root, paths)$/;"	f	unknown:source
_get_all_snippet_files_for	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^    def _get_all_snippet_files_for(self, ft):$/;"	m	class:SnippetFileSource
_get_all_snippet_files_for	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^    def _get_all_snippet_files_for(self, ft):$/;"	m	class:SnipMateFileSource
_get_all_snippet_files_for	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^    def _get_all_snippet_files_for(self, ft):$/;"	m	class:UltiSnipsFileSource
_get_choices_placeholder	plugged/ultisnips/pythonx/UltiSnips/text_objects/choices.py	/^    def _get_choices_placeholder(self) -> str:$/;"	m	class:Choices	typeref:typename:str
_get_diff	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def _get_diff(self, start, end, new_value):$/;"	m	class:VimBufferProxy
_get_entries_view	plugged/nvim-cmp/lua/cmp/view.lua	/^view._get_entries_view = function(self)$/;"	f	unknown:view
_get_existing_deep_extends	plugged/ultisnips/pythonx/UltiSnips/snippet/source/base.py	/^    def _get_existing_deep_extends(self, base_filetypes):$/;"	m	class:SnippetSource
_get_line_diff	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def _get_line_diff(self, line_number, before, after):$/;"	m	class:VimBufferProxy
_get_next_tab	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _get_next_tab(self, number):$/;"	m	class:EditableTextObject
_get_pos	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def _get_pos(name):$/;"	f
_get_potential_snippet_filenames_to_edit	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^def _get_potential_snippet_filenames_to_edit($/;"	f	typeref:typename:Set[str]
_get_prev_tab	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _get_prev_tab(self, number):$/;"	m	class:EditableTextObject
_get_tabstop	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _get_tabstop(self, requester, number):$/;"	m	class:EditableTextObject
_get_tabstop	plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^    def _get_tabstop(self, requester, no):$/;"	m	class:SnippetInstance
_get_text	plugged/ultisnips/pythonx/UltiSnips/text_objects/mirror.py	/^    def _get_text(self):$/;"	m	class:Mirror
_get_text	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^    def _get_text(self):$/;"	m	class:Transformation
_get_tmp	plugged/ultisnips/pythonx/UltiSnips/text_objects/shell_code.py	/^def _get_tmp():$/;"	f
_get_unescaped_choice_item	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def _get_unescaped_choice_item(self, escaped_choice_item):$/;"	m	class:ChoicesToken
_handle_failure	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _handle_failure(self, trigger):$/;"	m	class:SnippetManager
_handle_snippet_or_global	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^def _handle_snippet_or_global($/;"	f
_insert	plugged/nvim-cmp/lua/cmp/view/custom_entries_view.lua	/^custom_entries_view._insert = function(self, word)$/;"	f	unknown:custom_entries_view
_is_pos_zero	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def _is_pos_zero(pos):$/;"	f
_jump	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _jump(self, jump_direction: JumpDirection):$/;"	m	class:SnippetManager
_leaving_buffer	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _leaving_buffer(self):$/;"	m	class:SnippetManager
_leaving_insert_mode	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _leaving_insert_mode(self):$/;"	m	class:SnippetManager
_link_file	plugged/ultisnips/test/vim_test_case.py	/^    def _link_file(self, source, relative_destination):$/;"	m	class:VimTestCase
_load_snippets_for	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^    def _load_snippets_for(self, ft):$/;"	m	class:SnippetFileSource
_luasnip_vscode_lazy_load	plugged/LuaSnip/lua/luasnip/loaders/from_vscode.lua	/^function M._luasnip_vscode_lazy_load()$/;"	f	unknown:M
_make_debug_exception	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def _make_debug_exception(self, e, code=""):$/;"	m	class:SnippetDefinition
_match	plugged/LuaSnip/lua/luasnip/extras/init.lua	/^	_match = to_function(_match, true)$/;"	f
_move	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _move(self, pivot, diff):$/;"	m	class:EditableTextObject
_move	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _move(self, pivot, diff):$/;"	m	class:TextObject
_multi_char_case_change	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^        def _multi_char_case_change(match):$/;"	f	member:_CleverReplace.replace	file:
_needs_update	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^    def _needs_update(self, ft):$/;"	m	class:SnippetFileSource
_on_insert_enter	plugged/cmp-nvim-lsp/lua/cmp_nvim_lsp/init.lua	/^M._on_insert_enter = function()$/;"	f	unknown:M
_one_char_case_change	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^        def _one_char_case_change(match):$/;"	f	member:_CleverReplace.replace	file:
_parse	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:ChoicesToken
_parse	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:EscapeCharToken
_parse	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:MirrorToken
_parse	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:PythonCodeToken
_parse	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:ShellCodeToken
_parse	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:TabStopToken
_parse	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:Token
_parse	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:TransformationToken
_parse	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:VimLCodeToken
_parse	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:VisualToken
_parse_comments	plugged/vim-snippets/pythonx/vimsnippets.py	/^def _parse_comments(s):$/;"	f
_parse_number	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^def _parse_number(stream):$/;"	f
_parse_snippet	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^def _parse_snippet(line, lines, filename):$/;"	f
_parse_snippet_file	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^    def _parse_snippet_file(self, filedata, filename):$/;"	m	class:SnippetFileSource
_parse_snippet_file	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^    def _parse_snippet_file(self, filedata, filename):$/;"	m	class:SnipMateFileSource
_parse_snippet_file	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^def _parse_snippet_file(content, full_filename):$/;"	f
_parse_snippet_file	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^    def _parse_snippet_file(self, filedata, filename):$/;"	m	class:UltiSnipsFileSource
_parse_snippets	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^    def _parse_snippets(self, ft, filename):$/;"	m	class:SnippetFileSource
_parse_snippets_file	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^def _parse_snippets_file(data, filename):$/;"	f
_parse_snippets_file	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^def _parse_snippets_file(data, filename):$/;"	f
_parse_till_closing_brace	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^def _parse_till_closing_brace(stream):$/;"	f
_parse_till_unescaped_char	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^def _parse_till_unescaped_char(stream, chars):$/;"	f
_place_initial_text	plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^        def _place_initial_text(obj):$/;"	f	member:SnippetInstance.replace_initial_text	file:
_re_match	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def _re_match(self, trigger):$/;"	m	class:SnippetDefinition
_read_text_file	plugged/ultisnips/test/vim_interface.py	/^def _read_text_file(filename):$/;"	f
_refresh_snippets	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _refresh_snippets(self):$/;"	m	class:SnippetManager
_reinit	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _reinit(self):$/;"	m	class:SnippetManager
_replace_conditional	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^def _replace_conditional(match, string):$/;"	f
_replace_text	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^def _replace_text(buf, start, end, text):$/;"	f
_report_exception	plugged/ultisnips/pythonx/UltiSnips/err_to_scratch_buffer.py	/^def _report_exception(self, msg, e):$/;"	f
_request	plugged/cmp-nvim-lsp/lua/cmp_nvim_lsp/source.lua	/^source._request = function(self, method, params, callback)$/;"	f	unknown:source
_reset	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def _reset(self, cur):$/;"	m	class:SnippetUtil
_run_shell_command	plugged/ultisnips/pythonx/UltiSnips/text_objects/shell_code.py	/^def _run_shell_command(cmd, tmpdir):$/;"	f
_rv_changed	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def _rv_changed(self):$/;"	m	class:SnippetUtil
_save_last_visual_selection	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _save_last_visual_selection(self):$/;"	m	class:SnippetManager
_select	plugged/nvim-cmp/lua/cmp/view/custom_entries_view.lua	/^custom_entries_view._select = function(self, cursor, option)$/;"	f	unknown:custom_entries_view
_select_and_create_file_to_edit	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^def _select_and_create_file_to_edit(potentials: Set[str]) -> str:$/;"	f	typeref:typename:str
_send	plugged/ultisnips/test/vim_interface.py	/^    def _send(self, s):$/;"	m	class:VimInterfaceTmux
_set_pos	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def _set_pos(name, pos):$/;"	f
_setup	plugged/LuaSnip/lua/luasnip/config.lua	/^	_setup = function()$/;"	f
_setup	plugged/nvim-lspconfig/lua/lspconfig.lua	/^function M._root._setup()$/;"	f	unknown:M._root
_setup_buffer	plugged/nvim-lspconfig/lua/lspconfig/configs.lua	/^  function M._setup_buffer(client_id, bufnr)$/;"	f	unknown:M
_setup_inner_state	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _setup_inner_state(self):$/;"	m	class:SnippetManager
_show_user_warning	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^def _show_user_warning(msg):$/;"	f
_snip_quote	plugged/ultisnips/test/test_Chars.py	/^def _snip_quote(qt):$/;"	f
_snipmate_files_for	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^def _snipmate_files_for(ft):$/;"	f
_snips	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _snips(self, before, partial, autotrigger_only=False):$/;"	m	class:SnippetManager
_split_conditional	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^def _split_conditional(string):$/;"	f
_splitall	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^def _splitall(path):$/;"	f
_teardown_inner_state	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _teardown_inner_state(self):$/;"	m	class:SnippetManager
_then	plugged/LuaSnip/lua/luasnip/extras/init.lua	/^	_then = to_function(_then or function(text)$/;"	f
_track_change	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _track_change(self):$/;"	m	class:SnippetManager
_transform	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^    def _transform(self, text):$/;"	m	class:TextObjectTransformation
_try_expand	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _try_expand(self, autotrigger_only=False):$/;"	m	class:SnippetManager
_unmap_select_mode_mapping	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def _unmap_select_mode_mapping():$/;"	f
_update	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _update(self, done, buf):$/;"	m	class:EditableTextObject
_update	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _update(self, done, buf):$/;"	m	class:NoneditableTextObject
_update	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _update(self, done, buf):$/;"	m	class:TextObject
_update	plugged/ultisnips/pythonx/UltiSnips/text_objects/choices.py	/^    def _update(self, done, buf):$/;"	m	class:Choices
_update	plugged/ultisnips/pythonx/UltiSnips/text_objects/mirror.py	/^    def _update(self, done, buf):$/;"	m	class:Mirror
_update	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def _update(self, done, buf):$/;"	m	class:PythonCode
_update	plugged/ultisnips/pythonx/UltiSnips/text_objects/shell_code.py	/^    def _update(self, done, buf):$/;"	m	class:ShellCode
_update	plugged/ultisnips/pythonx/UltiSnips/text_objects/viml_code.py	/^    def _update(self, done, buf):$/;"	m	class:VimLCode
_update	plugged/ultisnips/pythonx/UltiSnips/text_objects/visual.py	/^    def _update(self, done, buf):$/;"	m	class:Visual
_vim_dec	plugged/ultisnips/pythonx/UltiSnips/compatibility.py	/^def _vim_dec(string):$/;"	f
_vim_enc	plugged/ultisnips/pythonx/UltiSnips/compatibility.py	/^def _vim_enc(bytearray):$/;"	f
_vim_line_with_eol	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^        _vim_line_with_eol = lambda ln: vim_helper.buf[ln] + "\\n"$/;"	f	member:VisualContentPreserver.conserve	file:
_words_for_line	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^def _words_for_line(trigger, before, num_words=None):$/;"	f
`,`	plugged/vim-easy-align/README.md	/^#### `,`$/;"	t	subsection:vim-easy-align ![travis-ci](https://travis-ci.org/junegunn/vim-easy-align.svg?branch=master)""Demo""Using predefined alignment rules
`<Space>`	plugged/vim-easy-align/README.md	/^#### `<Space>`$/;"	t	subsection:vim-easy-align ![travis-ci](https://travis-ci.org/junegunn/vim-easy-align.svg?branch=master)""Demo""Using predefined alignment rules
`=`	plugged/vim-easy-align/README.md	/^#### `=`$/;"	t	subsection:vim-easy-align ![travis-ci](https://travis-ci.org/junegunn/vim-easy-align.svg?branch=master)""Demo""Using predefined alignment rules
`CmpItemAbbrDeprecated`	plugged/nvim-cmp/README.md	/^#### `CmpItemAbbrDeprecated`$/;"	t	chapter:Highlights
`CmpItemAbbrMatchFuzzy`	plugged/nvim-cmp/README.md	/^#### `CmpItemAbbrMatchFuzzy`$/;"	t	chapter:Highlights
`CmpItemAbbrMatch`	plugged/nvim-cmp/README.md	/^#### `CmpItemAbbrMatch`$/;"	t	chapter:Highlights
`CmpItemAbbr`	plugged/nvim-cmp/README.md	/^#### `CmpItemAbbr`$/;"	t	chapter:Highlights
`CmpItemKind`	plugged/nvim-cmp/README.md	/^#### `CmpItemKind`$/;"	t	chapter:Highlights
`CmpItemMenu`	plugged/nvim-cmp/README.md	/^#### `CmpItemMenu`$/;"	t	chapter:Highlights
`CmpStatus`	plugged/nvim-cmp/README.md	/^#### `CmpStatus`$/;"	t	chapter:Commands
`cmp#ready`	plugged/nvim-cmp/README.md	/^#### `cmp#ready`$/;"	t	chapter:Autocmds
`cmp.abort()`	plugged/nvim-cmp/README.md	/^#### `cmp.abort()`$/;"	t	chapter:Programatic API
`cmp.close()`	plugged/nvim-cmp/README.md	/^#### `cmp.close()`$/;"	t	chapter:Programatic API
`cmp.complete()`	plugged/nvim-cmp/README.md	/^#### `cmp.complete()`$/;"	t	chapter:Programatic API
`cmp.confirm({ select = boolean, behavior = cmp.ConfirmBehavior.{Insert,Replace} })`	plugged/nvim-cmp/README.md	/^#### `cmp.confirm({ select = boolean, behavior = cmp.ConfirmBehavior.{Insert,Replace} })`$/;"	t	chapter:Programatic API
`cmp.scroll_docs(delta)`	plugged/nvim-cmp/README.md	/^#### `cmp.scroll_docs(delta)`$/;"	t	chapter:Programatic API
`cmp.select_next_item({ cmp.SelectBehavior.{Insert,Select} })`	plugged/nvim-cmp/README.md	/^#### `cmp.select_next_item({ cmp.SelectBehavior.{Insert,Select} })`$/;"	t	chapter:Programatic API
`cmp.select_prev_item({ cmp.SelectBehavior.{Insert,Select} })`	plugged/nvim-cmp/README.md	/^#### `cmp.select_prev_item({ cmp.SelectBehavior.{Insert,Select} })`$/;"	t	chapter:Programatic API
`cmp.visible()`	plugged/nvim-cmp/README.md	/^#### `cmp.visible()`$/;"	t	chapter:Programatic API
a	plugged/nvim-treesitter/tests/indent/c/string.c	/^const char *a = "hello \\$/;"	v	typeref:typename:const char *
a	plugged/nvim-treesitter/tests/indent/c/struct.c	/^    int a;$/;"	m	struct:foo	typeref:typename:int	file:
a	plugged/nvim-treesitter/tests/indent/python/basic_collections.py	/^a = [$/;"	v
a	plugged/nvim-treesitter/tests/indent/python/branches.py	/^a = [$/;"	v
a	plugged/nvim-treesitter/tests/indent/python/comprehensions.py	/^a = [$/;"	v
a	plugged/nvim-treesitter/tests/indent/python/join_lines.py	/^a = 2 \\$/;"	v
a	plugged/nvim-treesitter/tests/indent/python/nested_collections.py	/^a = [$/;"	v
a	plugged/nvim-treesitter/tests/indent/python/strings.py	/^a = """$/;"	v
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a = "First Line\\nSecond Line"$/;"	v	class:TestWithNewline
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a = "Vorne hallo Hinten"$/;"	v	class:TestCheapDelete
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a = "Vorne hallo Hinten"$/;"	v	class:TestRealLife1
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a = "hallo Blah mitte=sdfdsfsd\\nhallo kjsdhfjksdhfkjhsdfkh mittekjshdkfhkhsdfdsf"$/;"	v	class:TestCrash
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a = "hallo End Beginning"$/;"	v	class:TestRealLife
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a = "hi first line\\nsecond line first line\\nsecond line world"$/;"	v	class:MultiLine
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a = "stdin.h"$/;"	v	class:MatchIsTooCheap
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a = "this is it this is it this is it"$/;"	v	class:TestUltiSnipsProblem
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = "", ""$/;"	v	class:TestEmptyString
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = "Hello", "Hello\\nWorld\\nWorld\\nWorld"$/;"	v	class:TestLotsaNewlines
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = "abc", "def"$/;"	v	class:TestNoSubstring
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = "abcdef", "abcdef"$/;"	v	class:TestAllMatch
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = "hasomelongertextbl", "hol"$/;"	v	class:TestCommonCharacters
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = ["Hello  World"], ["Hello   World"]$/;"	v	class:TestGuessing_InsertOneChar
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = ["Hello  World"], ["Hello   World"]$/;"	v	class:TestGuessing_InsertOneChar1
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = ["Hello  World"], ["Hello World"]$/;"	v	class:TestGuessing_BackspaceOneChar
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = ["Hello  World"], ["Hello World"]$/;"	v	class:TestGuessing_DeleteOneChar
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a: List[str] = []$/;"	v	class:TestGuessing_Noop0	typeref:typename:List[str]
aS	plugged/ultisnips/ftplugin/snippets.vim	/^onoremap <silent><buffer> aS :<C-U>call <SID>UltiSnippetTextObj(0)<CR>$/;"	m
aS	plugged/ultisnips/ftplugin/snippets.vim	/^xnoremap <silent><buffer> aS :<C-U>call <SID>UltiSnippetTextObj(0)<CR>$/;"	m
abort	plugged/nvim-cmp/lua/cmp/config/mapping.lua	/^mapping.abort = function()$/;"	f	unknown:mapping
abort	plugged/nvim-cmp/lua/cmp/init.lua	/^cmp.abort = function()$/;"	f	unknown:cmp
abort	plugged/nvim-cmp/lua/cmp/view.lua	/^view.abort = function(self)$/;"	f	unknown:view
abort	plugged/nvim-cmp/lua/cmp/view/custom_entries_view.lua	/^custom_entries_view.abort = function(self)$/;"	f	unknown:custom_entries_view
abort	plugged/nvim-cmp/lua/cmp/view/native_entries_view.lua	/^native_entries_view.abort = function(_)$/;"	f	unknown:native_entries_view
active_update_dependents	plugged/LuaSnip/lua/luasnip/init.lua	/^local function active_update_dependents()$/;"	f
add	plugged/nvim-lspconfig/lua/lspconfig/util.lua	/^  function manager.add(root_dir)$/;"	f	unknown:manager
add_arg	plugged/LuaSnip/lua/luasnip/extras/fmt.lua	/^	local add_arg = function(placeholder)$/;"	f
add_buffer_filetypes	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def add_buffer_filetypes(self, filetypes: str):$/;"	m	class:SnippetManager
add_hook_after	plugged/nvim-lspconfig/lua/lspconfig/util.lua	/^function M.add_hook_after(func, new_fn)$/;"	f	unknown:M
add_hook_before	plugged/nvim-lspconfig/lua/lspconfig/util.lua	/^function M.add_hook_before(func, new_fn)$/;"	f	unknown:M
add_snippet	plugged/ultisnips/pythonx/UltiSnips/snippet/source/added.py	/^    def add_snippet(self, ft, snippet):$/;"	m	class:AddedSnippetsSource
add_snippet	plugged/ultisnips/pythonx/UltiSnips/snippet/source/snippet_dictionary.py	/^    def add_snippet(self, snippet):$/;"	m	class:SnippetDictionary
add_snippet	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def add_snippet($/;"	m	class:SnippetManager
add_text	plugged/LuaSnip/lua/luasnip/extras/fmt.lua	/^	local add_text = function(text)$/;"	f
after	plugged/nvim-treesitter/tests/indent/common.lua	/^  local before, after = M.run_indent_test(file, function()$/;"	f
airline#extensions#tabline#formatters#webdevicons#format	plugged/vim-devicons/autoload/airline/extensions/tabline/formatters/webdevicons.vim	/^function! airline#extensions#tabline#formatters#webdevicons#format(bufnr, buffers) abort$/;"	f
airline#themes#neodark#refresh	plugged/neodark.vim/autoload/airline/themes/neodark.vim	/^function! airline#themes#neodark#refresh()$/;"	f
airline#themes#one#refresh	plugged/vim-one/autoload/airline/themes/one.vim	/^function! airline#themes#one#refresh()$/;"	f
akey	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    akey = "'te{}stâ'".format('"')$/;"	v	class:VerifyVimDict2
akey	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    akey = '"te{}stâ"'.format("'")$/;"	v	class:VerifyVimDict3
aligned_indent	plugged/nvim-treesitter/tests/indent/python/aligned_indent.py	/^def aligned_indent(arg1,$/;"	f
als	plugged/nvim-lspconfig/CONFIG.md	/^## als$/;"	s	chapter:Configurations
analysis_server_snapshot_path	plugged/nvim-lspconfig/lua/lspconfig/dartls.lua	/^local analysis_server_snapshot_path = function()$/;"	f
angularls	plugged/nvim-lspconfig/CONFIG.md	/^## angularls$/;"	s	chapter:Configurations
ansiblels	plugged/nvim-lspconfig/CONFIG.md	/^## ansiblels$/;"	s	chapter:Configurations
append	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def append(self, line, line_number=-1):$/;"	m	class:VimBufferProxy
append_module_table	plugged/nvim-treesitter/lua/nvim-treesitter/info.lua	/^local function append_module_table(curbuf, parserlist, namespace, modulelist)$/;"	f
apply_defaults	plugged/nvim-lspconfig/lua/lspconfig/ui/windows.lua	/^local function apply_defaults(original, defaults)$/;"	f
arduino_language_server	plugged/nvim-lspconfig/CONFIG.md	/^## arduino_language_server$/;"	s	chapter:Configurations
args	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = ""$/;"	v	class:_AnonBase
args	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = '"simple $1 expand $1 $0"'$/;"	v	class:Anon_NoTrigger_Multi
args	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = '"simple $1 expand $1 $0", "abc"'$/;"	v	class:Anon_Trigger_Multi
args	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = '"simple expand"'$/;"	v	class:Anon_NoTrigger_AfterSpace
args	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = '"simple expand"'$/;"	v	class:Anon_NoTrigger_Simple
args	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = '"simple expand", ".*abc", "desc", "r"'$/;"	v	class:Anon_Trigger_Opts
args	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = '"simple expand", "abc"'$/;"	v	class:Anon_Trigger_Simple
args	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = '"simple expand", "abc"'$/;"	v	class:Anon_Trigger_Twice
args	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = r"':latex:\\`$1\\`$0'"$/;"	v	class:Anon_NoTrigger_BeginningOfLine
args	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = r"':latex:\\`$1\\`$0'"$/;"	v	class:Anon_NoTrigger_FirstCharOfLine
args	plugged/ultisnips/test/test_Autocommands.py	/^    args = ""$/;"	v	class:Autocommands
args	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    args = ""$/;"	v	class:_AddFuncBase
args	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    args = '".*test", "simple expand", "desc", "r", "all", 0'$/;"	v	class:AddFunc_Opt
args	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    args = '"test", "simple expand", "desc", "", "all", 0'$/;"	v	class:AddFunc_Simple
assert_arg	plugged/LuaSnip/lua/luasnip/extras/_lambda.lua	/^local function assert_arg(n, val, tp, verify, msg, lev)$/;"	f
async_read_file	plugged/LuaSnip/lua/luasnip/loaders/from_vscode.lua	/^local function async_read_file(path, jump_if_error, callback)$/;"	f
attach	plugged/nvim-treesitter/lua/nvim-treesitter/highlight.lua	/^function M.attach(bufnr, lang)$/;"	f	unknown:M
attach	plugged/nvim-treesitter/lua/nvim-treesitter/incremental_selection.lua	/^function M.attach(bufnr)$/;"	f	unknown:M
attach	plugged/nvim-treesitter/lua/nvim-treesitter/indent.lua	/^function M.attach(bufnr)$/;"	f	unknown:M
attach_module	plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^function M.attach_module(mod_name, bufnr, lang)$/;"	f	unknown:M
author	plugged/vim-snippets/addon-info.json	/^  "author" : "community",$/;"	s
autoindent	plugged/nvim-cmp/lua/cmp/core.lua	/^core.autoindent = function(self, event, callback)$/;"	f	unknown:core
autostart	plugged/nvim-lspconfig/lua/lspconfig/configs.lua	/^    function M.autostart()$/;"	f	unknown:M
available	plugged/LuaSnip/lua/luasnip/init.lua	/^local function available()$/;"	f
available_modules	plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^function M.available_modules(root)$/;"	f	unknown:M
available_parsers	plugged/nvim-treesitter/lua/nvim-treesitter/parsers.lua	/^function M.available_parsers()$/;"	f	unknown:M
available_query_groups	plugged/nvim-treesitter/lua/nvim-treesitter/query.lua	/^function M.available_query_groups()$/;"	f	unknown:M
available_servers	plugged/nvim-lspconfig/lua/lspconfig.lua	/^function M.available_servers()$/;"	f	unknown:M
b	plugged/nvim-treesitter/tests/indent/c/string.c	/^const char *b = "hello "$/;"	v	typeref:typename:const char *
b	plugged/nvim-treesitter/tests/indent/c/struct.c	/^    } b;$/;"	m	struct:foo	typeref:struct:foo::bar	file:
b	plugged/nvim-treesitter/tests/indent/python/basic_collections.py	/^b = {$/;"	v
b	plugged/nvim-treesitter/tests/indent/python/branches.py	/^b = [$/;"	v
b	plugged/nvim-treesitter/tests/indent/python/comprehensions.py	/^b = {$/;"	v
b	plugged/nvim-treesitter/tests/indent/python/join_lines.py	/^b = 'hello' \\$/;"	v
b	plugged/nvim-treesitter/tests/indent/python/nested_collections.py	/^b = [$/;"	v
b	plugged/nvim-treesitter/tests/indent/python/strings.py	/^b = """$/;"	v
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = "", ""$/;"	v	class:TestEmptyString
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = "Hello", "Hello\\nWorld\\nWorld\\nWorld"$/;"	v	class:TestLotsaNewlines
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = "abc", "def"$/;"	v	class:TestNoSubstring
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = "abcdef", "abcdef"$/;"	v	class:TestAllMatch
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = "hasomelongertextbl", "hol"$/;"	v	class:TestCommonCharacters
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = ["Hello  World"], ["Hello   World"]$/;"	v	class:TestGuessing_InsertOneChar
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = ["Hello  World"], ["Hello   World"]$/;"	v	class:TestGuessing_InsertOneChar1
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = ["Hello  World"], ["Hello World"]$/;"	v	class:TestGuessing_BackspaceOneChar
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = ["Hello  World"], ["Hello World"]$/;"	v	class:TestGuessing_DeleteOneChar
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    b = "Vorne Hinten"$/;"	v	class:TestCheapDelete
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    b = "Vorne hallo  Hinten"$/;"	v	class:TestRealLife1
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    b = "hallo Blah mitte=sdfdsfsd\\nhallo b mittekjshdkfhkhsdfdsf"$/;"	v	class:TestCrash
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    b = "hallo End t"$/;"	v	class:TestRealLife
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    b = "hi first line\\nsecond line k world"$/;"	v	class:MultiLine
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    b = "n"$/;"	v	class:TestWithNewline
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    b = "s"$/;"	v	class:MatchIsTooCheap
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    b = "this is it a this is it"$/;"	v	class:TestUltiSnipsProblem
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    b: List[str] = []$/;"	v	class:TestGuessing_Noop0	typeref:typename:List[str]
b:current_syntax	plugged/ctrlsf.vim/syntax/ctrlsf.vim	/^let b:current_syntax = 'ctrlsf'$/;"	v
b:current_syntax	plugged/ultisnips/syntax/snippets.vim	/^let b:current_syntax = "snippets"$/;"	v
b:current_syntax	plugged/ultisnips/syntax/snippets_snipmate.vim	/^let b:current_syntax = "snippets"$/;"	v
b:current_syntax	plugged/vim-fugitive/syntax/fugitive.vim	/^let b:current_syntax = "fugitive"$/;"	v
b:current_syntax	plugged/vim-fugitive/syntax/fugitiveblame.vim	/^let b:current_syntax = "fugitiveblame"$/;"	v
b:current_view_mode	plugged/ctrlsf.vim/syntax/ctrlsf.vim	/^let b:current_view_mode = vmode$/;"	v
b:did_after_plugin_ultisnips_after	plugged/ultisnips/after/plugin/UltiSnips_after.vim	/^let b:did_after_plugin_ultisnips_after = 1$/;"	v
b:did_autoload_ultisnips	plugged/ultisnips/autoload/UltiSnips.vim	/^let b:did_autoload_ultisnips = 1$/;"	v
b:did_autoload_ultisnips_map_keys	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^let b:did_autoload_ultisnips_map_keys = 1$/;"	v
b:did_ftplugin	plugged/ultisnips/ftplugin/snippets.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-fugitive/ftplugin/fugitiveblame.vim	/^let b:did_ftplugin = 1$/;"	v
b:done_vimsnippets	plugged/vim-snippets/plugin/vimsnippets.vim	/^let b:done_vimsnippets = 1$/;"	v
b:match_ignorecase	plugged/ultisnips/ftplugin/snippets.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_words	plugged/ultisnips/ftplugin/snippets.vim	/^  let b:match_words = s:set_match_words()$/;"	v
b:ultisnips_override_snipmate	plugged/ultisnips/syntax/snippets_snipmate.vim	/^let b:ultisnips_override_snipmate = 1$/;"	v
b:undo_ftplugin	plugged/ultisnips/ftplugin/snippets.vim	/^let b:undo_ftplugin = "$/;"	v
backspace	plugged/nvim-cmp/lua/cmp/utils/keymap.lua	/^keymap.backspace = function(count)$/;"	f	unknown:keymap
backspace	plugged/nvim-cmp/lua/cmp/utils/spec.lua	/^    backspace = function()$/;"	f
bar	plugged/nvim-treesitter/tests/indent/c/compound_lit.c	/^struct foo bar(int x, int y) {$/;"	f	typeref:struct:foo
bar	plugged/nvim-treesitter/tests/indent/c/struct.c	/^    struct bar {$/;"	s	struct:foo	file:
bar	plugged/nvim-treesitter/tests/indent/lua/func.lua	/^  local bar = function(a, b, c)$/;"	f
bar	plugged/nvim-treesitter/tests/indent/rust/mod.rs	/^    mod bar {$/;"	n	module:foo
bar	plugged/nvim-treesitter/tests/indent/rust/trait.rs	/^    fn bar() {$/;"	P	implementation:Foo
bar	plugged/nvim-treesitter/tests/indent/rust/trait.rs	/^    fn bar();$/;"	P	interface:Bar
basename	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def basename(self):  # pylint:disable=no-self-use$/;"	m	class:SnippetUtil
bases	plugged/neodark.vim/colors/neodark.vim	/^  let bases = s:generate_base_colors(g:neodark#background)$/;"	v
bash	plugged/LuaSnip/Examples/snippets.lua	/^local function bash(_, _, command)$/;"	f
bash	plugged/nvim-treesitter/lockfile.json	/^  "bash": {$/;"	o
bashls	plugged/nvim-lspconfig/CONFIG.md	/^## bashls$/;"	s	chapter:Configurations
baz	plugged/nvim-treesitter/tests/indent/c/struct.c	/^union baz {$/;"	u	file:
beancount	plugged/nvim-lspconfig/CONFIG.md	/^## beancount$/;"	s	chapter:Configurations
beancount	plugged/nvim-treesitter/lockfile.json	/^  "beancount": {$/;"	o
before	plugged/nvim-cmp/lua/cmp/utils/spec.lua	/^spec.before = function()$/;"	f	unknown:spec
before_init	plugged/nvim-lspconfig/lua/lspconfig/codeqlls.lua	/^    before_init = function(initialize_params)$/;"	f
bibtex	plugged/nvim-treesitter/lockfile.json	/^  "bibtex": {$/;"	o
bicep	plugged/nvim-lspconfig/CONFIG.md	/^## bicep$/;"	s	chapter:Configurations
bindeval	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def bindeval(text):$/;"	f
binreg	plugged/LuaSnip/lua/luasnip/extras/_lambda.lua	/^local function binreg(context, t)$/;"	f
bold	plugged/nvim-lspconfig/scripts/docgen.lua	/^                        local function bold(s)$/;"	f
bool	plugged/nvim-cmp/lua/cmp/utils/misc.lua	/^misc.bool = function(v, def)$/;"	f	unknown:misc
brackets_offset	plugged/LuaSnip/lua/luasnip/util/parser.lua	/^local function brackets_offset(list, offset)$/;"	f
brckt_lst	plugged/LuaSnip/lua/luasnip/util/parser.lua	/^local function brckt_lst(text)$/;"	f
buf	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^buf = VimBuffer()  # pylint:disable=invalid-name$/;"	v
buf_build	plugged/nvim-lspconfig/lua/lspconfig/texlab.lua	/^local function buf_build(bufnr)$/;"	f
buf_cache	plugged/nvim-lspconfig/lua/lspconfig/denols.lua	/^local function buf_cache(bufnr)$/;"	f
buf_search	plugged/nvim-lspconfig/lua/lspconfig/texlab.lua	/^local function buf_search(bufnr)$/;"	f
buf_set_keymap	lua/lsp.lua	/^  local function buf_set_keymap(...) vim.api.nvim_buf_set_keymap(bufnr, ...) end$/;"	f
buf_set_keymap	plugged/nvim-lspconfig/test/minimal_init.lua	/^    local function buf_set_keymap(...)$/;"	f
buf_set_option	lua/lsp.lua	/^  local function buf_set_option(...) vim.api.nvim_buf_set_option(bufnr, ...) end$/;"	f
buf_set_option	plugged/nvim-lspconfig/test/minimal_init.lua	/^    local function buf_set_option(...)$/;"	f
buf_to_ws_part	plugged/LuaSnip/lua/luasnip/util/environ.lua	/^local function buf_to_ws_part()$/;"	f
buffer	plugged/nvim-cmp/lua/cmp/init.lua	/^  buffer = function(c)$/;"	f
buffer	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def buffer(self):$/;"	m	class:SnippetUtil
buffer_comment_chars	plugged/LuaSnip/lua/luasnip/util/util.lua	/^local function buffer_comment_chars()$/;"	f
buffer_maps	plugged/ultisnips/test/test_Selection.py	/^    buffer_maps = ("", "")$/;"	v	class:_SelectModeMappings
buffer_maps	plugged/ultisnips/test/test_Selection.py	/^    buffer_maps = ("H", "blah")$/;"	v	class:SelectModeMappings_BufferLocalMappings_ECR
byte2col	plugged/ultisnips/pythonx/UltiSnips/compatibility.py	/^def byte2col(line, nbyte):$/;"	f
bytecol_to_utfcol	plugged/LuaSnip/lua/luasnip/util/mark.lua	/^local function bytecol_to_utfcol(pos)$/;"	f
bytecol_to_utfcol	plugged/LuaSnip/lua/luasnip/util/util.lua	/^local function bytecol_to_utfcol(pos)$/;"	f
c	plugged/nvim-treesitter/lockfile.json	/^  "c": {$/;"	o
c	plugged/nvim-treesitter/tests/indent/python/basic_collections.py	/^c = {$/;"	v
c	plugged/nvim-treesitter/tests/indent/python/branches.py	/^c = [[[$/;"	v
c	plugged/nvim-treesitter/tests/indent/python/comprehensions.py	/^c = ($/;"	v
c	plugged/nvim-treesitter/tests/indent/python/join_lines.py	/^c = lambda x: \\$/;"	f
c	plugged/nvim-treesitter/tests/indent/python/nested_collections.py	/^c = [[[$/;"	v
c	plugged/nvim-treesitter/tests/indent/python/strings.py	/^c = """$/;"	v
c	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def c(self):  # pylint:disable=invalid-name$/;"	m	class:SnippetUtil
c_sharp	plugged/nvim-treesitter/lockfile.json	/^  "c_sharp": {$/;"	o
callback	plugged/nvim-cmp/lua/cmp/core.lua	/^        callback = function()$/;"	f
callback	plugged/nvim-cmp/lua/cmp/utils/async.lua	/^  local callback = function(...)$/;"	f
callbacks[id]	plugged/nvim-cmp/lua/cmp/vim_source.lua	/^    self.callbacks[id] = function(...)$/;"	f	unknown:self
can_expand	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def can_expand(self, autotrigger_only=False):$/;"	m	class:SnippetManager
can_jump	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def can_jump(self, direction):$/;"	m	class:SnippetManager
can_jump_backwards	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def can_jump_backwards(self):$/;"	m	class:SnippetManager
can_jump_forwards	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def can_jump_forwards(self):$/;"	m	class:SnippetManager
cb	plugged/nvim-lspconfig/lua/lspconfig/util.lua	/^    local function cb(dir, _)$/;"	f
ccls	plugged/nvim-lspconfig/CONFIG.md	/^## ccls$/;"	s	chapter:Configurations
cfi#choose_finder_filetype	plugged/current-func-info.vim/autoload/cfi.vim	/^function! cfi#choose_finder_filetype(dotfiletypes) "{{{$/;"	f
cfi#create_finder	plugged/current-func-info.vim/autoload/cfi.vim	/^function! cfi#create_finder(filetype) "{{{$/;"	f
cfi#format	plugged/current-func-info.vim/autoload/cfi.vim	/^function! cfi#format(fmt, default) "{{{$/;"	f
cfi#get_finder	plugged/current-func-info.vim/autoload/cfi.vim	/^function! cfi#get_finder(filetype) "{{{$/;"	f
cfi#get_func_name	plugged/current-func-info.vim/autoload/cfi.vim	/^function! cfi#get_func_name(...) "{{{$/;"	f
cfi#load	plugged/current-func-info.vim/autoload/cfi.vim	/^function! cfi#load() "{{{$/;"	f
cfi#register_finder	plugged/current-func-info.vim/autoload/cfi.vim	/^function! cfi#register_finder(filetype, finder) "{{{$/;"	f
cfi#register_simple_finder	plugged/current-func-info.vim/autoload/cfi.vim	/^function! cfi#register_simple_finder(filetype, finder) "{{{$/;"	f
cfi#supported_filetype	plugged/current-func-info.vim/autoload/cfi.vim	/^function! cfi#supported_filetype(filetype) "{{{$/;"	f
cfi#supported_filetypes	plugged/current-func-info.vim/autoload/cfi.vim	/^function! cfi#supported_filetypes(dotfiletypes) "{{{$/;"	f
change_choice	plugged/LuaSnip/lua/luasnip/init.lua	/^local function change_choice(val)$/;"	f
change_choice	plugged/LuaSnip/lua/luasnip/nodes/choiceNode.lua	/^function ChoiceNode:change_choice(dir)$/;"	f	unknown:ChoiceNode
changed	plugged/nvim-cmp/lua/cmp/context.lua	/^context.changed = function(self, ctx)$/;"	f	unknown:context
charset_end_indx	plugged/LuaSnip/lua/luasnip/util/pattern_tokenizer.lua	/^local function charset_end_indx(string, start_indx)$/;"	f
check	plugged/nvim-lspconfig/lua/lspconfig/health.lua	/^function M.check()$/;"	f	unknown:M
check	plugged/nvim-treesitter/lua/nvim-treesitter/health.lua	/^function M.check()$/;"	f	unknown:M
check_deps	plugged/nvim-cmp/utils/install_stylua.sh	/^function check_deps() {$/;"	f
check_required_vim_version	plugged/ultisnips/test/test_Autotrigger.py	/^def check_required_vim_version(test):$/;"	f
check_required_vim_version	plugged/ultisnips/test/test_Editing.py	/^def check_required_vim_version(test):$/;"	f
child	plugged/nvim-treesitter/lua/nvim-treesitter/tsrange.lua	/^function TSRange:child(index)$/;"	f	unknown:TSRange
child_count	plugged/nvim-treesitter/lua/nvim-treesitter/tsrange.lua	/^function TSRange:child_count()$/;"	f	unknown:TSRange
children	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def children(self):$/;"	m	class:EditableTextObject
choice_active	plugged/LuaSnip/lua/luasnip/init.lua	/^local function choice_active()$/;"	f
clangd	plugged/nvim-lspconfig/CONFIG.md	/^## clangd$/;"	s	chapter:Configurations
clean	plugged/LuaSnip/lua/luasnip/loaders/_caches.lua	/^function c.clean()$/;"	f	unknown:c
cleanup	plugged/LuaSnip/lua/luasnip/init.lua	/^local function cleanup()$/;"	f
clear	plugged/LuaSnip/lua/luasnip/util/mark.lua	/^function Mark:clear()$/;"	f	unknown:Mark
clear	plugged/nvim-cmp/lua/cmp/utils/cache.lua	/^cache.clear = function(self)$/;"	f	unknown:cache
clear	plugged/nvim-cmp/lua/cmp/utils/event.lua	/^event.clear = function(self)$/;"	f	unknown:event
clear_cache	plugged/cmp_luasnip/lua/cmp_luasnip/init.lua	/^source.clear_cache = function()$/;"	f	unknown:source
clear_invalid	plugged/LuaSnip/lua/luasnip/util/util.lua	/^local function clear_invalid(opts)$/;"	f
clear_snippets	plugged/ultisnips/pythonx/UltiSnips/snippet/source/snippet_dictionary.py	/^    def clear_snippets(self, priority, triggers):$/;"	m	class:SnippetDictionary
clear_temp	plugged/ultisnips/test/vim_interface.py	/^    def clear_temp(self):$/;"	m	class:TempFileManager
clients	plugged/nvim-lspconfig/lua/lspconfig/util.lua	/^  function manager.clients()$/;"	f	unknown:manager
clojure	plugged/nvim-treesitter/lockfile.json	/^  "clojure": {$/;"	o
clojure_lsp	plugged/nvim-lspconfig/CONFIG.md	/^## clojure_lsp$/;"	s	chapter:Configurations
clone	plugged/nvim-cmp/lua/cmp/context.lua	/^context.clone = function(self)$/;"	f	unknown:context
clone_plugin	plugged/ultisnips/test_all.py	/^def clone_plugin(plugin):$/;"	f
close	plugged/nvim-cmp/lua/cmp/config/mapping.lua	/^mapping.close = function()$/;"	f	unknown:mapping
close	plugged/nvim-cmp/lua/cmp/init.lua	/^cmp.close = function()$/;"	f	unknown:cmp
close	plugged/nvim-cmp/lua/cmp/utils/window.lua	/^window.close = function(self)$/;"	f	unknown:window
close	plugged/nvim-cmp/lua/cmp/view.lua	/^view.close = function(self)$/;"	f	unknown:view
close	plugged/nvim-cmp/lua/cmp/view/custom_entries_view.lua	/^custom_entries_view.close = function(self)$/;"	f	unknown:custom_entries_view
close	plugged/nvim-cmp/lua/cmp/view/docs_view.lua	/^docs_view.close = function(self)$/;"	f	unknown:docs_view
close	plugged/nvim-cmp/lua/cmp/view/native_entries_view.lua	/^native_entries_view.close = function(self)$/;"	f	unknown:native_entries_view
cmake	plugged/nvim-lspconfig/CONFIG.md	/^## cmake$/;"	s	chapter:Configurations
cmake	plugged/nvim-treesitter/lockfile.json	/^  "cmake": {$/;"	o
cmd	plugged/nvim-treesitter/lua/nvim-treesitter/install.lua	/^      cmd = function()$/;"	f
cmp#_method	plugged/nvim-cmp/autoload/cmp.vim	/^function! cmp#_method(bridge_id, method, args) abort$/;"	f
cmp#apply_text_edits	plugged/nvim-cmp/autoload/cmp.vim	/^function! cmp#apply_text_edits(bufnr, text_edits) abort$/;"	f
cmp#register_source	plugged/nvim-cmp/autoload/cmp.vim	/^function! cmp#register_source(name, source) abort$/;"	f
cmp#unregister_source	plugged/nvim-cmp/autoload/cmp.vim	/^function! cmp#unregister_source(id) abort$/;"	f
cmp-nvim-lsp	plugged/cmp-nvim-lsp/README.md	/^# cmp-nvim-lsp$/;"	c
cmp_luasnip	plugged/cmp_luasnip/README.md	/^# cmp_luasnip$/;"	c
coc.nvim support	plugged/vim-monokai/README.md	/^coc.nvim support$/;"	s	chapter:vim-monokai
codeqlls	plugged/nvim-lspconfig/CONFIG.md	/^## codeqlls$/;"	s	chapter:Configurations
col2byte	plugged/ultisnips/pythonx/UltiSnips/compatibility.py	/^def col2byte(line, col):$/;"	f
collect_children	plugged/nvim-treesitter/lua/nvim-treesitter/tsrange.lua	/^function TSRange:collect_children(filter_fun)$/;"	f	unknown:TSRange
collect_group_results	plugged/nvim-treesitter/lua/nvim-treesitter/query.lua	/^function M.collect_group_results(bufnr, query_group, root, lang)$/;"	f	unknown:M
collect_locals	plugged/nvim-treesitter/lua/nvim-treesitter/locals.lua	/^function M.collect_locals(bufnr)$/;"	f	unknown:M
collect_values	plugged/LuaSnip/lua/luasnip/extras/_lambda.lua	/^function collect_values(e, vlist)$/;"	f
color	plugged/vim-one/colors/one.vim	/^  fun <SID>color(r, g, b)$/;"	f
colors_name	plugged/vim-colors-github/colors/github.vim	/^let colors_name="github"$/;"	v
colors_name	plugged/vim-monokai/colors/monokai.vim	/^let colors_name = "monokai"$/;"	v
colorscheme	plugged/neodark.vim/test/test.rb	/^    attr_reader :colorscheme$/;"	A	class:VimColors.RubyExample
command	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def command(cmd):$/;"	f
comment	plugged/nvim-treesitter/lockfile.json	/^  "comment": {$/;"	o
commonlisp	plugged/nvim-treesitter/lockfile.json	/^  "commonlisp": {$/;"	o
compare_indent	plugged/nvim-treesitter/tests/indent/common.lua	/^local function compare_indent(before, after)$/;"	f
compat_handler	plugged/nvim-lspconfig/lua/lspconfig/util.lua	/^function M.compat_handler(handler)$/;"	f	unknown:M
complete	plugged/cmp-nvim-lsp/lua/cmp_nvim_lsp/source.lua	/^source.complete = function(self, request, callback)$/;"	f	unknown:source
complete	plugged/cmp_luasnip/lua/cmp_luasnip/init.lua	/^function source:complete(params, callback)$/;"	f	unknown:source
complete	plugged/nvim-cmp/lua/cmp/config/mapping.lua	/^mapping.complete = function()$/;"	f	unknown:mapping
complete	plugged/nvim-cmp/lua/cmp/core.lua	/^core.complete = function(self, ctx)$/;"	f	unknown:core
complete	plugged/nvim-cmp/lua/cmp/init.lua	/^cmp.complete = function()$/;"	f	unknown:cmp
complete	plugged/nvim-cmp/lua/cmp/source.lua	/^source.complete = function(self, ctx, callback)$/;"	f	unknown:source
complete	plugged/nvim-cmp/lua/cmp/source_spec.lua	/^        complete = function(_, _, callback)$/;"	f
complete	plugged/nvim-cmp/lua/cmp/utils/spec.lua	/^    complete = function() end,$/;"	f
complete	plugged/vim-snippets/pythonx/vimsnippets.py	/^def complete(tab, opts):$/;"	f
completion.autocomplete (type: cmp.TriggerEvent[])	plugged/nvim-cmp/README.md	/^#### completion.autocomplete (type: cmp.TriggerEvent[])$/;"	t	chapter:Configuration options
completion.completeopt (type: string)	plugged/nvim-cmp/README.md	/^#### completion.completeopt (type: string)$/;"	t	chapter:Configuration options
completion.get_trigger_characters (type: fun(trigger_characters: string[]): string[])	plugged/nvim-cmp/README.md	/^#### completion.get_trigger_characters (type: fun(trigger_characters: string[]): string[])$/;"	t	chapter:Configuration options
completion.keyword_length (type: number)	plugged/nvim-cmp/README.md	/^#### completion.keyword_length (type: number)$/;"	t	chapter:Configuration options
completion.keyword_pattern (type: string)	plugged/nvim-cmp/README.md	/^#### completion.keyword_pattern (type: string)$/;"	t	chapter:Configuration options
concat	plugged/nvim-cmp/lua/cmp/utils/misc.lua	/^misc.concat = function(list1, list2)$/;"	f	unknown:misc
condition	plugged/LuaSnip/Examples/snippets.lua	/^			condition = function(line_to_cursor, matched_trigger, captures)$/;"	f
condition	plugged/LuaSnip/lua/luasnip/nodes/snippet.lua	/^	opts.condition = opts.condition or function()$/;"	f	unknown:opts
config_info	plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^local function config_info(process_function)$/;"	f
confirm	plugged/nvim-cmp/lua/cmp/config/mapping.lua	/^mapping.confirm = function(option)$/;"	f	unknown:mapping
confirm	plugged/nvim-cmp/lua/cmp/core.lua	/^core.confirm = function(self, e, option, callback)$/;"	f	unknown:core
confirm	plugged/nvim-cmp/lua/cmp/init.lua	/^cmp.confirm = function(option)$/;"	f	unknown:cmp
confirmation.default_behavior (type: cmp.ConfirmBehavior)	plugged/nvim-cmp/README.md	/^#### confirmation.default_behavior (type: cmp.ConfirmBehavior)$/;"	t	chapter:Configuration options
confirmation.get_commit_characters (type: fun(commit_characters: string[]): string[])	plugged/nvim-cmp/README.md	/^#### confirmation.get_commit_characters (type: fun(commit_characters: string[]): string[])$/;"	t	chapter:Configuration options
conserve	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def conserve(self):$/;"	m	class:VisualContentPreserver
conserve_placeholder	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def conserve_placeholder(self, placeholder):$/;"	m	class:VisualContentPreserver
constant	plugged/nvim-treesitter/lua/nvim-treesitter/utils.lua	/^function M.constant(a)$/;"	f	unknown:M
containing_scope	plugged/nvim-treesitter/lua/nvim-treesitter/locals.lua	/^function M.containing_scope(node, bufnr, allow_scope)$/;"	f	unknown:M
context	plugged/nvim-cmp/lua/cmp/utils/spec.lua	/^    context = function()$/;"	f
context	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def context(self):$/;"	m	class:SnippetDefinition
context	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def context(self):$/;"	m	class:SnippetUtil
continue	plugged/nvim-cmp/lua/cmp/context.lua	/^context.continue = function(self, offset)$/;"	f	unknown:context
conv	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^    def conv(obj):$/;"	f	function:escape	file:
convert_keys	plugged/ultisnips/test/vim_interface.py	/^    def convert_keys(self, keys):$/;"	m	class:VimInterfaceWindows
copy	plugged/LuaSnip/Examples/snippets.lua	/^local function copy(args)$/;"	f
copy	plugged/LuaSnip/lua/luasnip/nodes/choiceNode.lua	/^function ChoiceNode:copy()$/;"	f	unknown:ChoiceNode
copy	plugged/LuaSnip/lua/luasnip/nodes/snippet.lua	/^function Snippet:copy()$/;"	f	unknown:Snippet
copy	plugged/LuaSnip/lua/luasnip/util/functions.lua	/^	copy = function(args)$/;"	f
copy	plugged/nvim-cmp/lua/cmp/utils/misc.lua	/^misc.copy = function(tbl)$/;"	f	unknown:misc
copy3	plugged/LuaSnip/lua/luasnip/nodes/snippet.lua	/^local function copy3(obj, seen)$/;"	f
copy_pos_gravs	plugged/LuaSnip/lua/luasnip/util/mark.lua	/^function Mark:copy_pos_gravs(opts)$/;"	f	unknown:Mark
could_match	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def could_match(self, before):$/;"	m	class:SnippetDefinition
cpp	plugged/nvim-treesitter/lockfile.json	/^  "cpp": {$/;"	o
create_buffer_cache	plugged/nvim-treesitter/lua/nvim-treesitter/caching.lua	/^function M.create_buffer_cache()$/;"	f	unknown:M
create_directory	plugged/ultisnips/test/vim_interface.py	/^def create_directory(dirname):$/;"	f
create_module_commands	plugged/nvim-lspconfig/lua/lspconfig/util.lua	/^function M.create_module_commands(module_name, commands)$/;"	f	unknown:M
crystalline	plugged/nvim-lspconfig/CONFIG.md	/^## crystalline$/;"	s	chapter:Configurations
csharp_ls	plugged/nvim-lspconfig/CONFIG.md	/^## csharp_ls$/;"	s	chapter:Configurations
css	plugged/nvim-treesitter/lockfile.json	/^  "css": {$/;"	o
cssls	plugged/nvim-lspconfig/CONFIG.md	/^## cssls$/;"	s	chapter:Configurations
cterm_normal	plugged/nvim-treesitter/plugin/nvim-treesitter.vim	/^let cterm_normal = s:has_attr('fg', 'cterm') ? 'fg' : 'NONE'$/;"	v
ctrlsf	plugged/ctrlsf.vim/autoload/ctrlsf/win.vim	/^    augroup ctrlsf$/;"	a
ctrlsf#ClearSelectedLine	plugged/ctrlsf.vim/autoload/ctrlsf.vim	/^func! ctrlsf#ClearSelectedLine() abort$/;"	f
ctrlsf#CurrentMode	plugged/ctrlsf.vim/autoload/ctrlsf.vim	/^func! ctrlsf#CurrentMode()$/;"	f
ctrlsf#Focus	plugged/ctrlsf.vim/autoload/ctrlsf.vim	/^func! ctrlsf#Focus() abort$/;"	f
ctrlsf#JumpTo	plugged/ctrlsf.vim/autoload/ctrlsf.vim	/^func! ctrlsf#JumpTo(mode, ...) abort$/;"	f
ctrlsf#NextMatch	plugged/ctrlsf.vim/autoload/ctrlsf.vim	/^func! ctrlsf#NextMatch(forward, ...) abort$/;"	f
ctrlsf#Open	plugged/ctrlsf.vim/autoload/ctrlsf.vim	/^func! ctrlsf#Open() abort$/;"	f
ctrlsf#OpenLocList	plugged/ctrlsf.vim/autoload/ctrlsf.vim	/^func! ctrlsf#OpenLocList() abort$/;"	f
ctrlsf#PopulateQFList	plugged/ctrlsf.vim/autoload/ctrlsf.vim	/^func! ctrlsf#PopulateQFList()$/;"	f
ctrlsf#Quickfix	plugged/ctrlsf.vim/autoload/ctrlsf.vim	/^func! ctrlsf#Quickfix(args) abort$/;"	f
ctrlsf#Quit	plugged/ctrlsf.vim/autoload/ctrlsf.vim	/^func! ctrlsf#Quit() abort$/;"	f
ctrlsf#Redraw	plugged/ctrlsf.vim/autoload/ctrlsf.vim	/^func! ctrlsf#Redraw() abort$/;"	f
ctrlsf#Save	plugged/ctrlsf.vim/autoload/ctrlsf.vim	/^func! ctrlsf#Save()$/;"	f
ctrlsf#Search	plugged/ctrlsf.vim/autoload/ctrlsf.vim	/^func! ctrlsf#Search(args, ...) abort$/;"	f
ctrlsf#SelfCheck	plugged/ctrlsf.vim/autoload/ctrlsf.vim	/^func! ctrlsf#SelfCheck() abort$/;"	f
ctrlsf#StopSearch	plugged/ctrlsf.vim/autoload/ctrlsf.vim	/^func! ctrlsf#StopSearch()$/;"	f
ctrlsf#SwitchViewMode	plugged/ctrlsf.vim/autoload/ctrlsf.vim	/^func! ctrlsf#SwitchViewMode() abort$/;"	f
ctrlsf#Toggle	plugged/ctrlsf.vim/autoload/ctrlsf.vim	/^func! ctrlsf#Toggle() abort$/;"	f
ctrlsf#ToggleMap	plugged/ctrlsf.vim/autoload/ctrlsf.vim	/^func! ctrlsf#ToggleMap() abort$/;"	f
ctrlsf#Update	plugged/ctrlsf.vim/autoload/ctrlsf.vim	/^func! ctrlsf#Update() abort$/;"	f
ctrlsf#async#ForceStopSearch	plugged/ctrlsf.vim/autoload/ctrlsf/async.vim	/^func! ctrlsf#async#ForceStopSearch() abort$/;"	f
ctrlsf#async#IsCancelled	plugged/ctrlsf.vim/autoload/ctrlsf/async.vim	/^func! ctrlsf#async#IsCancelled() abort$/;"	f
ctrlsf#async#IsSearchDone	plugged/ctrlsf.vim/autoload/ctrlsf/async.vim	/^func! ctrlsf#async#IsSearchDone() abort$/;"	f
ctrlsf#async#IsSearching	plugged/ctrlsf.vim/autoload/ctrlsf/async.vim	/^func! ctrlsf#async#IsSearching() abort$/;"	f
ctrlsf#async#NeoVimSearchCBWrapper	plugged/ctrlsf.vim/autoload/ctrlsf/async.vim	/^func! ctrlsf#async#NeoVimSearchCBWrapper(job_id, data, event) abort$/;"	f
ctrlsf#async#ParseAndDrawCB	plugged/ctrlsf.vim/autoload/ctrlsf/async.vim	/^func! ctrlsf#async#ParseAndDrawCB(timer_id) abort$/;"	f
ctrlsf#async#Reset	plugged/ctrlsf.vim/autoload/ctrlsf/async.vim	/^func! ctrlsf#async#Reset() abort$/;"	f
ctrlsf#async#SearchCB	plugged/ctrlsf.vim/autoload/ctrlsf/async.vim	/^func! ctrlsf#async#SearchCB(channel, msg) abort$/;"	f
ctrlsf#async#SearchCloseCB	plugged/ctrlsf.vim/autoload/ctrlsf/async.vim	/^func! ctrlsf#async#SearchCloseCB(channel) abort$/;"	f
ctrlsf#async#SearchErrorCB	plugged/ctrlsf.vim/autoload/ctrlsf/async.vim	/^func! ctrlsf#async#SearchErrorCB(channel, msg) abort$/;"	f
ctrlsf#async#StartSearch	plugged/ctrlsf.vim/autoload/ctrlsf/async.vim	/^func! ctrlsf#async#StartSearch(command) abort$/;"	f
ctrlsf#async#StopParse	plugged/ctrlsf.vim/autoload/ctrlsf/async.vim	/^func! ctrlsf#async#StopParse() abort$/;"	f
ctrlsf#async#StopSearch	plugged/ctrlsf.vim/autoload/ctrlsf/async.vim	/^func! ctrlsf#async#StopSearch() abort$/;"	f
ctrlsf#backend#Detect	plugged/ctrlsf.vim/autoload/ctrlsf/backend.vim	/^func! ctrlsf#backend#Detect()$/;"	f
ctrlsf#backend#LastErrors	plugged/ctrlsf.vim/autoload/ctrlsf/backend.vim	/^func! ctrlsf#backend#LastErrors()$/;"	f
ctrlsf#backend#Run	plugged/ctrlsf.vim/autoload/ctrlsf/backend.vim	/^func! ctrlsf#backend#Run(args) abort$/;"	f
ctrlsf#backend#RunAsync	plugged/ctrlsf.vim/autoload/ctrlsf/backend.vim	/^func! ctrlsf#backend#RunAsync(args) abort$/;"	f
ctrlsf#backend#Runner	plugged/ctrlsf.vim/autoload/ctrlsf/backend.vim	/^func! ctrlsf#backend#Runner()$/;"	f
ctrlsf#buf#ClearUndoHistory	plugged/ctrlsf.vim/autoload/ctrlsf/buf.vim	/^func! ctrlsf#buf#ClearUndoHistory() abort$/;"	f
ctrlsf#buf#SetLine	plugged/ctrlsf.vim/autoload/ctrlsf/buf.vim	/^func! ctrlsf#buf#SetLine(buf_name, lnum, content) abort$/;"	f
ctrlsf#buf#ToggleMap	plugged/ctrlsf.vim/autoload/ctrlsf/buf.vim	/^func! ctrlsf#buf#ToggleMap(...) abort$/;"	f
ctrlsf#buf#UndoAllChanges	plugged/ctrlsf.vim/autoload/ctrlsf/buf.vim	/^func! ctrlsf#buf#UndoAllChanges() abort$/;"	f
ctrlsf#buf#WarnIfChanged	plugged/ctrlsf.vim/autoload/ctrlsf/buf.vim	/^func! ctrlsf#buf#WarnIfChanged() abort$/;"	f
ctrlsf#buf#WriteFile	plugged/ctrlsf.vim/autoload/ctrlsf/buf.vim	/^func! ctrlsf#buf#WriteFile(file) abort$/;"	f
ctrlsf#buf#WriteString	plugged/ctrlsf.vim/autoload/ctrlsf/buf.vim	/^func! ctrlsf#buf#WriteString(content) abort$/;"	f
ctrlsf#class#file#Add	plugged/ctrlsf.vim/autoload/ctrlsf/class/file.vim	/^func! ctrlsf#class#file#Add(paragraph) abort dict$/;"	f
ctrlsf#class#file#EndVlnum	plugged/ctrlsf.vim/autoload/ctrlsf/class/file.vim	/^func! ctrlsf#class#file#EndVlnum(...) abort dict$/;"	f
ctrlsf#class#file#FirstMatch	plugged/ctrlsf.vim/autoload/ctrlsf/class/file.vim	/^func! ctrlsf#class#file#FirstMatch() abort dict$/;"	f
ctrlsf#class#file#New	plugged/ctrlsf.vim/autoload/ctrlsf/class/file.vim	/^func! ctrlsf#class#file#New(fname, paragraphs) abort$/;"	f
ctrlsf#class#file#StartVlnum	plugged/ctrlsf.vim/autoload/ctrlsf/class/file.vim	/^func! ctrlsf#class#file#StartVlnum(...) abort dict$/;"	f
ctrlsf#class#line#Matched	plugged/ctrlsf.vim/autoload/ctrlsf/class/line.vim	/^func! ctrlsf#class#line#Matched() abort dict$/;"	f
ctrlsf#class#line#New	plugged/ctrlsf.vim/autoload/ctrlsf/class/line.vim	/^func! ctrlsf#class#line#New(fname, lnum, content) abort$/;"	f
ctrlsf#class#line#SetViewLnum	plugged/ctrlsf.vim/autoload/ctrlsf/class/line.vim	/^func! ctrlsf#class#line#SetViewLnum(lnum) abort dict$/;"	f
ctrlsf#class#line#Vlnum	plugged/ctrlsf.vim/autoload/ctrlsf/class/line.vim	/^func! ctrlsf#class#line#Vlnum(...) abort dict$/;"	f
ctrlsf#class#match#New	plugged/ctrlsf.vim/autoload/ctrlsf/class/match.vim	/^func! ctrlsf#class#match#New(fname, lnum, col, content) abort$/;"	f
ctrlsf#class#match#SetViewPosition	plugged/ctrlsf.vim/autoload/ctrlsf/class/match.vim	/^func! ctrlsf#class#match#SetViewPosition(lnum, col, ...) abort dict$/;"	f
ctrlsf#class#match#Vcol	plugged/ctrlsf.vim/autoload/ctrlsf/class/match.vim	/^func! ctrlsf#class#match#Vcol(...) abort dict$/;"	f
ctrlsf#class#match#Vlnum	plugged/ctrlsf.vim/autoload/ctrlsf/class/match.vim	/^func! ctrlsf#class#match#Vlnum(...) abort dict$/;"	f
ctrlsf#class#paragraph#Lnum	plugged/ctrlsf.vim/autoload/ctrlsf/class/paragraph.vim	/^func! ctrlsf#class#paragraph#Lnum() abort dict$/;"	f
ctrlsf#class#paragraph#Matches	plugged/ctrlsf.vim/autoload/ctrlsf/class/paragraph.vim	/^func! ctrlsf#class#paragraph#Matches() abort dict$/;"	f
ctrlsf#class#paragraph#New	plugged/ctrlsf.vim/autoload/ctrlsf/class/paragraph.vim	/^func! ctrlsf#class#paragraph#New(buffer) abort$/;"	f
ctrlsf#class#paragraph#Range	plugged/ctrlsf.vim/autoload/ctrlsf/class/paragraph.vim	/^func! ctrlsf#class#paragraph#Range() abort dict$/;"	f
ctrlsf#class#paragraph#TrimTail	plugged/ctrlsf.vim/autoload/ctrlsf/class/paragraph.vim	/^func! ctrlsf#class#paragraph#TrimTail() abort dict$/;"	f
ctrlsf#class#paragraph#Vlnum	plugged/ctrlsf.vim/autoload/ctrlsf/class/paragraph.vim	/^func! ctrlsf#class#paragraph#Vlnum(...) abort dict$/;"	f
ctrlsf#comp#Completion	plugged/ctrlsf.vim/autoload/ctrlsf/comp.vim	/^func! ctrlsf#comp#Completion(arglead, cmdline, cursorpos)$/;"	f
ctrlsf#db#FileResultSet	plugged/ctrlsf.vim/autoload/ctrlsf/db.vim	/^func! ctrlsf#db#FileResultSet() abort$/;"	f
ctrlsf#db#FileResultSetBy	plugged/ctrlsf.vim/autoload/ctrlsf/db.vim	/^func! ctrlsf#db#FileResultSetBy(resultset) abort$/;"	f
ctrlsf#db#MatchList	plugged/ctrlsf.vim/autoload/ctrlsf/db.vim	/^func! ctrlsf#db#MatchList() abort$/;"	f
ctrlsf#db#MatchListQF	plugged/ctrlsf.vim/autoload/ctrlsf/db.vim	/^func! ctrlsf#db#MatchListQF() abort$/;"	f
ctrlsf#db#MaxLnum	plugged/ctrlsf.vim/autoload/ctrlsf/db.vim	/^func! ctrlsf#db#MaxLnum()$/;"	f
ctrlsf#db#ParseBackendResult	plugged/ctrlsf.vim/autoload/ctrlsf/db.vim	/^func! ctrlsf#db#ParseBackendResult(result) abort$/;"	f
ctrlsf#db#ParseBackendResultIncr	plugged/ctrlsf.vim/autoload/ctrlsf/db.vim	/^func! ctrlsf#db#ParseBackendResultIncr(lines, close) abort$/;"	f
ctrlsf#db#Reset	plugged/ctrlsf.vim/autoload/ctrlsf/db.vim	/^func! ctrlsf#db#Reset() abort$/;"	f
ctrlsf#db#ResultSet	plugged/ctrlsf.vim/autoload/ctrlsf/db.vim	/^func! ctrlsf#db#ResultSet() abort$/;"	f
ctrlsf#db#SetResultSet	plugged/ctrlsf.vim/autoload/ctrlsf/db.vim	/^func! ctrlsf#db#SetResultSet(resultset) abort$/;"	f
ctrlsf#edit#Save	plugged/ctrlsf.vim/autoload/ctrlsf/edit.vim	/^func! ctrlsf#edit#Save() abort$/;"	f
ctrlsf#fs#DetectFileFormat	plugged/ctrlsf.vim/autoload/ctrlsf/fs.vim	/^func! ctrlsf#fs#DetectFileFormat(path) abort$/;"	f
ctrlsf#fs#FindProjectRoot	plugged/ctrlsf.vim/autoload/ctrlsf/fs.vim	/^func! ctrlsf#fs#FindProjectRoot(...) abort$/;"	f
ctrlsf#hl#ClearSelectedLine	plugged/ctrlsf.vim/autoload/ctrlsf/hl.vim	/^func! ctrlsf#hl#ClearSelectedLine() abort$/;"	f
ctrlsf#hl#HighlightMatch	plugged/ctrlsf.vim/autoload/ctrlsf/hl.vim	/^func! ctrlsf#hl#HighlightMatch(...) abort$/;"	f
ctrlsf#hl#HighlightSelectedLine	plugged/ctrlsf.vim/autoload/ctrlsf/hl.vim	/^func! ctrlsf#hl#HighlightSelectedLine() abort$/;"	f
ctrlsf#hl#ReloadSyntax	plugged/ctrlsf.vim/autoload/ctrlsf/hl.vim	/^func! ctrlsf#hl#ReloadSyntax() abort$/;"	f
ctrlsf#lex#Tokenize	plugged/ctrlsf.vim/autoload/ctrlsf/lex.vim	/^func! ctrlsf#lex#Tokenize(options_str) abort$/;"	f
ctrlsf#log#Clear	plugged/ctrlsf.vim/autoload/ctrlsf/log.vim	/^func! ctrlsf#log#Clear() abort$/;"	f
ctrlsf#log#Debug	plugged/ctrlsf.vim/autoload/ctrlsf/log.vim	/^func! ctrlsf#log#Debug(format, ...) abort$/;"	f
ctrlsf#log#Error	plugged/ctrlsf.vim/autoload/ctrlsf/log.vim	/^func! ctrlsf#log#Error(format, ...) abort$/;"	f
ctrlsf#log#Info	plugged/ctrlsf.vim/autoload/ctrlsf/log.vim	/^func! ctrlsf#log#Info(format, ...) abort$/;"	f
ctrlsf#log#Notice	plugged/ctrlsf.vim/autoload/ctrlsf/log.vim	/^func! ctrlsf#log#Notice(format, ...) abort$/;"	f
ctrlsf#log#Warn	plugged/ctrlsf.vim/autoload/ctrlsf/log.vim	/^func! ctrlsf#log#Warn(format, ...) abort$/;"	f
ctrlsf#opt#AutoClose	plugged/ctrlsf.vim/autoload/ctrlsf/opt.vim	/^func! ctrlsf#opt#AutoClose() abort$/;"	f
ctrlsf#opt#GetCaseSensitive	plugged/ctrlsf.vim/autoload/ctrlsf/opt.vim	/^func! ctrlsf#opt#GetCaseSensitive() abort$/;"	f
ctrlsf#opt#GetContext	plugged/ctrlsf.vim/autoload/ctrlsf/opt.vim	/^func! ctrlsf#opt#GetContext() abort$/;"	f
ctrlsf#opt#GetIgnoreDir	plugged/ctrlsf.vim/autoload/ctrlsf/opt.vim	/^func! ctrlsf#opt#GetIgnoreDir() abort$/;"	f
ctrlsf#opt#GetOpt	plugged/ctrlsf.vim/autoload/ctrlsf/opt.vim	/^func! ctrlsf#opt#GetOpt(name) abort$/;"	f
ctrlsf#opt#GetPath	plugged/ctrlsf.vim/autoload/ctrlsf/opt.vim	/^func! ctrlsf#opt#GetPath() abort$/;"	f
ctrlsf#opt#GetRegex	plugged/ctrlsf.vim/autoload/ctrlsf/opt.vim	/^func! ctrlsf#opt#GetRegex() abort$/;"	f
ctrlsf#opt#HasOpt	plugged/ctrlsf.vim/autoload/ctrlsf/opt.vim	/^func! ctrlsf#opt#HasOpt(name) abort$/;"	f
ctrlsf#opt#OptionNames	plugged/ctrlsf.vim/autoload/ctrlsf/opt.vim	/^func! ctrlsf#opt#OptionNames() abort$/;"	f
ctrlsf#opt#ParseOptions	plugged/ctrlsf.vim/autoload/ctrlsf/opt.vim	/^func! ctrlsf#opt#ParseOptions(options_str) abort$/;"	f
ctrlsf#opt#Reset	plugged/ctrlsf.vim/autoload/ctrlsf/opt.vim	/^func! ctrlsf#opt#Reset() abort$/;"	f
ctrlsf#pat#HighlightRegex	plugged/ctrlsf.vim/autoload/ctrlsf/pat.vim	/^func! ctrlsf#pat#HighlightRegex(vmode) abort$/;"	f
ctrlsf#pat#MatchPerLineRegex	plugged/ctrlsf.vim/autoload/ctrlsf/pat.vim	/^func! ctrlsf#pat#MatchPerLineRegex(vmode) abort$/;"	f
ctrlsf#pat#Regex	plugged/ctrlsf.vim/autoload/ctrlsf/pat.vim	/^func! ctrlsf#pat#Regex() abort$/;"	f
ctrlsf#preview#ClosePreviewWindow	plugged/ctrlsf.vim/autoload/ctrlsf/preview.vim	/^func! ctrlsf#preview#ClosePreviewWindow() abort$/;"	f
ctrlsf#preview#FindPreviewWindow	plugged/ctrlsf.vim/autoload/ctrlsf/preview.vim	/^func! ctrlsf#preview#FindPreviewWindow() abort$/;"	f
ctrlsf#preview#FocusPreviewWindow	plugged/ctrlsf.vim/autoload/ctrlsf/preview.vim	/^func! ctrlsf#preview#FocusPreviewWindow() abort$/;"	f
ctrlsf#preview#OpenPreviewWindow	plugged/ctrlsf.vim/autoload/ctrlsf/preview.vim	/^func! ctrlsf#preview#OpenPreviewWindow() abort$/;"	f
ctrlsf#profile#Report	plugged/ctrlsf.vim/autoload/ctrlsf/profile.vim	/^func! ctrlsf#profile#Report() abort$/;"	f
ctrlsf#profile#Reset	plugged/ctrlsf.vim/autoload/ctrlsf/profile.vim	/^func! ctrlsf#profile#Reset() abort$/;"	f
ctrlsf#profile#Sample	plugged/ctrlsf.vim/autoload/ctrlsf/profile.vim	/^func! ctrlsf#profile#Sample(name) abort$/;"	f
ctrlsf#utils#FzfRun	plugged/ctrlsf.vim/autoload/ctrlsf/utils.vim	/^func! ctrlsf#utils#FzfRun() abort$/;"	f
ctrlsf#utils#FzfSource	plugged/ctrlsf.vim/autoload/ctrlsf/utils.vim	/^func! ctrlsf#utils#FzfSource() abort$/;"	f
ctrlsf#utils#Mirror	plugged/ctrlsf.vim/autoload/ctrlsf/utils.vim	/^func! ctrlsf#utils#Mirror(dicta, dictb) abort$/;"	f
ctrlsf#utils#Nmap	plugged/ctrlsf.vim/autoload/ctrlsf/utils.vim	/^func! ctrlsf#utils#Nmap(map, act_func_ref) abort$/;"	f
ctrlsf#utils#Nunmap	plugged/ctrlsf.vim/autoload/ctrlsf/utils.vim	/^func! ctrlsf#utils#Nunmap(map, act_func_ref) abort$/;"	f
ctrlsf#utils#PreviewSectionC	plugged/ctrlsf.vim/autoload/ctrlsf/utils.vim	/^func! ctrlsf#utils#PreviewSectionC()$/;"	f
ctrlsf#utils#Quote	plugged/ctrlsf.vim/autoload/ctrlsf/utils.vim	/^func! ctrlsf#utils#Quote(str) abort$/;"	f
ctrlsf#utils#SectionB	plugged/ctrlsf.vim/autoload/ctrlsf/utils.vim	/^func! ctrlsf#utils#SectionB()$/;"	f
ctrlsf#utils#SectionC	plugged/ctrlsf.vim/autoload/ctrlsf/utils.vim	/^func! ctrlsf#utils#SectionC()$/;"	f
ctrlsf#utils#SectionX	plugged/ctrlsf.vim/autoload/ctrlsf/utils.vim	/^func! ctrlsf#utils#SectionX()$/;"	f
ctrlsf#utils#ShellEscape	plugged/ctrlsf.vim/autoload/ctrlsf/utils.vim	/^func! ctrlsf#utils#ShellEscape(str) abort$/;"	f
ctrlsf#view#FindNextMatch	plugged/ctrlsf.vim/autoload/ctrlsf/view.vim	/^func! ctrlsf#view#FindNextMatch(forward, wrapscan, ...) abort$/;"	f
ctrlsf#view#Indent	plugged/ctrlsf.vim/autoload/ctrlsf/view.vim	/^func! ctrlsf#view#Indent() abort$/;"	f
ctrlsf#view#Locate	plugged/ctrlsf.vim/autoload/ctrlsf/view.vim	/^func! ctrlsf#view#Locate(vlnum) abort$/;"	f
ctrlsf#view#Render	plugged/ctrlsf.vim/autoload/ctrlsf/view.vim	/^func! ctrlsf#view#Render() abort$/;"	f
ctrlsf#view#RenderIncr	plugged/ctrlsf.vim/autoload/ctrlsf/view.vim	/^func! ctrlsf#view#RenderIncr(base_vlnum) abort$/;"	f
ctrlsf#view#RenderSummary	plugged/ctrlsf.vim/autoload/ctrlsf/view.vim	/^func! ctrlsf#view#RenderSummary() abort$/;"	f
ctrlsf#view#Reset	plugged/ctrlsf.vim/autoload/ctrlsf/view.vim	/^func! ctrlsf#view#Reset() abort$/;"	f
ctrlsf#view#Unrender	plugged/ctrlsf.vim/autoload/ctrlsf/view.vim	/^func! ctrlsf#view#Unrender(content) abort$/;"	f
ctrlsf#win#BackupAllWinSize	plugged/ctrlsf.vim/autoload/ctrlsf/win.vim	/^func! ctrlsf#win#BackupAllWinSize()$/;"	f
ctrlsf#win#CloseMainWindow	plugged/ctrlsf.vim/autoload/ctrlsf/win.vim	/^func! ctrlsf#win#CloseMainWindow() abort$/;"	f
ctrlsf#win#Draw	plugged/ctrlsf.vim/autoload/ctrlsf/win.vim	/^func! ctrlsf#win#Draw() abort$/;"	f
ctrlsf#win#DrawIncr	plugged/ctrlsf.vim/autoload/ctrlsf/win.vim	/^func! ctrlsf#win#DrawIncr() abort$/;"	f
ctrlsf#win#FindCallerWindow	plugged/ctrlsf.vim/autoload/ctrlsf/win.vim	/^func! ctrlsf#win#FindCallerWindow() abort$/;"	f
ctrlsf#win#FindMainWindow	plugged/ctrlsf.vim/autoload/ctrlsf/win.vim	/^func! ctrlsf#win#FindMainWindow() abort$/;"	f
ctrlsf#win#FindTargetWindow	plugged/ctrlsf.vim/autoload/ctrlsf/win.vim	/^func! ctrlsf#win#FindTargetWindow(file) abort$/;"	f
ctrlsf#win#FindWindow	plugged/ctrlsf.vim/autoload/ctrlsf/win.vim	/^func! ctrlsf#win#FindWindow(buf_name) abort$/;"	f
ctrlsf#win#FocusCallerWindow	plugged/ctrlsf.vim/autoload/ctrlsf/win.vim	/^func! ctrlsf#win#FocusCallerWindow() abort$/;"	f
ctrlsf#win#FocusFirstMatch	plugged/ctrlsf.vim/autoload/ctrlsf/win.vim	/^func! ctrlsf#win#FocusFirstMatch() abort$/;"	f
ctrlsf#win#FocusMainWindow	plugged/ctrlsf.vim/autoload/ctrlsf/win.vim	/^func! ctrlsf#win#FocusMainWindow() abort$/;"	f
ctrlsf#win#FocusWindow	plugged/ctrlsf.vim/autoload/ctrlsf/win.vim	/^func! ctrlsf#win#FocusWindow(exp) abort$/;"	f
ctrlsf#win#InMainWindow	plugged/ctrlsf.vim/autoload/ctrlsf/win.vim	/^func! ctrlsf#win#InMainWindow() abort$/;"	f
ctrlsf#win#InWindow	plugged/ctrlsf.vim/autoload/ctrlsf/win.vim	/^func! ctrlsf#win#InWindow(buf_name) abort$/;"	f
ctrlsf#win#MoveCursor	plugged/ctrlsf.vim/autoload/ctrlsf/win.vim	/^func! ctrlsf#win#MoveCursor(wlnum, lnum, col) abort$/;"	f
ctrlsf#win#MoveCursorCentral	plugged/ctrlsf.vim/autoload/ctrlsf/win.vim	/^func! ctrlsf#win#MoveCursorCentral(lnum, col) abort$/;"	f
ctrlsf#win#MoveCursorCurrentLineMatch	plugged/ctrlsf.vim/autoload/ctrlsf/win.vim	/^func! ctrlsf#win#MoveCursorCurrentLineMatch() abort$/;"	f
ctrlsf#win#OpenMainWindow	plugged/ctrlsf.vim/autoload/ctrlsf/win.vim	/^func! ctrlsf#win#OpenMainWindow() abort$/;"	f
ctrlsf#win#Reset	plugged/ctrlsf.vim/autoload/ctrlsf/win.vim	/^func! ctrlsf#win#Reset() abort$/;"	f
ctrlsf#win#RestoreAllWinSize	plugged/ctrlsf.vim/autoload/ctrlsf/win.vim	/^func! ctrlsf#win#RestoreAllWinSize()$/;"	f
ctrlsf#win#SetModifiableByViewMode	plugged/ctrlsf.vim/autoload/ctrlsf/win.vim	/^func! ctrlsf#win#SetModifiableByViewMode(modifiable) abort$/;"	f
ctrlsf.vim	plugged/ctrlsf.vim/README.md	/^# ctrlsf.vim$/;"	c
ctrlsfp	plugged/ctrlsf.vim/autoload/ctrlsf/preview.vim	/^    augroup ctrlsfp$/;"	a
cucumber_language_server	plugged/nvim-lspconfig/CONFIG.md	/^## cucumber_language_server$/;"	s	chapter:Configurations
cuda	plugged/nvim-treesitter/lockfile.json	/^  "cuda": {$/;"	o
current-func-info.vim	plugged/current-func-info.vim/README.md	/^current-func-info.vim$/;"	c
current_score	plugged/nvim-treesitter/lua/nvim-treesitter/query.lua	/^      local current_score = scoring_function(match)$/;"	f
current_text	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def current_text(self):$/;"	m	class:TextObject
cursor	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^    def cursor(self):  # pylint:disable=no-self-use$/;"	m	class:VimBuffer
cursor	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^    def cursor(self, pos):  # pylint:disable=no-self-use$/;"	m	class:VimBuffer
d	init.vim	/^vmap d "_x$/;"	m
d	plugged/nvim-treesitter/tests/indent/python/basic_collections.py	/^d = ($/;"	v
d	plugged/nvim-treesitter/tests/indent/python/branches.py	/^d = [[[$/;"	v
d	plugged/nvim-treesitter/tests/indent/python/comprehensions.py	/^d = {$/;"	v
d	plugged/nvim-treesitter/tests/indent/python/nested_collections.py	/^d = {$/;"	v
d	plugged/nvim-treesitter/tests/indent/python/strings.py	/^d = """$/;"	v
dart	plugged/nvim-treesitter/lockfile.json	/^  "dart": {$/;"	o
dartls	plugged/nvim-lspconfig/CONFIG.md	/^## dartls$/;"	s	chapter:Configurations
date_input	plugged/LuaSnip/Examples/snippets.lua	/^local date_input = function(args, state, fmt)$/;"	f
debug	plugged/nvim-cmp/lua/cmp/matcher.lua	/^matcher.debug = function(...)$/;"	f	unknown:matcher
debug	plugged/nvim-cmp/lua/cmp/matcher_spec.lua	/^    matcher.debug = function(...)$/;"	f	unknown:matcher
debug	plugged/ultisnips/pythonx/UltiSnips/debug.py	/^def debug(msg):$/;"	f
dedent	plugged/LuaSnip/lua/luasnip/util/util.lua	/^local function dedent(text, indentstring)$/;"	f
dedup	plugged/nvim-cmp/lua/cmp/utils/async.lua	/^async.dedup = function()$/;"	f	unknown:async
default_nettype_value	plugged/nvim-treesitter/queries/verilog/highlights.scm	/^ (default_nettype_value) @string)$/;"	f
default_opts	plugged/nvim-lspconfig/lua/lspconfig/ui/windows.lua	/^function win_float.default_opts(options)$/;"	f	unknown:win_float
define_modules	plugged/nvim-treesitter/lua/nvim-treesitter.lua	/^function M.define_modules(...)$/;"	f	unknown:M
define_modules	plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^function M.define_modules(mod_defs)$/;"	f	unknown:M
del_marks	plugged/LuaSnip/lua/luasnip/nodes/snippet.lua	/^function Snippet:del_marks()$/;"	f	unknown:Snippet
delete_mark	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def delete_mark(name):$/;"	f
delta	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def delta(self, pos):$/;"	m	class:Position
deno_uri_to_uri	plugged/nvim-lspconfig/lua/lspconfig/denols.lua	/^local function deno_uri_to_uri(uri)$/;"	f
denols	plugged/nvim-lspconfig/CONFIG.md	/^## denols$/;"	s	chapter:Configurations
denols_definition	plugged/nvim-lspconfig/lua/lspconfig/denols.lua	/^local function denols_definition()$/;"	f
denols_handler	plugged/nvim-lspconfig/lua/lspconfig/denols.lua	/^local function denols_handler(err, result, ctx)$/;"	f
denols_references	plugged/nvim-lspconfig/lua/lspconfig/denols.lua	/^local function denols_references(context)$/;"	f
dependencies	plugged/vim-snippets/addon-info.json	/^  "dependencies" : {$/;"	o
deprecated	plugged/nvim-cmp/lua/cmp/utils/misc.lua	/^misc.deprecated = function(fn, msg)$/;"	f	unknown:misc
description	plugged/nvim-lspconfig/scripts/docgen.lua	/^                description = string.gsub(description, '.*function', 'function')$/;"	f
description	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def description(self):$/;"	m	class:SnippetDefinition
description	plugged/vim-snippets/addon-info.json	/^  "description" : "community driven set of snippets for snipmate"$/;"	s
detach	plugged/nvim-treesitter/lua/nvim-treesitter/highlight.lua	/^function M.detach(bufnr)$/;"	f	unknown:M
detach	plugged/nvim-treesitter/lua/nvim-treesitter/incremental_selection.lua	/^function M.detach(bufnr)$/;"	f	unknown:M
detach	plugged/nvim-treesitter/lua/nvim-treesitter/indent.lua	/^function M.detach(bufnr)$/;"	f	unknown:M
detach_handler	plugged/nvim-treesitter/lua/nvim-treesitter/ts_utils.lua	/^      local function detach_handler()$/;"	f
detach_module	plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^function M.detach_module(mod_name, bufnr)$/;"	f	unknown:M
devicetree	plugged/nvim-treesitter/lockfile.json	/^  "devicetree": {$/;"	o
devicons#plugins#ctrlp#init	plugged/vim-devicons/autoload/devicons/plugins/ctrlp.vim	/^function! devicons#plugins#ctrlp#init() abort$/;"	f
devicons#plugins#denite#init	plugged/vim-devicons/autoload/devicons/plugins/denite.vim	/^function! devicons#plugins#denite#init() abort$/;"	f
devicons#plugins#flagship#init	plugged/vim-devicons/autoload/devicons/plugins/flagship.vim	/^function! devicons#plugins#flagship#init() abort$/;"	f
devicons#plugins#startify#init	plugged/vim-devicons/autoload/devicons/plugins/startify.vim	/^function! devicons#plugins#startify#init() abort$/;"	f
devicons#plugins#unite#init	plugged/vim-devicons/autoload/devicons/plugins/unite.vim	/^function! devicons#plugins#unite#init() abort$/;"	f
devicons#plugins#vimfiler#init	plugged/vim-devicons/autoload/devicons/plugins/vimfiler.vim	/^function! devicons#plugins#vimfiler#init() abort$/;"	f
dhall_lsp_server	plugged/nvim-lspconfig/CONFIG.md	/^## dhall_lsp_server$/;"	s	chapter:Configurations
diagnosticls	plugged/nvim-lspconfig/CONFIG.md	/^## diagnosticls$/;"	s	chapter:Configurations
did_plugin_ultisnips	plugged/ultisnips/plugin/UltiSnips.vim	/^let did_plugin_ultisnips=1$/;"	v
diff	plugged/ultisnips/pythonx/UltiSnips/diff.py	/^def diff(a, b, sline=0):$/;"	f
diff_in_buffer_length	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def diff_in_buffer_length(self):$/;"	m	class:VimState
difference	plugged/nvim-treesitter/lua/nvim-treesitter/utils.lua	/^function M.difference(tbl1, tbl2)$/;"	f	unknown:M
dirname	plugged/nvim-lspconfig/lua/lspconfig/util.lua	/^    dirname = function(path)$/;"	f
dirs	plugged/nvim-treesitter/tests/indent/common.lua	/^  dirs = vim.tbl_map(function(dir)$/;"	f
disable_all	plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^local function disable_all(mod)$/;"	f
disable_mod_conf_autocmd	plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^local function disable_mod_conf_autocmd(mod)$/;"	f
disable_module	plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^local function disable_module(mod, bufnr)$/;"	f
display_width	plugged/vim-snippets/pythonx/vimsnippets.py	/^def display_width(str):$/;"	f
do_check	plugged/nvim-treesitter/scripts/check-queries.lua	/^local function do_check()$/;"	f
do_post_expand	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def do_post_expand(self, start, end, snippets_stack):$/;"	m	class:SnippetDefinition
do_post_jump	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def do_post_jump($/;"	m	class:SnippetDefinition
do_pre_expand	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def do_pre_expand(self, visual_content, snippets_stack):$/;"	m	class:SnippetDefinition
do_unmapping	plugged/ultisnips/test/test_Selection.py	/^    do_unmapping = False$/;"	v	class:SelectModeMappings_DisableRemoveBeforeSelecting_ECR
do_unmapping	plugged/ultisnips/test/test_Selection.py	/^    do_unmapping = True$/;"	v	class:_SelectModeMappings
dockerfile	plugged/nvim-treesitter/lockfile.json	/^  "dockerfile": {$/;"	o
dockerls	plugged/nvim-lspconfig/CONFIG.md	/^## dockerls$/;"	s	chapter:Configurations
documentation (type: false | cmp.DocumentationConfig)	plugged/nvim-cmp/README.md	/^#### documentation (type: false | cmp.DocumentationConfig)$/;"	t	chapter:Configuration options
documentation.border (type: string[])	plugged/nvim-cmp/README.md	/^#### documentation.border (type: string[])$/;"	t	chapter:Configuration options
documentation.maxheight (type: number)	plugged/nvim-cmp/README.md	/^#### documentation.maxheight (type: number)$/;"	t	chapter:Configuration options
documentation.maxwidth (type: number)	plugged/nvim-cmp/README.md	/^#### documentation.maxwidth (type: number)$/;"	t	chapter:Configuration options
documentation.winhighlight (type: string)	plugged/nvim-cmp/README.md	/^#### documentation.winhighlight (type: string)$/;"	t	chapter:Configuration options
documentation.zindex (type: number)	plugged/nvim-cmp/README.md	/^#### documentation.zindex (type: number)$/;"	t	chapter:Configuration options
dot	plugged/nvim-treesitter/lockfile.json	/^  "dot": {$/;"	o
dotls	plugged/nvim-lspconfig/CONFIG.md	/^## dotls$/;"	s	chapter:Configurations
download_stylua	plugged/nvim-cmp/utils/install_stylua.sh	/^function download_stylua() {$/;"	f
draw	plugged/nvim-cmp/lua/cmp/view/custom_entries_view.lua	/^custom_entries_view.draw = function(self)$/;"	f	unknown:custom_entries_view
dump	plugged/LuaSnip/lua/luasnip/nodes/snippet.lua	/^function Snippet:dump()$/;"	f	unknown:Snippet
dynamic_lambda	plugged/LuaSnip/lua/luasnip/extras/init.lua	/^	dynamic_lambda = function(pos, lambd, args_indcs)$/;"	f
e	plugged/nvim-treesitter/tests/indent/python/branches.py	/^e = [[$/;"	v
e	plugged/nvim-treesitter/tests/indent/python/comprehensions.py	/^e = [$/;"	v
e	plugged/nvim-treesitter/tests/indent/python/nested_collections.py	/^e = (1, 2,$/;"	v
easy-align examples	plugged/vim-easy-align/EXAMPLES.md	/^easy-align examples$/;"	c
easy_align#align	plugged/vim-easy-align/autoload/easy_align.vim	/^function! easy_align#align(bang, live, visualmode, expr) range$/;"	f
echo_to_hierarchy	plugged/ultisnips/pythonx/UltiSnips/debug.py	/^def echo_to_hierarchy(text_object):$/;"	f
edit_query_file	plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^function M.edit_query_file(query_group, lang)$/;"	f	unknown:M
edit_query_file_user_after	plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^function M.edit_query_file_user_after(query_group, lang)$/;"	f	unknown:M
efm	plugged/nvim-lspconfig/CONFIG.md	/^## efm$/;"	s	chapter:Configurations
elixirls	plugged/nvim-lspconfig/CONFIG.md	/^## elixirls$/;"	s	chapter:Configurations
elm	plugged/nvim-treesitter/lockfile.json	/^  "elm": {$/;"	o
elmls	plugged/nvim-lspconfig/CONFIG.md	/^## elmls$/;"	s	chapter:Configurations
ember	plugged/nvim-lspconfig/CONFIG.md	/^## ember$/;"	s	chapter:Configurations
emit	plugged/nvim-cmp/lua/cmp/utils/autocmd.lua	/^autocmd.emit = function(event)$/;"	f	unknown:autocmd
emit	plugged/nvim-cmp/lua/cmp/utils/event.lua	/^event.emit = function(self, name, ...)$/;"	f	unknown:event
emmet_ls	plugged/nvim-lspconfig/CONFIG.md	/^## emmet_ls$/;"	s	chapter:Configurations
empty	plugged/nvim-cmp/lua/cmp/context.lua	/^context.empty = function()$/;"	f	unknown:context
enable_all	plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^local function enable_all(mod)$/;"	f
enable_mod_conf_autocmd	plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^local function enable_mod_conf_autocmd(mod)$/;"	f
enable_module	plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^local function enable_module(mod, bufnr, lang)$/;"	f
enabled	plugged/nvim-cmp/lua/cmp/config.lua	/^config.enabled = function()$/;"	f	unknown:config
enabled	plugged/nvim-cmp/lua/cmp/config/default.lua	/^    enabled = function()$/;"	f
enabled (type: fun(): boolean|boolean)	plugged/nvim-cmp/README.md	/^#### enabled (type: fun(): boolean|boolean)$/;"	t	chapter:Configuration options
end	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def end(self):$/;"	m	class:TextObject
end_	plugged/nvim-treesitter/lua/nvim-treesitter/tsrange.lua	/^function TSRange:end_()$/;"	f	unknown:TSRange
ensure	plugged/nvim-cmp/lua/cmp/utils/cache.lua	/^cache.ensure = function(self, key, callback)$/;"	f	unknown:cache
ensure	plugged/ultisnips/pythonx/UltiSnips/snippet/source/base.py	/^    def ensure(self, filetypes):$/;"	m	class:SnippetSource
ensure	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^    def ensure(self, filetypes):$/;"	m	class:SnippetFileSource
enter]	plugged/LuaSnip/lua/luasnip/nodes/snippet.lua	/^					[events.enter] = function(_)$/;"	f	unknown:[events
enter_node	plugged/LuaSnip/lua/luasnip/nodes/snippet.lua	/^function Snippet:enter_node(node_id)$/;"	f	unknown:Snippet
equals	plugged/nvim-cmp/lua/cmp/utils/keymap.lua	/^keymap.equals = function(a, b)$/;"	f	unknown:keymap
erlang	plugged/nvim-treesitter/lockfile.json	/^  "erlang": {$/;"	o
erlangls	plugged/nvim-lspconfig/CONFIG.md	/^## erlangls$/;"	s	chapter:Configurations
error	plugged/nvim-treesitter/lua/nvim-treesitter/query_predicates.lua	/^local function error(str)$/;"	f
escape	plugged/nvim-cmp/lua/cmp/utils/keymap.lua	/^keymap.escape = function(keys)$/;"	f	unknown:keymap
escape	plugged/nvim-cmp/lua/cmp/utils/str.lua	/^str.escape = function(text, chars)$/;"	f	unknown:str
escape	plugged/ultisnips/pythonx/UltiSnips/text.py	/^def escape(text, chars):$/;"	f
escape	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def escape(inp):$/;"	f
eslint	plugged/nvim-lspconfig/CONFIG.md	/^## eslint$/;"	s	chapter:Configurations
evacuate	plugged/nvim-cmp/lua/cmp/utils/keymap.lua	/^keymap.evacuate = function(mode, lhs)$/;"	f	unknown:keymap
eval	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def eval(text):$/;"	f
event	plugged/LuaSnip/lua/luasnip/nodes/node.lua	/^function Node:event(event)$/;"	f	unknown:Node
event	plugged/LuaSnip/lua/luasnip/nodes/snippet.lua	/^function Snippet:event(event)$/;"	f	unknown:Snippet
event.on_confirm_done (type: fun(entry: cmp.Entry))	plugged/nvim-cmp/README.md	/^#### event.on_confirm_done (type: fun(entry: cmp.Entry))$/;"	t	chapter:Configuration options
exact	plugged/nvim-cmp/lua/cmp/config/compare.lua	/^compare.exact = function(entry1, entry2)$/;"	f	unknown:compare
examples	plugged/neodark.vim/test/test.rb	/^    def self.examples$/;"	S	class:VimColors.RubyExample
excape_markdown_punctuations	plugged/nvim-lspconfig/scripts/docgen.lua	/^                        local function excape_markdown_punctuations(str)$/;"	f
exec_sub_regexp	plugged/vim-nerdtree-syntax-highlight/after/syntax/nerdtree.vim	/^  let exec_sub_regexp = substitute(sub_regexp, '\\$$', '\\\\W\\*\\\\\\*\\$', '')$/;"	v
execute	plugged/cmp-nvim-lsp/lua/cmp_nvim_lsp/source.lua	/^source.execute = function(self, completion_item, callback)$/;"	f	unknown:source
execute	plugged/cmp_luasnip/lua/cmp_luasnip/init.lua	/^function source:execute(completion_item, callback)$/;"	f	unknown:source
execute	plugged/nvim-cmp/lua/cmp/entry.lua	/^entry.execute = function(self, callback)$/;"	f	unknown:entry
execute	plugged/nvim-cmp/lua/cmp/source.lua	/^source.execute = function(self, item, callback)$/;"	f	unknown:source
exists	plugged/nvim-lspconfig/lua/lspconfig/util.lua	/^  local function exists(filename)$/;"	f
exit	plugged/LuaSnip/lua/luasnip/nodes/choiceNode.lua	/^function ChoiceNode:exit()$/;"	f	unknown:ChoiceNode
exit	plugged/LuaSnip/lua/luasnip/nodes/dynamicNode.lua	/^function DynamicNode:exit()$/;"	f	unknown:DynamicNode
exit	plugged/LuaSnip/lua/luasnip/nodes/insertNode.lua	/^function InsertNode:exit()$/;"	f	unknown:InsertNode
exit	plugged/LuaSnip/lua/luasnip/nodes/node.lua	/^function Node:exit()$/;"	f	unknown:Node
exit	plugged/LuaSnip/lua/luasnip/nodes/snippet.lua	/^function Snippet:exit()$/;"	f	unknown:Snippet
exit_out_of_region	plugged/LuaSnip/lua/luasnip/init.lua	/^local function exit_out_of_region(node)$/;"	f
expand	lua/lsp.lua	/^    expand = function(args)$/;"	f
expand	plugged/LuaSnip/lua/luasnip/init.lua	/^local function expand()$/;"	f
expand	plugged/nvim-cmp/lua/cmp/config/default.lua	/^      expand = function()$/;"	f
expand	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def expand(self):$/;"	m	class:SnippetManager
expand_anon	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def expand_anon($/;"	m	class:SnippetManager
expand_anon	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def expand_anon(self, *args, **kwargs):$/;"	m	class:SnippetUtilForAction
expand_auto	plugged/LuaSnip/lua/luasnip/init.lua	/^local function expand_auto()$/;"	f
expand_or_jump	plugged/LuaSnip/lua/luasnip/init.lua	/^local function expand_or_jump()$/;"	f
expand_or_jump	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def expand_or_jump(self):$/;"	m	class:SnippetManager
expand_or_jumpable	plugged/LuaSnip/lua/luasnip/init.lua	/^local function expand_or_jumpable()$/;"	f
expand_path	plugged/LuaSnip/lua/luasnip/loaders/from_vscode.lua	/^local function expand_path(path)$/;"	f
expand_tabs	plugged/LuaSnip/lua/luasnip/nodes/choiceNode.lua	/^function ChoiceNode:expand_tabs(tabwidth)$/;"	f	unknown:ChoiceNode
expand_tabs	plugged/LuaSnip/lua/luasnip/nodes/dynamicNode.lua	/^function DynamicNode:expand_tabs(_) end$/;"	f	unknown:DynamicNode
expand_tabs	plugged/LuaSnip/lua/luasnip/nodes/functionNode.lua	/^function FunctionNode:expand_tabs(_) end$/;"	f	unknown:FunctionNode
expand_tabs	plugged/LuaSnip/lua/luasnip/nodes/node.lua	/^function Node:expand_tabs(tabwidth)$/;"	f	unknown:Node
expand_tabs	plugged/LuaSnip/lua/luasnip/nodes/snippet.lua	/^function Snippet:expand_tabs(tabwidth)$/;"	f	unknown:Snippet
expand_tabs	plugged/LuaSnip/lua/luasnip/util/util.lua	/^local function expand_tabs(text, tabwidth)$/;"	f
expandable	plugged/LuaSnip/lua/luasnip/init.lua	/^local function expandable()$/;"	f
expected_error	plugged/ultisnips/test/test_Choices.py	/^    expected_error = "Choices selection is not supported on \\$0"$/;"	v	class:Choices_ShouldThrowErrorWithZeroTabstop
expected_error	plugged/ultisnips/test/test_ContextSnippets.py	/^    expected_error = r"IndexError: line number out of range"$/;"	v	class:ContextSnippets_ReportErrorOnIndexOutOfRange
expected_error	plugged/ultisnips/test/test_ContextSnippets.py	/^    expected_error = r"NameError: name 'Tru' is not defined"$/;"	v	class:ContextSnippets_ReportError
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = " > \\s+qwe"$/;"	v	class:ParseSnippets_PrintPythonStacktraceMultiline
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = " > abc"$/;"	v	class:ParseSnippets_PrintPythonStacktrace
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = "Context: asd"$/;"	v	class:ParseSnippets_PrintErroneousSnippetContext
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = "Defined in: .*\/all.snippets"$/;"	v	class:ParseSnippets_PrintErroneousSnippetLocation
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = "Invalid multiword trigger: '!inv snip\/' in \\S+:2"$/;"	v	class:ParseSnippets_MultiWord_UnmatchedContainer
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = "Invalid multiword trigger: 'test snip' in \\S+:2"$/;"	v	class:ParseSnippets_MultiWord_NoContainer
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = "Post-expand: asd"$/;"	v	class:ParseSnippets_PrintErroneousSnippetPostAction
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = "Pre-expand: asd"$/;"	v	class:ParseSnippets_PrintErroneousSnippetPreAction
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = "Trigger: test"$/;"	v	class:ParseSnippets_PrintErroneousSnippet
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = r"'extends' without file types in \\S+:2"$/;"	v	class:ParseSnippets_ExtendsWithoutFiletype
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = r"Invalid line 'unknown directive' in \\S+:2"$/;"	v	class:ParseSnippets_UnknownDirective
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = r"Invalid priority '' in \\S+:2"$/;"	v	class:ParseSnippets_InvalidPriorityLine1
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = r"Invalid priority '- 50' in \\S+:2"$/;"	v	class:ParseSnippets_InvalidPriorityLine
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = r"Missing 'endsnippet' for 'testsnip' in \\S+:4"$/;"	v	class:ParseSnippets_MissingEndSnippet
expected_error	plugged/ultisnips/test/test_SnippetActions.py	/^    expected_error = "changes are untrackable"$/;"	v	class:SnippetActions_ErrorOnBufferModificationThroughCommand
expected_error	plugged/ultisnips/test/test_SnippetActions.py	/^    expected_error = "line under the cursor was modified"$/;"	v	class:SnippetActions_ErrorOnModificationSnippetLine
expected_error	plugged/ultisnips/test/vim_test_case.py	/^    expected_error = ""$/;"	v	class:VimTestCase
expected_python_version	plugged/ultisnips/test/vim_test_case.py	/^    expected_python_version = ($/;"	v	class:VimTestCase
experimental.ghost_text (type: cmp.GhostTextConfig | false)	plugged/nvim-cmp/README.md	/^#### experimental.ghost_text (type: cmp.GhostTextConfig | false)$/;"	t	chapter:Configuration options
experimental.native_menu (type: boolean)	plugged/nvim-cmp/README.md	/^#### experimental.native_menu (type: boolean)$/;"	t	chapter:Configuration options
expr_to_fn	plugged/LuaSnip/lua/luasnip/extras/init.lua	/^local function expr_to_fn(expr)$/;"	f
extract_captures	plugged/nvim-treesitter/scripts/check-queries.lua	/^local function extract_captures()$/;"	f
f	plugged/LuaSnip/Examples/snippets.lua	/^local f = ls.function_node$/;"	f
f	plugged/LuaSnip/lua/luasnip/init.lua	/^	f = require("luasnip.nodes.functionNode").F,$/;"	f
f	plugged/LuaSnip/lua/luasnip/util/parser.lua	/^		local f = fNode.F(functions.var, {})$/;"	f
f	plugged/nvim-cmp/lua/cmp/utils/async_spec.lua	/^    local f = async.throttle(function()$/;"	f
f1	plugged/nvim-treesitter/tests/indent/c/func.c	/^int f1(int x) {$/;"	f	typeref:typename:int
f2	plugged/nvim-treesitter/tests/indent/c/func.c	/^int f2(int x)$/;"	f	typeref:typename:int
f3	plugged/nvim-treesitter/tests/indent/c/func.c	/^int f3($/;"	f	typeref:typename:int
f4	plugged/nvim-treesitter/tests/indent/c/func.c	/^int f4($/;"	f	typeref:typename:int
f5	plugged/nvim-treesitter/tests/indent/c/func.c	/^int f5(int x,$/;"	f	typeref:typename:int
f6	plugged/nvim-treesitter/tests/indent/c/func.c	/^f6(int x, int y)$/;"	f	typeref:typename:int
fNode	plugged/LuaSnip/lua/luasnip/util/parser.lua	/^local fNode = require("luasnip.nodes.functionNode")$/;"	f
fails	plugged/LuaSnip/tests/fmt_spec.lua	/^local fails = function(msg, fmt, args, opts)$/;"	f
fake_expand	plugged/LuaSnip/lua/luasnip/nodes/snippet.lua	/^function Snippet:fake_expand()$/;"	f	unknown:Snippet
feedkeys	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def feedkeys(keys, mode="n"):$/;"	f
fennel	plugged/nvim-treesitter/lockfile.json	/^  "fennel": {$/;"	o
field	plugged/nvim-treesitter/lua/nvim-treesitter/tsrange.lua	/^function TSRange:field() end$/;"	f	unknown:TSRange
files	plugged/ultisnips/test/test_Autotrigger.py	/^    files = {$/;"	v	class:Autotrigger_CanExpandOnTriggerWithLengthMoreThanOne
files	plugged/ultisnips/test/test_Autotrigger.py	/^    files = {$/;"	v	class:Autotrigger_CanMatchContext
files	plugged/ultisnips/test/test_Autotrigger.py	/^    files = {$/;"	v	class:Autotrigger_CanMatchPreviouslySelectedPlaceholder
files	plugged/ultisnips/test/test_Autotrigger.py	/^    files = {$/;"	v	class:Autotrigger_CanMatchSimpleTrigger
files	plugged/ultisnips/test/test_Autotrigger.py	/^    files = {$/;"	v	class:Autotrigger_WillProduceNoExceptionWithVimLowerThan214
files	plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_ContextHasAccessToVisual
files	plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_ContextIsClearedBeforeExpand
files	plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_CursorIsZeroBased
files	plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_DoNotExpandOnFalse
files	plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_ExpandOnTrue
files	plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_Header_DoNotExpandOnFalse
files	plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_Header_ExpandOnTrue
files	plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_PriorityKeyword
files	plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_ReportError
files	plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_ReportErrorOnIndexOutOfRange
files	plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_SimpleSnippet
files	plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_SnippetPriority
files	plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_UseContext
files	plugged/ultisnips/test/test_Format.py	/^    files = {$/;"	v	class:ProperIndenting_FirstLineInFile_ECR
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_ClearAll
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_ClearOne
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_ClearTwo
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_ExtendsWithoutFiletype
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_Global_Local_Python
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_Global_Python
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_InvalidPriorityLine
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_InvalidPriorityLine1
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_MissingEndSnippet
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_MultiWord_NoContainer
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_MultiWord_Quotes
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_MultiWord_UnmatchedContainer
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_MultiWord_WithQuotes
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_PrintErroneousSnippet
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_PrintErroneousSnippetContext
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_PrintErroneousSnippetLocation
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_PrintErroneousSnippetPostAction
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_PrintErroneousSnippetPreAction
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_PrintPythonStacktrace
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_PrintPythonStacktraceMultiline
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_SimpleSnippet
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_UnknownDirective
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:_ParseSnippets_MultiWord
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:_ParseSnippets_MultiWord_RE
files	plugged/ultisnips/test/test_Recursive.py	/^    files = {$/;"	v	class:RecTabStops_ChildTriggerContainsParentTextObjects
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_Disabled
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_EmptyLinesContinueSnippets
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_Extends
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_Interpolation
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_InterpolationWithSystem
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_Issue1325
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_Issue1344
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_Issue658
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_MultiMatches
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_NoNestedTabstops
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_OtherFiletype
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_OverwrittenByRegExpTrigger
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_SimpleSnippet
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_SimpleSnippetInSnippetFile
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_SimpleSnippetSubDirectory
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_TestMirrors
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_TestMirrorsInPlaceholders
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_TestMirrorsInPlaceholders_Overwrite
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_TestNoBraceTabstops
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_TestNoBraceTabstopsAndMirrors
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_Visual_Simple
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_CanEvenWrapSnippetInPreAction
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_CanExpandAnonOnPreExpand
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_CanExpandAnonSnippetInJumpAction
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_CanExpandAnonSnippetInJumpActionWhileSelected
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_CanExpandAnonSnippetOnFirstJump
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_CanExpandSnippetInDifferentPlace
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_CanMirrorTabStopsOutsideOfSnippet
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_CanModifyParentBody
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_CanUseContextFromContextMatch
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_CanVisuallySelectFirstPlaceholderInAnonSnippetInPre
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_DoNotBreakCursorOnSingleLikeChange
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_EnsureIndent
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_ErrorOnBufferModificationThroughCommand
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_ErrorOnModificationSnippetLine
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_MoveParentSnippetFromChildInPreAction
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_MoveVisual
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_PostActionCanUseSnippetRange
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_PostActionModifiesBuffer
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_PostActionModifiesCharAfterSnippet
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_PostActionModifiesLineAfterSnippet
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_PreActionModifiesBuffer
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_UseCorrectJumpActions
files	plugged/ultisnips/test/test_SnippetPriorities.py	/^    files = {$/;"	v	class:SnippetPriorities_AddedHasHigherThanFile
files	plugged/ultisnips/test/test_SnippetPriorities.py	/^    files = {$/;"	v	class:SnippetPriorities_ClearedByChild
files	plugged/ultisnips/test/test_SnippetPriorities.py	/^    files = {$/;"	v	class:SnippetPriorities_ClearedByParent
files	plugged/ultisnips/test/test_SnippetPriorities.py	/^    files = {$/;"	v	class:SnippetPriorities_FileHasHigherThanAdded
files	plugged/ultisnips/test/test_SnippetPriorities.py	/^    files = {$/;"	v	class:SnippetPriorities_FileHasHigherThanAdded_neg_prio
files	plugged/ultisnips/test/test_SnippetPriorities.py	/^    files = {$/;"	v	class:SnippetPriorities_SimpleClear
files	plugged/ultisnips/test/test_SnippetPriorities.py	/^    files = {$/;"	v	class:SnippetPriorities_SimpleClear2
files	plugged/ultisnips/test/test_TabStop.py	/^    files = {$/;"	v	class:TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippet
files	plugged/ultisnips/test/test_TabStop.py	/^    files = {$/;"	v	class:TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippetRE
files	plugged/ultisnips/test/vim_test_case.py	/^    files = {}$/;"	v	class:VimTestCase
filetype_extend	plugged/LuaSnip/lua/luasnip/init.lua	/^local function filetype_extend(ft, extend_ft)$/;"	f
filetype_set	plugged/LuaSnip/lua/luasnip/init.lua	/^local function filetype_set(ft, fts)$/;"	f
filetypes	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^    def filetypes(self):$/;"	m	class:VimBuffer
fill_in_whitespace	plugged/ultisnips/pythonx/UltiSnips/text.py	/^def fill_in_whitespace(text):$/;"	f
filter	plugged/nvim-treesitter/lua/nvim-treesitter/utils.lua	/^function M.filter(tbl, predicate)$/;"	f	unknown:M
filter	plugged/vim-devicons/rplugin/python3/denite/filter/devicons_denite_converter.py	/^	def filter(self, context):$/;"	m	class:Filter
filter_list	plugged/LuaSnip/lua/luasnip/loaders/from_vscode.lua	/^local function filter_list(list, exclude, include)$/;"	f
finalize	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/base.py	/^def finalize(all_tokens, seen_ts, snippet_instance):$/;"	f
find_all_snippet_directories	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^def find_all_snippet_directories() -> List[str]:$/;"	f	typeref:typename:List[str]
find_all_snippet_files	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^def find_all_snippet_files(ft) -> Set[str]:$/;"	f	typeref:typename:Set[str]
find_best_match	plugged/nvim-treesitter/lua/nvim-treesitter/query.lua	/^function M.find_best_match(bufnr, capture_string, query_group, filter_predicate, scoring_functio/;"	f	unknown:M
find_dart_sdk_root_path	plugged/nvim-lspconfig/lua/lspconfig/dartls.lua	/^local find_dart_sdk_root_path = function()$/;"	f
find_definition	plugged/nvim-treesitter/lua/nvim-treesitter/locals.lua	/^function M.find_definition(node, bufnr)$/;"	f	unknown:M
find_git_ancestor	plugged/nvim-lspconfig/lua/lspconfig/util.lua	/^function M.find_git_ancestor(startpath)$/;"	f	unknown:M
find_map_by_lhs	plugged/nvim-cmp/lua/cmp/utils/keymap.lua	/^keymap.find_map_by_lhs = function(mode, lhs)$/;"	f	unknown:keymap
find_match_region	plugged/nvim-cmp/lua/cmp/matcher.lua	/^matcher.find_match_region = function(input, input_start_index, input_end_index, word, word_index/;"	f	unknown:matcher
find_node_modules_ancestor	plugged/nvim-lspconfig/lua/lspconfig/util.lua	/^function M.find_node_modules_ancestor(startpath)$/;"	f	unknown:M
find_outer_snippet	plugged/LuaSnip/lua/luasnip/util/util.lua	/^local function find_outer_snippet(node)$/;"	f
find_package_json_ancestor	plugged/nvim-lspconfig/lua/lspconfig/util.lua	/^function M.find_package_json_ancestor(startpath)$/;"	f	unknown:M
find_parent_for_new_to	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def find_parent_for_new_to(self, pos):$/;"	m	class:EditableTextObject
find_snippet_files	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^def find_snippet_files(ft, directory: str) -> Set[str]:$/;"	f	typeref:typename:Set[str]
find_usages	plugged/nvim-treesitter/lua/nvim-treesitter/locals.lua	/^function M.find_usages(node, scope_node, bufnr)$/;"	f	unknown:M
fish	plugged/nvim-treesitter/lockfile.json	/^  "fish": {$/;"	o
fix_all	plugged/nvim-lspconfig/lua/lspconfig/eslint.lua	/^local function fix_all(opts)$/;"	f
fix_node_indices	plugged/LuaSnip/lua/luasnip/util/parser.lua	/^local function fix_node_indices(nodes)$/;"	f
fix_zero_version	plugged/nvim-lspconfig/lua/lspconfig/jdtls.lua	/^local function fix_zero_version(workspace_edit)$/;"	f
flatten_test_suite	plugged/ultisnips/test_all.py	/^    def flatten_test_suite(suite):$/;"	f
flow	plugged/nvim-lspconfig/CONFIG.md	/^## flow$/;"	s	chapter:Configurations
fmt	plugged/nvim-cmp/Makefile	/^fmt:$/;"	t
fmta	plugged/LuaSnip/lua/luasnip/extras/fmt.lua	/^	fmta = function(str, nodes, opts) -- fmt with angle brackets$/;"	f
fn	plugged/LuaSnip/lua/luasnip/extras/init.lua	/^	local function fn(args, snip)$/;"	f
fn	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def fn(self):  # pylint:disable=no-self-use,invalid-name$/;"	m	class:SnippetUtil
focus	plugged/ultisnips/test/vim_interface.py	/^    def focus(self, title=None):$/;"	m	class:VimInterfaceWindows
folder_icon_identifier	plugged/vim-nerdtree-syntax-highlight/after/syntax/nerdtree.vim	/^  let folder_icon_identifier = 'nerdtreeExactMatchFolderIcon_'.key$/;"	v
folder_identifier	plugged/vim-nerdtree-syntax-highlight/after/syntax/nerdtree.vim	/^  let folder_identifier = 'nerdtreeExactMatchFolder_'.key$/;"	v
foldmarker	plugged/vim-snippets/pythonx/vimsnippets.py	/^def foldmarker():$/;"	f
folds_levels	plugged/nvim-treesitter/lua/nvim-treesitter/fold.lua	/^local folds_levels = tsutils.memoize_by_buf_tick(function(bufnr)$/;"	f
foo	plugged/nvim-treesitter/tests/indent/c/comment.c	/^void foo(int *x, int y) {$/;"	f	typeref:typename:void
foo	plugged/nvim-treesitter/tests/indent/c/compound_lit.c	/^struct foo {$/;"	s	file:
foo	plugged/nvim-treesitter/tests/indent/c/cond.c	/^void foo(int x)$/;"	f	typeref:typename:void
foo	plugged/nvim-treesitter/tests/indent/c/enum.c	/^enum foo {$/;"	g	file:
foo	plugged/nvim-treesitter/tests/indent/c/expr.c	/^void foo(int x, int y)$/;"	f	typeref:typename:void
foo	plugged/nvim-treesitter/tests/indent/c/label.c	/^int foo(int x)$/;"	f	typeref:typename:int
foo	plugged/nvim-treesitter/tests/indent/c/loop.c	/^void foo(int x)$/;"	f	typeref:typename:void
foo	plugged/nvim-treesitter/tests/indent/c/no_braces.c	/^int foo(int x) {$/;"	f	typeref:typename:int
foo	plugged/nvim-treesitter/tests/indent/c/preproc_cond.c	/^void foo(int x)$/;"	f	typeref:typename:void
foo	plugged/nvim-treesitter/tests/indent/c/preproc_func.c	/^void foo(int x)$/;"	f	typeref:typename:void
foo	plugged/nvim-treesitter/tests/indent/c/struct.c	/^struct foo {$/;"	s	file:
foo	plugged/nvim-treesitter/tests/indent/c/switch.c	/^void foo(int x) {$/;"	f	typeref:typename:void
foo	plugged/nvim-treesitter/tests/indent/c/ternary.c	/^void foo(int x)$/;"	f	typeref:typename:void
foo	plugged/nvim-treesitter/tests/indent/cpp/stream.cpp	/^void foo(int x) {$/;"	f	typeref:typename:void
foo	plugged/nvim-treesitter/tests/indent/lua/func.lua	/^function foo(x)$/;"	f
foo	plugged/nvim-treesitter/tests/indent/python/basic_blocks.py	/^    def foo(self):$/;"	m	class:Foo
foo	plugged/nvim-treesitter/tests/indent/python/basic_blocks.py	/^def foo(x):$/;"	f
foo	plugged/nvim-treesitter/tests/indent/python/branches.py	/^def foo(x, y):$/;"	f
foo	plugged/nvim-treesitter/tests/indent/rust/array.rs	/^fn foo() {$/;"	f
foo	plugged/nvim-treesitter/tests/indent/rust/comment.rs	/^fn foo(x: i32, y: i32) -> i32 {$/;"	f
foo	plugged/nvim-treesitter/tests/indent/rust/cond.rs	/^fn foo(mut x: i32) -> i32 {$/;"	f
foo	plugged/nvim-treesitter/tests/indent/rust/func.rs	/^fn foo($/;"	f
foo	plugged/nvim-treesitter/tests/indent/rust/func.rs	/^fn foo() -> i32 {$/;"	f
foo	plugged/nvim-treesitter/tests/indent/rust/impl.rs	/^    fn foo() -> i32 {$/;"	P	implementation:Foo
foo	plugged/nvim-treesitter/tests/indent/rust/loop.rs	/^fn foo(mut x: i32) {$/;"	f
foo	plugged/nvim-treesitter/tests/indent/rust/macro.rs	/^macro_rules! foo {$/;"	M
foo	plugged/nvim-treesitter/tests/indent/rust/match.rs	/^fn foo(x: i32) -> i32 {$/;"	f
foo	plugged/nvim-treesitter/tests/indent/rust/mod.rs	/^mod foo {$/;"	n
foo	plugged/nvim-treesitter/tests/indent/rust/string.rs	/^fn foo() {$/;"	f
foo	plugged/nvim-treesitter/tests/indent/rust/where.rs	/^fn foo<T>(t: T) -> i32 where$/;"	f
foo	plugged/nvim-treesitter/tests/indent/rust/where.rs	/^fn foo<T>(t: T) -> i32$/;"	f
format	plugged/nvim-cmp/lua/cmp/config/default.lua	/^      format = function(_, vim_item)$/;"	f
format	plugged/ultisnips/Makefile	/^format:$/;"	t
format_indent	plugged/nvim-treesitter/tests/indent/common.lua	/^local function format_indent(arg, fmtargs)$/;"	f
format_nodes	plugged/LuaSnip/lua/luasnip/extras/fmt.lua	/^local function format_nodes(str, nodes, opts)$/;"	f
formatting.fields (type: cmp.ItemField[])	plugged/nvim-cmp/README.md	/^#### formatting.fields (type: cmp.ItemField[])$/;"	t	chapter:Configuration options
formatting.format (type: fun(entry: cmp.Entry, vim_item: vim.CompletedItem): vim.CompletedItem)	plugged/nvim-cmp/README.md	/^#### formatting.format (type: fun(entry: cmp.Entry, vim_item: vim.CompletedItem): vim.CompletedI/;"	t	chapter:Configuration options
fortls	plugged/nvim-lspconfig/CONFIG.md	/^## fortls$/;"	s	chapter:Configurations
fortran	plugged/nvim-treesitter/lockfile.json	/^  "fortran": {$/;"	o
from_nodes	plugged/nvim-treesitter/lua/nvim-treesitter/tsrange.lua	/^function TSRange.from_nodes(buf, start_node, end_node)$/;"	f	unknown:TSRange
from_table	plugged/nvim-treesitter/lua/nvim-treesitter/tsrange.lua	/^function TSRange.from_table(buf, range)$/;"	f	unknown:TSRange
fsautocomplete	plugged/nvim-lspconfig/CONFIG.md	/^## fsautocomplete$/;"	s	chapter:Configurations
ft	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def ft(self):  # pylint:disable=invalid-name$/;"	m	class:SnippetUtil
ft_to_lang	plugged/nvim-treesitter/lua/nvim-treesitter/parsers.lua	/^function M.ft_to_lang(ft)$/;"	f	unknown:M
fugitive	plugged/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive$/;"	a
fugitive#Autowrite	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Autowrite() abort$/;"	f
fugitive#BlameComplete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#BlameComplete(A, L, P) abort$/;"	f
fugitive#BlameFileType	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#BlameFileType() abort$/;"	f
fugitive#BlameSyntax	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#BlameSyntax() abort$/;"	f
fugitive#BrowseCommand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#BrowseCommand(line1, count, range, bang, mods, arg, ...) abort$/;"	f
fugitive#BufReadCmd	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#BufReadCmd(...) abort$/;"	f
fugitive#BufReadStatus	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#BufReadStatus(...) abort$/;"	f
fugitive#BufWriteCmd	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#BufWriteCmd(...) abort$/;"	f
fugitive#CanDiffoff	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#CanDiffoff(buf) abort$/;"	f
fugitive#CanPty	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#CanPty() abort$/;"	f
fugitive#Cd	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Cd(path, ...) abort$/;"	f
fugitive#CdComplete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#CdComplete(A, L, P) abort$/;"	f
fugitive#Cfile	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Cfile() abort$/;"	f
fugitive#Command	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Command(line1, line2, range, bang, mods, arg) abort$/;"	f
fugitive#CommitComplete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#CommitComplete(A, L, P, ...) abort$/;"	f
fugitive#CommonDir	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#CommonDir(dir) abort$/;"	f
fugitive#Complete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Complete(lead, ...) abort$/;"	f
fugitive#CompleteForWorkingDir	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#CompleteForWorkingDir(A, L, P, ...) abort$/;"	f
fugitive#CompleteObject	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#CompleteObject(base, ...) abort$/;"	f
fugitive#CompletePath	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#CompletePath(base, ...) abort$/;"	f
fugitive#Config	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Config(...) abort$/;"	f
fugitive#ConfigGetAll	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#ConfigGetAll(name, ...) abort$/;"	f
fugitive#ConfigGetRegexp	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#ConfigGetRegexp(pattern, ...) abort$/;"	f
fugitive#Cwindow	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Cwindow() abort$/;"	f
fugitive#DeleteCommand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#DeleteCommand(line1, line2, range, bang, mods, arg, ...) abort$/;"	f
fugitive#DidChange	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#DidChange(...) abort$/;"	f
fugitive#DiffClose	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#DiffClose() abort$/;"	f
fugitive#Diffsplit	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Diffsplit(autodir, keepfocus, mods, arg, ...) abort$/;"	f
fugitive#EditComplete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#EditComplete(A, L, P) abort$/;"	f
fugitive#EfmDir	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#EfmDir(...) abort$/;"	f
fugitive#Execute	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Execute(...) abort$/;"	f
fugitive#Expand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Expand(object) abort$/;"	f
fugitive#ExpireConfig	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#ExpireConfig(...) abort$/;"	f
fugitive#FetchComplete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#FetchComplete(A, L, P, ...) abort$/;"	f
fugitive#FileReadCmd	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#FileReadCmd(...) abort$/;"	f
fugitive#FileWriteCmd	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#FileWriteCmd(...) abort$/;"	f
fugitive#Find	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Find(object, ...) abort$/;"	f
fugitive#Foldtext	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Foldtext() abort$/;"	f
fugitive#GX	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#GX() abort$/;"	f
fugitive#GitVersion	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#GitVersion(...) abort$/;"	f
fugitive#GrepCommand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#GrepCommand(line1, line2, range, bang, mods, arg) abort$/;"	f
fugitive#GrepComplete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#GrepComplete(A, L, P) abort$/;"	f
fugitive#Head	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Head(...) abort$/;"	f
fugitive#Init	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Init() abort$/;"	f
fugitive#LogCommand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#LogCommand(line1, count, range, bang, mods, args, type) abort$/;"	f
fugitive#LogComplete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#LogComplete(A, L, P) abort$/;"	f
fugitive#MapCfile	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#MapCfile(...) abort$/;"	f
fugitive#MapJumps	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#MapJumps(...) abort$/;"	f
fugitive#MergeComplete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#MergeComplete(A, L, P, ...) abort$/;"	f
fugitive#MessageCfile	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#MessageCfile() abort$/;"	f
fugitive#MoveCommand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#MoveCommand(line1, line2, range, bang, mods, arg, ...) abort$/;"	f
fugitive#Object	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Object(...) abort$/;"	f
fugitive#Open	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Open(cmd, bang, mods, arg, ...) abort$/;"	f
fugitive#PagerFor	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#PagerFor(argv, ...) abort$/;"	f
fugitive#Path	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Path(url, ...) abort$/;"	f
fugitive#PathComplete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#PathComplete(...) abort$/;"	f
fugitive#PorcelainCfile	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#PorcelainCfile() abort$/;"	f
fugitive#Prepare	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Prepare(...) abort$/;"	f
fugitive#PrepareDirEnvGitFlagsArgs	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#PrepareDirEnvGitFlagsArgs(...) abort$/;"	f
fugitive#PrepareJob	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#PrepareJob(...) abort$/;"	f
fugitive#PullComplete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#PullComplete(A, L, P, ...) abort$/;"	f
fugitive#PushComplete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#PushComplete(A, L, P, ...) abort$/;"	f
fugitive#ReadCommand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#ReadCommand(line1, count, range, bang, mods, arg, ...) abort$/;"	f
fugitive#ReadComplete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#ReadComplete(A, L, P) abort$/;"	f
fugitive#Real	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Real(url) abort$/;"	f
fugitive#RebaseComplete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#RebaseComplete(A, L, P, ...) abort$/;"	f
fugitive#ReloadStatus	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#ReloadStatus(...) abort$/;"	f
fugitive#Remote	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Remote(...) abort$/;"	f
fugitive#RemoteHttpHeaders	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#RemoteHttpHeaders(remote) abort$/;"	f
fugitive#RemoteUrl	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#RemoteUrl(...) abort$/;"	f
fugitive#RemoveCommand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#RemoveCommand(line1, line2, range, bang, mods, arg, ...) abort$/;"	f
fugitive#RenameCommand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#RenameCommand(line1, line2, range, bang, mods, arg, ...) abort$/;"	f
fugitive#RenameComplete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#RenameComplete(A,L,P) abort$/;"	f
fugitive#Result	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Result(...) abort$/;"	f
fugitive#Resume	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Resume() abort$/;"	f
fugitive#RevParse	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#RevParse(rev, ...) abort$/;"	f
fugitive#RevertComplete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#RevertComplete(A, L, P, ...) abort$/;"	f
fugitive#ShellCommand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#ShellCommand(...) abort$/;"	f
fugitive#SourceCmd	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#SourceCmd(...) abort$/;"	f
fugitive#SshConfig	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#SshConfig(host, ...) abort$/;"	f
fugitive#SshHostAlias	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#SshHostAlias(authority) abort$/;"	f
fugitive#Statusline	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Statusline(...) abort$/;"	f
fugitive#Wait	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Wait(job_or_jobs, ...) abort$/;"	f
fugitive#WqCommand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#WqCommand(...) abort$/;"	f
fugitive#WriteCommand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#WriteCommand(line1, line2, range, bang, mods, arg, ...) abort$/;"	f
fugitive#buffer	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#buffer(...) abort$/;"	f
fugitive#delete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#delete(url, ...) abort$/;"	f
fugitive#detect	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#detect(path) abort$/;"	f
fugitive#extract_git_dir	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#extract_git_dir(path) abort$/;"	f
fugitive#filereadable	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#filereadable(url) abort$/;"	f
fugitive#filewritable	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#filewritable(url) abort$/;"	f
fugitive#foldtext	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#foldtext() abort$/;"	f
fugitive#getfperm	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#getfperm(url) abort$/;"	f
fugitive#getfsize	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#getfsize(url) abort$/;"	f
fugitive#getftime	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#getftime(url) abort$/;"	f
fugitive#getftype	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#getftype(url) abort$/;"	f
fugitive#glob	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#glob(url, ...) abort$/;"	f
fugitive#head	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#head(...) abort$/;"	f
fugitive#is_git_dir	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#is_git_dir(path) abort$/;"	f
fugitive#isdirectory	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#isdirectory(url) abort$/;"	f
fugitive#readfile	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#readfile(url, ...) abort$/;"	f
fugitive#repo	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#repo(...) abort$/;"	f
fugitive#resolve	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#resolve(url) abort$/;"	f
fugitive#setfperm	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#setfperm(url, perm) abort$/;"	f
fugitive#simplify	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#simplify(url) abort$/;"	f
fugitive#statusline	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#statusline(...) abort$/;"	f
fugitive#writefile	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#writefile(lines, url, ...) abort$/;"	f
fugitive.vim	plugged/vim-fugitive/README.markdown	/^# fugitive.vim$/;"	c
fugitive_blame	plugged/vim-fugitive/autoload/fugitive.vim	/^augroup fugitive_blame$/;"	a
fugitive_diff	plugged/vim-fugitive/autoload/fugitive.vim	/^augroup fugitive_diff$/;"	a
fugitive_dummy_events	plugged/vim-fugitive/autoload/fugitive.vim	/^augroup fugitive_dummy_events$/;"	a
fugitive_job	plugged/vim-fugitive/autoload/fugitive.vim	/^augroup fugitive_job$/;"	a
fugitive_status	plugged/vim-fugitive/autoload/fugitive.vim	/^augroup fugitive_status$/;"	a
fugitive_temp	plugged/vim-fugitive/autoload/fugitive.vim	/^augroup fugitive_temp$/;"	a
func	plugged/LuaSnip/lua/luasnip/extras/init.lua	/^	local function func(args, snip)$/;"	f
func	plugged/nvim-cmp/lua/cmp/utils/binary_spec.lua	/^    local func = function(a, b)$/;"	f
function_name:	plugged/nvim-treesitter/queries/commonlisp/highlights.scm	/^  function_name: (_) @function)$/;"	f
function_name:	plugged/nvim-treesitter/queries/commonlisp/locals.scm	/^  function_name: (sym_lit) @definition.function (#set! definition.function.scope "parent"))$/;"	f
fuzzy	plugged/nvim-cmp/lua/cmp/matcher.lua	/^matcher.fuzzy = function(input, word, matches)$/;"	f	unknown:matcher
g:	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^            let g:[newname] = g:[key]$/;"	v
g:AutoPairs	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairs = {'(':')', '[':']', '{':'}',"'":"'",'"':'"', '```':'```', '"""':'"""', "'''":/;"	v
g:AutoPairsCenterLine	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsCenterLine = 1$/;"	v
g:AutoPairsFlyMode	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsFlyMode = 0$/;"	v
g:AutoPairsLoaded	plugged/auto-pairs/plugin/auto-pairs.vim	/^let g:AutoPairsLoaded = 1$/;"	v
g:AutoPairsMapBS	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsMapBS = 1$/;"	v
g:AutoPairsMapCR	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsMapCR = 1$/;"	v
g:AutoPairsMapCh	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsMapCh = 1$/;"	v
g:AutoPairsMapSpace	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsMapSpace = 1$/;"	v
g:AutoPairsMoveCharacter	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsMoveCharacter = "()[]{}\\"'"$/;"	v
g:AutoPairsMultilineClose	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsMultilineClose = 1$/;"	v
g:AutoPairsShortcutBackInsert	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsShortcutBackInsert = '<M-b>'$/;"	v
g:AutoPairsShortcutFastWrap	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsShortcutFastWrap = '<M-e>'$/;"	v
g:AutoPairsShortcutJump	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsShortcutJump = '<M-n>'$/;"	v
g:AutoPairsShortcutToggle	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsShortcutToggle = '<M-p>'$/;"	v
g:AutoPairsSmartQuotes	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsSmartQuotes = 1$/;"	v
g:AutoPairsWildClosedPair	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsWildClosedPair = ''$/;"	v
g:DevIconsEnableFolderExtensionPatternMatching	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^  let g:DevIconsEnableFolderExtensionPatternMatching = 0$/;"	v
g:DevIconsEnableFolderPatternMatching	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^  let g:DevIconsEnableFolderPatternMatching = 1$/;"	v
g:DevIconsEnableFoldersOpenClose	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^  let g:DevIconsEnableFoldersOpenClose = 0$/;"	v
g:DevIconsEnableNERDTreeRedraw	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^    let g:DevIconsEnableNERDTreeRedraw = 0$/;"	v
g:DevIconsEnableNERDTreeRedraw	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^    let g:DevIconsEnableNERDTreeRedraw = 1$/;"	v
g:NERDDelimiterMap	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^let g:NERDDelimiterMap = s:delimiterMap$/;"	v
g:NERDTree	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^let g:NERDTree = s:NERDTree$/;"	v
g:NERDTreeAutoCenter	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeAutoCenter            = get(g:, 'NERDTreeAutoCenter',            1)$/;"	v
g:NERDTreeAutoCenterThreshold	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeAutoCenterThreshold   = get(g:, 'NERDTreeAutoCenterThreshold',   3)$/;"	v
g:NERDTreeAutoDeleteBuffer	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^    let g:NERDTreeAutoDeleteBuffer = 0$/;"	v
g:NERDTreeBookmark	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^let g:NERDTreeBookmark = s:Bookmark$/;"	v
g:NERDTreeBookmarks	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^        let g:NERDTreeBookmarks = []$/;"	v
g:NERDTreeBookmarksFile	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeBookmarksFile         = get(g:, 'NERDTreeBookmarksFile',         expand('$HOME') ./;"	v
g:NERDTreeBookmarksSort	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeBookmarksSort         = get(g:, 'NERDTreeBookmarksSort',         1)$/;"	v
g:NERDTreeCascadeOpenSingleChildDir	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeCascadeOpenSingleChildDir = get(g:, 'NERDTreeCascadeOpenSingleChildDir', 1)$/;"	v
g:NERDTreeCascadeSingleChildDir	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeCascadeSingleChildDir     = get(g:, 'NERDTreeCascadeSingleChildDir',     1)$/;"	v
g:NERDTreeCaseSensitiveSort	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeCaseSensitiveSort     = get(g:, 'NERDTreeCaseSensitiveSort',     0)$/;"	v
g:NERDTreeChDirMode	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeChDirMode             = get(g:, 'NERDTreeChDirMode',             0)$/;"	v
g:NERDTreeCopyCmd	plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeCopyCmd      = get(g:, 'NERDTreeCopyCmd',      'cp -r ')$/;"	v
g:NERDTreeCopyDirCmd	plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeCopyDirCmd   = get(g:, 'NERDTreeCopyDirCmd',   'xcopy \/s \/e \/i \/y \/q ')$/;"	v
g:NERDTreeCopyFileCmd	plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeCopyFileCmd  = get(g:, 'NERDTreeCopyFileCmd',  'copy \/y ')$/;"	v
g:NERDTreeCreatePrefix	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeCreatePrefix          = get(g:, 'NERDTreeCreatePrefix',          'silent')$/;"	v
g:NERDTreeCreator	plugged/nerdtree/lib/nerdtree/creator.vim	/^let g:NERDTreeCreator = s:Creator$/;"	v
g:NERDTreeCustomOpenArgs	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^        let g:NERDTreeCustomOpenArgs = get(g:, 'NERDTreeCustomOpenArgs', {})$/;"	v
g:NERDTreeCustomOpenArgs	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^        let g:NERDTreeCustomOpenArgs = l:defaultOpenArgs$/;"	v
g:NERDTreeDirArrowCollapsible	plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeDirArrowCollapsible = get(g:, 'NERDTreeDirArrowCollapsible', '~')$/;"	v
g:NERDTreeDirArrowCollapsible	plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeDirArrowCollapsible = get(g:, 'NERDTreeDirArrowCollapsible', '▾')$/;"	v
g:NERDTreeDirArrowExpandable	plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeDirArrowExpandable  = get(g:, 'NERDTreeDirArrowExpandable',  '+')$/;"	v
g:NERDTreeDirArrowExpandable	plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeDirArrowExpandable  = get(g:, 'NERDTreeDirArrowExpandable',  '▸')$/;"	v
g:NERDTreeDirNode	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^let g:NERDTreeDirNode = s:TreeDirNode$/;"	v
g:NERDTreeEvent	plugged/nerdtree/lib/nerdtree/event.vim	/^let g:NERDTreeEvent = s:Event$/;"	v
g:NERDTreeExactMatchHighlightColor	plugged/vim-nerdtree-syntax-highlight/after/syntax/nerdtree.vim	/^    let g:NERDTreeExactMatchHighlightColor[key] = val$/;"	v
g:NERDTreeExactMatchHighlightColor	plugged/vim-nerdtree-syntax-highlight/after/syntax/nerdtree.vim	/^  let g:NERDTreeExactMatchHighlightColor = {}$/;"	v
g:NERDTreeExtensionHighlightColor	plugged/vim-nerdtree-syntax-highlight/after/syntax/nerdtree.vim	/^    let g:NERDTreeExtensionHighlightColor[key] = val$/;"	v
g:NERDTreeExtensionHighlightColor	plugged/vim-nerdtree-syntax-highlight/after/syntax/nerdtree.vim	/^  let g:NERDTreeExtensionHighlightColor = {}$/;"	v
g:NERDTreeFileNode	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^let g:NERDTreeFileNode = s:TreeFileNode$/;"	v
g:NERDTreeFlagSet	plugged/nerdtree/lib/nerdtree/flag_set.vim	/^let g:NERDTreeFlagSet = s:FlagSet$/;"	v
g:NERDTreeGitStatusIndicatorMapCustom	plugged/nerdtree-git-plugin/tests/test_all.vim	/^    let g:NERDTreeGitStatusIndicatorMapCustom = {'Untracked': '~'}$/;"	v
g:NERDTreeGitStatusShowIgnored	init.vim	/^let g:NERDTreeGitStatusShowIgnored = 1$/;"	v
g:NERDTreeGlyphReadOnly	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeGlyphReadOnly = get(g:, 'NERDTreeGlyphReadOnly', 'RO')$/;"	v
g:NERDTreeHighlightCursorline	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeHighlightCursorline   = get(g:, 'NERDTreeHighlightCursorline',   1)$/;"	v
g:NERDTreeHijackNetrw	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeHijackNetrw           = get(g:, 'NERDTreeHijackNetrw',           1)$/;"	v
g:NERDTreeHijackNetrw	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^  let g:NERDTreeHijackNetrw = 0$/;"	v
g:NERDTreeIgnore	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeIgnore                = get(g:, 'NERDTreeIgnore',                ['\\~$'])$/;"	v
g:NERDTreeIndicatorMapCustomm	init.vim	/^let g:NERDTreeIndicatorMapCustomm = {$/;"	v
g:NERDTreeInvalidBookmarks	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^        let g:NERDTreeInvalidBookmarks = []$/;"	v
g:NERDTreeKeyMap	plugged/nerdtree/lib/nerdtree/key_map.vim	/^let g:NERDTreeKeyMap = s:KeyMap$/;"	v
g:NERDTreeMapActivateNode	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapActivateNode    = get(g:, 'NERDTreeMapActivateNode',    'o')$/;"	v
g:NERDTreeMapCWD	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapCWD             = get(g:, 'NERDTreeMapCWD',             'CD')$/;"	v
g:NERDTreeMapChangeRoot	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapChangeRoot      = get(g:, 'NERDTreeMapChangeRoot',      'C')$/;"	v
g:NERDTreeMapChdir	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapChdir           = get(g:, 'NERDTreeMapChdir',           'cd')$/;"	v
g:NERDTreeMapCloseChildren	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapCloseChildren   = get(g:, 'NERDTreeMapCloseChildren',   'X')$/;"	v
g:NERDTreeMapCloseDir	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapCloseDir        = get(g:, 'NERDTreeMapCloseDir',        'x')$/;"	v
g:NERDTreeMapCustomOpen	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapCustomOpen      = get(g:, 'NERDTreeMapCustomOpen',      '<CR>')$/;"	v
g:NERDTreeMapDeleteBookmark	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapDeleteBookmark  = get(g:, 'NERDTreeMapDeleteBookmark',  'D')$/;"	v
g:NERDTreeMapHelp	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapHelp            = get(g:, 'NERDTreeMapHelp',            '?')$/;"	v
g:NERDTreeMapJumpFirstChild	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapJumpFirstChild  = get(g:, 'NERDTreeMapJumpFirstChild',  'K')$/;"	v
g:NERDTreeMapJumpLastChild	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapJumpLastChild   = get(g:, 'NERDTreeMapJumpLastChild',   'J')$/;"	v
g:NERDTreeMapJumpNextSibling	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapJumpNextSibling = get(g:, 'NERDTreeMapJumpNextSibling', '<C-j>')$/;"	v
g:NERDTreeMapJumpParent	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapJumpParent      = get(g:, 'NERDTreeMapJumpParent',      'p')$/;"	v
g:NERDTreeMapJumpPrevSibling	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapJumpPrevSibling = get(g:, 'NERDTreeMapJumpPrevSibling', '<C-k>')$/;"	v
g:NERDTreeMapJumpRoot	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapJumpRoot        = get(g:, 'NERDTreeMapJumpRoot',        'P')$/;"	v
g:NERDTreeMapMenu	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapMenu            = get(g:, 'NERDTreeMapMenu',            'm')$/;"	v
g:NERDTreeMapOpenExpl	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapOpenExpl        = get(g:, 'NERDTreeMapOpenExpl',        'e')$/;"	v
g:NERDTreeMapOpenInTab	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapOpenInTab       = get(g:, 'NERDTreeMapOpenInTab',       't')$/;"	v
g:NERDTreeMapOpenInTabSilent	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapOpenInTabSilent = get(g:, 'NERDTreeMapOpenInTabSilent', 'T')$/;"	v
g:NERDTreeMapOpenRecursively	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapOpenRecursively = get(g:, 'NERDTreeMapOpenRecursively', 'O')$/;"	v
g:NERDTreeMapOpenSplit	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapOpenSplit       = get(g:, 'NERDTreeMapOpenSplit',       'i')$/;"	v
g:NERDTreeMapOpenVSplit	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapOpenVSplit      = get(g:, 'NERDTreeMapOpenVSplit',      's')$/;"	v
g:NERDTreeMapPreview	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapPreview         = get(g:, 'NERDTreeMapPreview',         'g'.NERDTreeMapActivate/;"	v
g:NERDTreeMapPreviewSplit	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapPreviewSplit    = get(g:, 'NERDTreeMapPreviewSplit',    'g'.NERDTreeMapOpenSpli/;"	v
g:NERDTreeMapPreviewVSplit	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapPreviewVSplit   = get(g:, 'NERDTreeMapPreviewVSplit',   'g'.NERDTreeMapOpenVSpl/;"	v
g:NERDTreeMapQuit	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapQuit            = get(g:, 'NERDTreeMapQuit',            'q')$/;"	v
g:NERDTreeMapRefresh	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapRefresh         = get(g:, 'NERDTreeMapRefresh',         'r')$/;"	v
g:NERDTreeMapRefreshRoot	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapRefreshRoot     = get(g:, 'NERDTreeMapRefreshRoot',     'R')$/;"	v
g:NERDTreeMapToggleBookmarks	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapToggleBookmarks = get(g:, 'NERDTreeMapToggleBookmarks', 'B')$/;"	v
g:NERDTreeMapToggleFiles	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapToggleFiles     = get(g:, 'NERDTreeMapToggleFiles',     'F')$/;"	v
g:NERDTreeMapToggleFilters	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapToggleFilters   = get(g:, 'NERDTreeMapToggleFilters',   'f')$/;"	v
g:NERDTreeMapToggleHidden	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapToggleHidden    = get(g:, 'NERDTreeMapToggleHidden',    'I')$/;"	v
g:NERDTreeMapToggleZoom	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapToggleZoom      = get(g:, 'NERDTreeMapToggleZoom',      'A')$/;"	v
g:NERDTreeMapUpdir	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapUpdir           = get(g:, 'NERDTreeMapUpdir',           'u')$/;"	v
g:NERDTreeMapUpdirKeepOpen	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapUpdirKeepOpen   = get(g:, 'NERDTreeMapUpdirKeepOpen',   'U')$/;"	v
g:NERDTreeMarkBookmarks	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMarkBookmarks         = get(g:, 'NERDTreeMarkBookmarks',         1)$/;"	v
g:NERDTreeMenuController	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^let g:NERDTreeMenuController = s:MenuController$/;"	v
g:NERDTreeMenuDown	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMenuDown           = get(g:, 'NERDTreeMenuDown',           'j')$/;"	v
g:NERDTreeMenuItem	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^let g:NERDTreeMenuItem = s:MenuItem$/;"	v
g:NERDTreeMenuUp	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMenuUp             = get(g:, 'NERDTreeMenuUp',             'k')$/;"	v
g:NERDTreeMinimalMenu	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMinimalMenu           = get(g:, 'NERDTreeMinimalMenu',           0)$/;"	v
g:NERDTreeMinimalUI	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMinimalUI             = get(g:, 'NERDTreeMinimalUI',             0)$/;"	v
g:NERDTreeMouseMode	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMouseMode             = get(g:, 'NERDTreeMouseMode',             1)$/;"	v
g:NERDTreeNaturalSort	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeNaturalSort           = get(g:, 'NERDTreeNaturalSort',           0)$/;"	v
g:NERDTreeNodeDelimiter	plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeNodeDelimiter = get(g:, 'NERDTreeNodeDelimiter', "\\u00a0")$/;"	v
g:NERDTreeNodeDelimiter	plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeNodeDelimiter = get(g:, 'NERDTreeNodeDelimiter', "\\u00b7")$/;"	v
g:NERDTreeNodeDelimiter	plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeNodeDelimiter = get(g:, 'NERDTreeNodeDelimiter', "\\x07")$/;"	v
g:NERDTreeNotificationThreshold	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeNotificationThreshold = get(g:, 'NERDTreeNotificationThreshold', 100)$/;"	v
g:NERDTreeOldSortOrder	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^    let g:NERDTreeOldSortOrder = g:NERDTreeSortOrder$/;"	v
g:NERDTreeOldSortOrder	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^                let g:NERDTreeOldSortOrder = []$/;"	v
g:NERDTreeOldSortOrder	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^        let g:NERDTreeOldSortOrder = []$/;"	v
g:NERDTreeOldSortOrder	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeOldSortOrder = []$/;"	v
g:NERDTreeOpener	plugged/nerdtree/lib/nerdtree/opener.vim	/^let g:NERDTreeOpener = s:Opener$/;"	v
g:NERDTreePath	plugged/nerdtree/lib/nerdtree/path.vim	/^let g:NERDTreePath = s:Path$/;"	v
g:NERDTreePathNotifier	plugged/nerdtree/lib/nerdtree/notifier.vim	/^let g:NERDTreePathNotifier = deepcopy(s:Notifier)$/;"	v
g:NERDTreePatternMatchHighlightColor	plugged/vim-nerdtree-syntax-highlight/after/syntax/nerdtree.vim	/^    let g:NERDTreePatternMatchHighlightColor[key] = val$/;"	v
g:NERDTreePatternMatchHighlightColor	plugged/vim-nerdtree-syntax-highlight/after/syntax/nerdtree.vim	/^  let g:NERDTreePatternMatchHighlightColor = {}$/;"	v
g:NERDTreeQuitOnOpen	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeQuitOnOpen            = get(g:, 'NERDTreeQuitOnOpen',            0)$/;"	v
g:NERDTreeRemoveDirCmd	plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeRemoveDirCmd = get(g:, 'NERDTreeRemoveDirCmd', 'rm -rf ')$/;"	v
g:NERDTreeRemoveDirCmd	plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeRemoveDirCmd = get(g:, 'NERDTreeRemoveDirCmd', 'rmdir \/s \/q ')$/;"	v
g:NERDTreeRespectWildIgnore	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeRespectWildIgnore     = get(g:, 'NERDTreeRespectWildIgnore',     0)$/;"	v
g:NERDTreeShowBookmarks	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeShowBookmarks         = get(g:, 'NERDTreeShowBookmarks',         0)$/;"	v
g:NERDTreeShowFiles	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeShowFiles             = get(g:, 'NERDTreeShowFiles',             1)$/;"	v
g:NERDTreeShowHidden	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeShowHidden            = get(g:, 'NERDTreeShowHidden',            0)$/;"	v
g:NERDTreeShowLineNumbers	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeShowLineNumbers       = get(g:, 'NERDTreeShowLineNumbers',       0)$/;"	v
g:NERDTreeSortDirs	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeSortDirs              = get(g:, 'NERDTreeSortDirs',              1)$/;"	v
g:NERDTreeSortHiddenFirst	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeSortHiddenFirst       = get(g:, 'NERDTreeSortHiddenFirst',       1)$/;"	v
g:NERDTreeSortOrder	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeSortOrder    = get(g:, 'NERDTreeSortOrder', ['\\\/$', '*', '\\.swp$', '\\.bak$', '/;"	v
g:NERDTreeStatusline	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeStatusline = get(g:, 'NERDTreeStatusline', "%{exists('b:NERDTree')?b:NERDTree.root/;"	v
g:NERDTreeSyntaxEnabledExactMatches	plugged/vim-nerdtree-syntax-highlight/after/syntax/nerdtree.vim	/^  let g:NERDTreeSyntaxEnabledExactMatches = []$/;"	v
g:NERDTreeSyntaxEnabledExtensions	plugged/vim-nerdtree-syntax-highlight/after/syntax/nerdtree.vim	/^  let g:NERDTreeSyntaxEnabledExtensions = []$/;"	v
g:NERDTreeUI	plugged/nerdtree/lib/nerdtree/ui.vim	/^let g:NERDTreeUI = s:UI$/;"	v
g:NERDTreeUseTCD	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeUseTCD                = get(g:, 'NERDTreeUseTCD',                0)$/;"	v
g:NERDTreeWinPos	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeWinPos  = get(g:, 'NERDTreeWinPos', 'left')$/;"	v
g:NERDTreeWinSize	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeWinSize = get(g:, 'NERDTreeWinSize', 31)$/;"	v
g:NTGitWorkdir	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^    let g:NTGitWorkdir = split(join(a:job.chunks, ''), "\\n")[0]$/;"	v
g:UltiSnipsEditSplit	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsEditSplit = 'normal'$/;"	v
g:UltiSnipsEditSplit	plugged/ultisnips/docker/docker_vimrc.vim	/^let g:UltiSnipsEditSplit="vertical"$/;"	v
g:UltiSnipsEnableSnipMate	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsEnableSnipMate = 1$/;"	v
g:UltiSnipsExpandTrigger	init.vim	/^let g:UltiSnipsExpandTrigger = "<tab>"$/;"	v
g:UltiSnipsExpandTrigger	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsExpandTrigger = "<tab>"$/;"	v
g:UltiSnipsExpandTrigger	plugged/ultisnips/docker/docker_vimrc.vim	/^let g:UltiSnipsExpandTrigger="<tab>"$/;"	v
g:UltiSnipsJumpBackwardTrigger	init.vim	/^let g:UltiSnipsJumpBackwardTrigger = "<s-tab>"$/;"	v
g:UltiSnipsJumpBackwardTrigger	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsJumpBackwardTrigger = "<c-k>"$/;"	v
g:UltiSnipsJumpBackwardTrigger	plugged/ultisnips/docker/docker_vimrc.vim	/^let g:UltiSnipsJumpBackwardTrigger="1"$/;"	v
g:UltiSnipsJumpForwardTrigger	init.vim	/^let g:UltiSnipsJumpForwardTrigger = "<tab>"$/;"	v
g:UltiSnipsJumpForwardTrigger	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsJumpForwardTrigger = "<c-j>"$/;"	v
g:UltiSnipsJumpForwardTrigger	plugged/ultisnips/docker/docker_vimrc.vim	/^let g:UltiSnipsJumpForwardTrigger="2"$/;"	v
g:UltiSnipsListSnippets	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsListSnippets = "<c-tab>"$/;"	v
g:UltiSnipsListSnippets	plugged/ultisnips/docker/docker_vimrc.vim	/^let g:UltiSnipsListSnippets="9"$/;"	v
g:UltiSnipsMappingsToIgnore	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsMappingsToIgnore = []$/;"	v
g:UltiSnipsRemoveSelectModeMappings	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsRemoveSelectModeMappings = 1$/;"	v
g:UltiSnipsSnippetDirectories	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsSnippetDirectories = [ "UltiSnips" ]$/;"	v
g:WebDevIconsUnicodeDecorateFileNodesExactSymbols	plugged/vim-devicons/plugin/webdevicons.vim	/^      let g:WebDevIconsUnicodeDecorateFileNodesExactSymbols[key] = val$/;"	v
g:WebDevIconsUnicodeDecorateFileNodesExactSymbols	plugged/vim-devicons/plugin/webdevicons.vim	/^    let g:WebDevIconsUnicodeDecorateFileNodesExactSymbols = {}$/;"	v
g:WebDevIconsUnicodeDecorateFileNodesExtensionSymbols	plugged/vim-devicons/plugin/webdevicons.vim	/^      let g:WebDevIconsUnicodeDecorateFileNodesExtensionSymbols[key] = val$/;"	v
g:WebDevIconsUnicodeDecorateFileNodesExtensionSymbols	plugged/vim-devicons/plugin/webdevicons.vim	/^    let g:WebDevIconsUnicodeDecorateFileNodesExtensionSymbols = {}$/;"	v
g:WebDevIconsUnicodeDecorateFileNodesPatternSymbols	plugged/vim-devicons/plugin/webdevicons.vim	/^      let g:WebDevIconsUnicodeDecorateFileNodesPatternSymbols[key] = val$/;"	v
g:WebDevIconsUnicodeDecorateFileNodesPatternSymbols	plugged/vim-devicons/plugin/webdevicons.vim	/^    let g:WebDevIconsUnicodeDecorateFileNodesPatternSymbols = {}$/;"	v
g:___VS_Vim_Buffer_id	plugged/nvim-cmp/autoload/vital/_cmp/VS/Vim/Buffer.vim	/^  let g:___VS_Vim_Buffer_id += 1$/;"	v
g:___VS_Vim_Buffer_id	plugged/nvim-cmp/autoload/vital/_cmp/VS/Vim/Buffer.vim	/^let g:___VS_Vim_Buffer_id = get(g:, '___VS_Vim_Buffer_id', 0)$/;"	v
g:__gutentags_vim_is_leaving	plugged/vim-gutentags/autoload/gutentags.vim	/^    let g:__gutentags_vim_is_leaving = 1$/;"	v
g:__gutentags_vim_is_leaving	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:__gutentags_vim_is_leaving = 0$/;"	v
g:_fugitive_last_job	plugged/vim-fugitive/autoload/fugitive.vim	/^  let g:_fugitive_last_job = a:state$/;"	v
g:_webdevicons_airline_orig_formatter	plugged/vim-devicons/plugin/webdevicons.vim	/^  let g:_webdevicons_airline_orig_formatter = get(g:, 'airline#extensions#tabline#formatter', 'd/;"	v
g:airline#extensions#tabline#formatter	plugged/vim-devicons/plugin/webdevicons.vim	/^  let g:airline#extensions#tabline#formatter = 'webdevicons'$/;"	v
g:airline#themes#neodark#palette	plugged/neodark.vim/autoload/airline/themes/neodark.vim	/^        let g:airline#themes#neodark#palette.ctrlp = airline#extensions#ctrlp#generate_color_map/;"	v
g:airline#themes#neodark#palette	plugged/neodark.vim/autoload/airline/themes/neodark.vim	/^    let g:airline#themes#neodark#palette.accents = {$/;"	v
g:airline#themes#neodark#palette	plugged/neodark.vim/autoload/airline/themes/neodark.vim	/^    let g:airline#themes#neodark#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA/;"	v
g:airline#themes#neodark#palette	plugged/neodark.vim/autoload/airline/themes/neodark.vim	/^    let g:airline#themes#neodark#palette.inactive_modified = g:airline#themes#neodark#palette.no/;"	v
g:airline#themes#neodark#palette	plugged/neodark.vim/autoload/airline/themes/neodark.vim	/^    let g:airline#themes#neodark#palette.insert = airline#themes#generate_color_map(s:I1, s:N2, /;"	v
g:airline#themes#neodark#palette	plugged/neodark.vim/autoload/airline/themes/neodark.vim	/^    let g:airline#themes#neodark#palette.insert_modified = g:airline#themes#neodark#palette.norm/;"	v
g:airline#themes#neodark#palette	plugged/neodark.vim/autoload/airline/themes/neodark.vim	/^    let g:airline#themes#neodark#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, /;"	v
g:airline#themes#neodark#palette	plugged/neodark.vim/autoload/airline/themes/neodark.vim	/^    let g:airline#themes#neodark#palette.normal_modified = {$/;"	v
g:airline#themes#neodark#palette	plugged/neodark.vim/autoload/airline/themes/neodark.vim	/^    let g:airline#themes#neodark#palette.replace = airline#themes#generate_color_map(s:R1, s:N2,/;"	v
g:airline#themes#neodark#palette	plugged/neodark.vim/autoload/airline/themes/neodark.vim	/^    let g:airline#themes#neodark#palette.replace_modified = g:airline#themes#neodark#palette.nor/;"	v
g:airline#themes#neodark#palette	plugged/neodark.vim/autoload/airline/themes/neodark.vim	/^    let g:airline#themes#neodark#palette.visual = airline#themes#generate_color_map(s:V1, s:N2, /;"	v
g:airline#themes#neodark#palette	plugged/neodark.vim/autoload/airline/themes/neodark.vim	/^    let g:airline#themes#neodark#palette.visual_modified = g:airline#themes#neodark#palette.norm/;"	v
g:airline#themes#neodark#palette	plugged/neodark.vim/autoload/airline/themes/neodark.vim	/^let g:airline#themes#neodark#palette = {}$/;"	v
g:airline#themes#one#palette	plugged/vim-one/autoload/airline/themes/one.vim	/^  let g:airline#themes#one#palette.accents = {$/;"	v
g:airline#themes#one#palette	plugged/vim-one/autoload/airline/themes/one.vim	/^  let g:airline#themes#one#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA/;"	v
g:airline#themes#one#palette	plugged/vim-one/autoload/airline/themes/one.vim	/^  let g:airline#themes#one#palette.inactive_modified = {$/;"	v
g:airline#themes#one#palette	plugged/vim-one/autoload/airline/themes/one.vim	/^  let g:airline#themes#one#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#one#palette	plugged/vim-one/autoload/airline/themes/one.vim	/^  let g:airline#themes#one#palette.insert_modified = g:airline#themes#one#palette.normal_modifie/;"	v
g:airline#themes#one#palette	plugged/vim-one/autoload/airline/themes/one.vim	/^  let g:airline#themes#one#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#one#palette	plugged/vim-one/autoload/airline/themes/one.vim	/^  let g:airline#themes#one#palette.normal_modified = {$/;"	v
g:airline#themes#one#palette	plugged/vim-one/autoload/airline/themes/one.vim	/^  let g:airline#themes#one#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#one#palette	plugged/vim-one/autoload/airline/themes/one.vim	/^  let g:airline#themes#one#palette.replace_modified = g:airline#themes#one#palette.normal_modifi/;"	v
g:airline#themes#one#palette	plugged/vim-one/autoload/airline/themes/one.vim	/^  let g:airline#themes#one#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#one#palette	plugged/vim-one/autoload/airline/themes/one.vim	/^  let g:airline#themes#one#palette.visual_modified = g:airline#themes#one#palette.normal_modifie/;"	v
g:airline#themes#one#palette	plugged/vim-one/autoload/airline/themes/one.vim	/^let g:airline#themes#one#palette = {}$/;"	v
g:autoloaded_fugitive	plugged/vim-fugitive/autoload/fugitive.vim	/^let g:autoloaded_fugitive = 1$/;"	v
g:cfi_disable	plugged/current-func-info.vim/plugin/cfi.vim	/^let g:cfi_disable = exists('g:cfi_disable') && g:cfi_disable isnot 0$/;"	v
g:cfi_javascript_show	plugged/current-func-info.vim/ftplugin/javascript/cfi.vim	/^  let g:cfi_javascript_show = s:show_defaults$/;"	v
g:cfi_php_show_params	plugged/current-func-info.vim/ftplugin/php/cfi.vim	/^    let g:cfi_php_show_params = 0$/;"	v
g:colors_name	plugged/neodark.vim/colors/neodark.vim	/^let g:colors_name = 'neodark'$/;"	v
g:colors_name	plugged/vim-one/colors/one.vim	/^let g:colors_name = 'one'$/;"	v
g:ctrlp_formatline_func	plugged/vim-devicons/autoload/devicons/plugins/ctrlp.vim	/^        let g:ctrlp_formatline_func = 's:formatline(s:curtype() == "buf" ? v:val : WebDevIconsGe/;"	v
g:ctrlsf_absolute_file_path	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^    let g:ctrlsf_absolute_file_path = 0$/;"	v
g:ctrlsf_auto_close	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^    let g:ctrlsf_auto_close = {$/;"	v
g:ctrlsf_auto_focus	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^        let g:ctrlsf_auto_focus['duration_less_than'] = 1000$/;"	v
g:ctrlsf_auto_focus	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^    let g:ctrlsf_auto_focus = {$/;"	v
g:ctrlsf_auto_preview	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^    let g:ctrlsf_auto_preview = 0$/;"	v
g:ctrlsf_backend	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^        let g:ctrlsf_backend = ctrlsf#backend#Detect()$/;"	v
g:ctrlsf_backend	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^        let g:ctrlsf_backend = g:ctrlsf_ackprg$/;"	v
g:ctrlsf_case_sensitive	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^    let g:ctrlsf_case_sensitive = 'smart'$/;"	v
g:ctrlsf_compact_position	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^    let g:ctrlsf_compact_position = 'bottom_outside'$/;"	v
g:ctrlsf_compact_winsize	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^    let g:ctrlsf_compact_winsize = '10'$/;"	v
g:ctrlsf_confirm_save	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^    let g:ctrlsf_confirm_save = 1$/;"	v
g:ctrlsf_confirm_unsaving_quit	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^    let g:ctrlsf_confirm_unsaving_quit = 1$/;"	v
g:ctrlsf_context	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^    let g:ctrlsf_context = '-C 3'$/;"	v
g:ctrlsf_debug_mode	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^    let g:ctrlsf_debug_mode = 0$/;"	v
g:ctrlsf_default_root	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^    let g:ctrlsf_default_root = 'cwd'$/;"	v
g:ctrlsf_default_view_mode	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^    let g:ctrlsf_default_view_mode = 'normal'$/;"	v
g:ctrlsf_extra_backend_args	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^    let g:ctrlsf_extra_backend_args = {}$/;"	v
g:ctrlsf_extra_root_markers	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^    let g:ctrlsf_extra_root_markers = []$/;"	v
g:ctrlsf_fold_result	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^    let g:ctrlsf_fold_result = 0$/;"	v
g:ctrlsf_follow_symlinks	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^    let g:ctrlsf_follow_symlinks = 1$/;"	v
g:ctrlsf_ignore_dir	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^    let g:ctrlsf_ignore_dir = []$/;"	v
g:ctrlsf_indent	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^    let g:ctrlsf_indent = 4$/;"	v
g:ctrlsf_loaded	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^let g:ctrlsf_loaded = 1$/;"	v
g:ctrlsf_mapping	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^        let g:ctrlsf_mapping[key] = get(g:ctrlsf_mapping, key,$/;"	v
g:ctrlsf_mapping	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^    let g:ctrlsf_mapping = s:default_mapping$/;"	v
g:ctrlsf_parse_speed	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^    let g:ctrlsf_parse_speed = 300$/;"	v
g:ctrlsf_populate_qflist	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^    let g:ctrlsf_populate_qflist = 0$/;"	v
g:ctrlsf_position	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^            let g:ctrlsf_position = 'left'$/;"	v
g:ctrlsf_position	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^            let g:ctrlsf_position = 'right'$/;"	v
g:ctrlsf_position	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^        let g:ctrlsf_position = 'left'$/;"	v
g:ctrlsf_preview_position	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^    let g:ctrlsf_preview_position = 'outside'$/;"	v
g:ctrlsf_regex_pattern	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^    let g:ctrlsf_regex_pattern = 0$/;"	v
g:ctrlsf_search_mode	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^        let g:ctrlsf_search_mode = 'async'$/;"	v
g:ctrlsf_search_mode	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^        let g:ctrlsf_search_mode = 'sync'$/;"	v
g:ctrlsf_selected_line_hl	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^    let g:ctrlsf_selected_line_hl = 'p'$/;"	v
g:ctrlsf_tail_loaded	plugged/ctrlsf.vim/after/plugin/ctrlsf.vim	/^let g:ctrlsf_tail_loaded = 1$/;"	v
g:ctrlsf_toggle_map_key	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^    let g:ctrlsf_toggle_map_key = ''$/;"	v
g:ctrlsf_winsize	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^        let g:ctrlsf_winsize = g:ctrlsf_width$/;"	v
g:ctrlsf_winsize	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^    let g:ctrlsf_winsize = 'auto'$/;"	v
g:current_ulti_dict	plugged/ultisnips/autoload/UltiSnips.vim	/^    let g:current_ulti_dict = {}$/;"	v
g:current_ulti_dict_info	plugged/ultisnips/autoload/UltiSnips.vim	/^      let g:current_ulti_dict_info = {}$/;"	v
g:easy_align_last_command	plugged/vim-easy-align/autoload/easy_align.vim	/^      let g:easy_align_last_command = s:echon('', n, regexp, ch, copts, '')$/;"	v
g:easy_align_last_command	plugged/vim-easy-align/autoload/easy_align.vim	/^    let g:easy_align_last_command = s:echon('', n, regx, d, copts, '')$/;"	v
g:easy_align_need_repeat	plugged/vim-easy-align/plugin/easy_align.vim	/^      let g:easy_align_need_repeat = 1$/;"	v
g:fugitive_event	plugged/vim-fugitive/autoload/fugitive.vim	/^      let g:fugitive_event = a:state.git_dir$/;"	v
g:fugitive_event	plugged/vim-fugitive/autoload/fugitive.vim	/^    let g:fugitive_event = dir$/;"	v
g:fugitive_result	plugged/vim-fugitive/autoload/fugitive.vim	/^      let g:fugitive_result = a:dir$/;"	v
g:fugitive_result	plugged/vim-fugitive/autoload/fugitive.vim	/^      let g:fugitive_result = a:state$/;"	v
g:fugitive_summary_format	plugged/vim-fugitive/autoload/fugitive.vim	/^  let g:fugitive_summary_format = '%s'$/;"	v
g:fzf_action	plugged/ctrlsf.vim/autoload/ctrlsf/utils.vim	/^            let g:fzf_action = fzf_action_bak$/;"	v
g:fzf_action	plugged/ctrlsf.vim/autoload/ctrlsf/utils.vim	/^        let g:fzf_action = {$/;"	v
g:gutentags_add_ctrlp_root_markers	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_add_ctrlp_root_markers = get(g:, 'gutentags_add_ctrlp_root_markers', 1)$/;"	v
g:gutentags_add_default_project_roots	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_add_default_project_roots = get(g:, 'gutentags_add_default_project_roots', 1)$/;"	v
g:gutentags_auto_add_cscope	plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^    let g:gutentags_auto_add_cscope = 1$/;"	v
g:gutentags_auto_add_gtags_cscope	plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^    let g:gutentags_auto_add_gtags_cscope = 1$/;"	v
g:gutentags_background_update	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_background_update = get(g:, 'gutentags_background_update', 1)$/;"	v
g:gutentags_cache_dir	plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_cache_dir = ''$/;"	v
g:gutentags_cache_dir	plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_cache_dir = fnamemodify(g:gutentags_cache_dir, ':p')$/;"	v
g:gutentags_cache_dir	plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_cache_dir = fnamemodify(g:gutentags_cache_dir, ':s?[\/\\\\]$??')$/;"	v
g:gutentags_cscope_build_inverted_index	plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^    let g:gutentags_cscope_build_inverted_index = 0$/;"	v
g:gutentags_cscope_executable	plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^    let g:gutentags_cscope_executable = 'cscope'$/;"	v
g:gutentags_ctags_auto_set_tags	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_auto_set_tags = get(g:, 'gutentags_ctags_auto_set_tags', 1)$/;"	v
g:gutentags_ctags_check_tagfile	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_check_tagfile = get(g:, 'gutentags_ctags_check_tagfile', 0)$/;"	v
g:gutentags_ctags_exclude	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_exclude = get(g:, 'gutentags_ctags_exclude', [])$/;"	v
g:gutentags_ctags_exclude_wildignore	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_exclude_wildignore = get(g:, 'gutentags_ctags_exclude_wildignore', 1)$/;"	v
g:gutentags_ctags_executable	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_executable = get(g:, 'gutentags_ctags_executable', 'ctags')$/;"	v
g:gutentags_ctags_extra_args	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_extra_args = get(g:, 'gutentags_ctags_extra_args', [])$/;"	v
g:gutentags_ctags_options_file	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_options_file = get(g:, 'gutentags_ctags_options_file', '.gutctags')$/;"	v
g:gutentags_ctags_post_process_cmd	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_post_process_cmd = get(g:, 'gutentags_ctags_post_process_cmd', '')$/;"	v
g:gutentags_ctags_tagfile	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_tagfile = get(g:, 'gutentags_ctags_tagfile', 'tags')$/;"	v
g:gutentags_debug	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_debug = get(g:, 'gutentags_debug', 0)$/;"	v
g:gutentags_define_advanced_commands	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_define_advanced_commands = get(g:, 'gutentags_define_advanced_commands', 0)$/;"	v
g:gutentags_enabled	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^            let g:gutentags_enabled = 0$/;"	v
g:gutentags_enabled	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_enabled = get(g:, 'gutentags_enabled', 1)$/;"	v
g:gutentags_exclude_filetypes	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_exclude_filetypes = get(g:, 'gutentags_exclude_filetypes', [])$/;"	v
g:gutentags_exclude_project_root	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_exclude_project_root = get(g:, 'gutentags_exclude_project_root', ['\/usr\/local'/;"	v
g:gutentags_fake	plugged/vim-gutentags/autoload/gutentags.vim	/^        let g:gutentags_fake = a:1$/;"	v
g:gutentags_fake	plugged/vim-gutentags/autoload/gutentags.vim	/^    let g:gutentags_fake = !g:gutentags_fake$/;"	v
g:gutentags_fake	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_fake = get(g:, 'gutentags_fake', 0)$/;"	v
g:gutentags_file_list_command	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_file_list_command = get(g:, 'gutentags_file_list_command', '')$/;"	v
g:gutentags_generate_on_empty_buffer	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_empty_buffer = get(g:, 'gutentags_generate_on_empty_buffer', 0)$/;"	v
g:gutentags_generate_on_missing	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_missing = get(g:, 'gutentags_generate_on_missing', 1)$/;"	v
g:gutentags_generate_on_new	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_new = get(g:, 'gutentags_generate_on_new', 1)$/;"	v
g:gutentags_generate_on_write	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_write = get(g:, 'gutentags_generate_on_write', 1)$/;"	v
g:gutentags_gtags_cscope_executable	plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^    let g:gutentags_gtags_cscope_executable = 'gtags-cscope'$/;"	v
g:gutentags_gtags_dbpath	plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^    let g:gutentags_gtags_dbpath = ''$/;"	v
g:gutentags_gtags_executable	plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^    let g:gutentags_gtags_executable = 'gtags'$/;"	v
g:gutentags_gtags_options_file	plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^    let g:gutentags_gtags_options_file = '.gutgtags'$/;"	v
g:gutentags_init_user_func	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_init_user_func = get(g:, 'gutentags_init_user_func', $/;"	v
g:gutentags_modules	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_modules = get(g:, 'gutentags_modules', ['ctags'])$/;"	v
g:gutentags_pause_after_update	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_pause_after_update = get(g:, 'gutentags_pause_after_update', 0)$/;"	v
g:gutentags_plat_dir	plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_plat_dir = expand('<sfile>:h:h:p') . "\\\\plat\\\\win32\\\\"$/;"	v
g:gutentags_plat_dir	plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_plat_dir = expand('<sfile>:h:h:p') . '\/plat\/unix\/'$/;"	v
g:gutentags_project_info	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_project_info = get(g:, 'gutentags_project_info', [])$/;"	v
g:gutentags_project_root	plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_project_root += ['.git', '.hg', '.svn', '.bzr', '_darcs', '_FOSSIL_', '.fslc/;"	v
g:gutentags_project_root	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_project_root = get(g:, 'gutentags_project_root', [])$/;"	v
g:gutentags_project_root_finder	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_project_root_finder = get(g:, 'gutentags_project_root_finder', '')$/;"	v
g:gutentags_res_dir	plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_res_dir = expand('<sfile>:h:h:p') . "\\\\res\\\\"$/;"	v
g:gutentags_res_dir	plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_res_dir = expand('<sfile>:h:h:p') . '\/res\/'$/;"	v
g:gutentags_resolve_symlinks	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_resolve_symlinks = get(g:, 'gutentags_resolve_symlinks', 0)$/;"	v
g:gutentags_scopefile	plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^    let g:gutentags_scopefile = 'cscope.out'$/;"	v
g:gutentags_script_ext	plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_script_ext = '.cmd'$/;"	v
g:gutentags_script_ext	plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_script_ext = '.sh'$/;"	v
g:gutentags_trace	plugged/vim-gutentags/autoload/gutentags.vim	/^            let g:gutentags_trace = l:prev_trace$/;"	v
g:gutentags_trace	plugged/vim-gutentags/autoload/gutentags.vim	/^        let g:gutentags_trace = 1$/;"	v
g:gutentags_trace	plugged/vim-gutentags/autoload/gutentags.vim	/^        let g:gutentags_trace = a:1$/;"	v
g:gutentags_trace	plugged/vim-gutentags/autoload/gutentags.vim	/^        let g:gutentags_trace = l:trace_backup$/;"	v
g:gutentags_trace	plugged/vim-gutentags/autoload/gutentags.vim	/^    let g:gutentags_trace = !g:gutentags_trace$/;"	v
g:gutentags_trace	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_trace = get(g:, 'gutentags_trace', 0)$/;"	v
g:gutentags_use_jobs	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_use_jobs = get(g:, 'gutentags_use_jobs', has('job'))$/;"	v
g:indentLine_bgcolor_gui	plugged/neodark.vim/colors/neodark.vim	/^let g:indentLine_bgcolor_gui = s:base1[0]$/;"	v
g:indentLine_bgcolor_term	plugged/neodark.vim/colors/neodark.vim	/^let g:indentLine_bgcolor_term = s:base1[1]$/;"	v
g:indentLine_color_gui	plugged/neodark.vim/colors/neodark.vim	/^let g:indentLine_color_gui = s:base3[0]$/;"	v
g:indentLine_color_term	plugged/neodark.vim/colors/neodark.vim	/^let g:indentLine_color_term = s:base3[1]$/;"	v
g:io_fugitive	plugged/vim-fugitive/plugin/fugitive.vim	/^let g:io_fugitive = {$/;"	v
g:lightline#colorscheme#neodark#palette	plugged/neodark.vim/autoload/lightline/colorscheme/neodark.vim	/^let g:lightline#colorscheme#neodark#palette = s:p$/;"	v
g:loaded_cfi	plugged/current-func-info.vim/plugin/cfi.vim	/^let g:loaded_cfi = 1$/;"	v
g:loaded_cfi_ftplugin_c	plugged/current-func-info.vim/ftplugin/c/cfi.vim	/^let g:loaded_cfi_ftplugin_c = 1$/;"	v
g:loaded_cfi_ftplugin_elixir	plugged/current-func-info.vim/ftplugin/elixir/cfi.vim	/^let g:loaded_cfi_ftplugin_elixir = 1$/;"	v
g:loaded_cfi_ftplugin_go	plugged/current-func-info.vim/ftplugin/go/cfi.vim	/^let g:loaded_cfi_ftplugin_go = 1$/;"	v
g:loaded_cfi_ftplugin_javascript	plugged/current-func-info.vim/ftplugin/javascript/cfi.vim	/^let g:loaded_cfi_ftplugin_javascript = 1$/;"	v
g:loaded_cfi_ftplugin_perl	plugged/current-func-info.vim/ftplugin/perl/cfi.vim	/^let g:loaded_cfi_ftplugin_perl = 1$/;"	v
g:loaded_cfi_ftplugin_php	plugged/current-func-info.vim/ftplugin/php/cfi.vim	/^let g:loaded_cfi_ftplugin_php = 1$/;"	v
g:loaded_cfi_ftplugin_python	plugged/current-func-info.vim/ftplugin/python/cfi.vim	/^let g:loaded_cfi_ftplugin_python = 1$/;"	v
g:loaded_cfi_ftplugin_ruby	plugged/current-func-info.vim/ftplugin/ruby/cfi.vim	/^let g:loaded_cfi_ftplugin_ruby = 1$/;"	v
g:loaded_cfi_ftplugin_sh	plugged/current-func-info.vim/ftplugin/sh/cfi.vim	/^let g:loaded_cfi_ftplugin_sh = 1$/;"	v
g:loaded_cfi_ftplugin_sql	plugged/current-func-info.vim/ftplugin/sql/cfi.vim	/^let g:loaded_cfi_ftplugin_sql = 1$/;"	v
g:loaded_cfi_ftplugin_vim	plugged/current-func-info.vim/ftplugin/vim/cfi.vim	/^let g:loaded_cfi_ftplugin_vim = 1$/;"	v
g:loaded_easy_align	plugged/vim-easy-align/autoload/easy_align.vim	/^let g:loaded_easy_align = 1$/;"	v
g:loaded_easy_align_plugin	plugged/vim-easy-align/plugin/easy_align.vim	/^let g:loaded_easy_align_plugin = 1$/;"	v
g:loaded_fugitive	plugged/vim-fugitive/plugin/fugitive.vim	/^let g:loaded_fugitive = 1$/;"	v
g:loaded_gutentags	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:loaded_gutentags = 1$/;"	v
g:loaded_neodark	plugged/neodark.vim/plugin/neodark.vim	/^let g:loaded_neodark = 1$/;"	v
g:loaded_nerdtree_autoload	plugged/nerdtree/autoload/nerdtree.vim	/^let g:loaded_nerdtree_autoload = 1$/;"	v
g:loaded_nerdtree_exec_menuitem	plugged/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^let g:loaded_nerdtree_exec_menuitem = 1$/;"	v
g:loaded_nerdtree_fs_menu	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^let g:loaded_nerdtree_fs_menu = 1$/;"	v
g:loaded_nerdtree_git_status	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^let g:loaded_nerdtree_git_status = 1$/;"	v
g:loaded_nerdtree_git_status_autoload	plugged/nerdtree-git-plugin/autoload/gitstatus.vim	/^let g:loaded_nerdtree_git_status_autoload = 1$/;"	v
g:loaded_nerdtree_git_status_job	plugged/nerdtree-git-plugin/autoload/gitstatus/job.vim	/^let g:loaded_nerdtree_git_status_job = 1$/;"	v
g:loaded_nerdtree_git_status_listener	plugged/nerdtree-git-plugin/autoload/gitstatus/listener.vim	/^let g:loaded_nerdtree_git_status_listener = 1$/;"	v
g:loaded_nerdtree_git_status_log	plugged/nerdtree-git-plugin/autoload/gitstatus/log.vim	/^let g:loaded_nerdtree_git_status_log = 1$/;"	v
g:loaded_nerdtree_git_status_util	plugged/nerdtree-git-plugin/autoload/gitstatus/util.vim	/^let g:loaded_nerdtree_git_status_util = 1$/;"	v
g:loaded_nerdtree_ui_glue_autoload	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^let g:loaded_nerdtree_ui_glue_autoload = 1$/;"	v
g:loaded_nvim_treesitter	plugged/nvim-treesitter/plugin/nvim-treesitter.vim	/^let g:loaded_nvim_treesitter = 1$/;"	v
g:loaded_oscyank	plugged/vim-oscyank/plugin/oscyank.vim	/^let g:loaded_oscyank = 1$/;"	v
g:loaded_webdevicons	plugged/vim-devicons/plugin/webdevicons.vim	/^let g:loaded_webdevicons = 1$/;"	v
g:lspconfig	plugged/nvim-lspconfig/plugin/lspconfig.vim	/^let g:lspconfig = 1$/;"	v
g:monokai_gui_italic	plugged/vim-monokai/colors/monokai.vim	/^    let g:monokai_gui_italic = 0$/;"	v
g:monokai_term_italic	plugged/vim-monokai/colors/monokai.vim	/^    let g:monokai_term_italic = 0$/;"	v
g:monokai_termcolors	plugged/vim-monokai/colors/monokai.vim	/^let g:monokai_termcolors = 256 " does not support 16 color term right now.$/;"	v
g:neodark#background	plugged/neodark.vim/colors/neodark.vim	/^  let g:neodark#background = ''$/;"	v
g:neodark#italics	plugged/neodark.vim/colors/neodark.vim	/^  let g:neodark#italics = 0$/;"	v
g:neodark#solid_vertsplit	plugged/neodark.vim/colors/neodark.vim	/^  let g:neodark#solid_vertsplit = 0$/;"	v
g:neodark#terminal_transparent	plugged/neodark.vim/colors/neodark.vim	/^  let g:neodark#terminal_transparent = 0$/;"	v
g:neodark#use_256color	plugged/neodark.vim/colors/neodark.vim	/^  let g:neodark#use_256color = 0$/;"	v
g:neodark#use_custom_terminal_theme	plugged/neodark.vim/colors/neodark.vim	/^  let g:neodark#use_custom_terminal_theme = 0$/;"	v
g:nerdtree_tabs_autoclose	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^  let g:nerdtree_tabs_autoclose = 1$/;"	v
g:nerdtree_tabs_autofind	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^  let g:nerdtree_tabs_autofind = 0$/;"	v
g:nerdtree_tabs_focus_on_files	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^  let g:nerdtree_tabs_focus_on_files = 0$/;"	v
g:nerdtree_tabs_loaded	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^  let g:nerdtree_tabs_loaded = 1$/;"	v
g:nerdtree_tabs_meaningful_tab_names	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^  let g:nerdtree_tabs_meaningful_tab_names = 1$/;"	v
g:nerdtree_tabs_no_startup_for_diff	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^    let g:nerdtree_tabs_no_startup_for_diff = 1$/;"	v
g:nerdtree_tabs_open_on_console_startup	init.vim	/^let g:nerdtree_tabs_open_on_console_startup=1$/;"	v
g:nerdtree_tabs_open_on_console_startup	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^  let g:nerdtree_tabs_open_on_console_startup = 0$/;"	v
g:nerdtree_tabs_open_on_gui_startup	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^  let g:nerdtree_tabs_open_on_gui_startup = 1$/;"	v
g:nerdtree_tabs_open_on_new_tab	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^  let g:nerdtree_tabs_open_on_new_tab = 1$/;"	v
g:nerdtree_tabs_smart_startup_focus	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^  let g:nerdtree_tabs_smart_startup_focus = 1$/;"	v
g:nerdtree_tabs_startup_cd	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^  let g:nerdtree_tabs_startup_cd = 1$/;"	v
g:nerdtree_tabs_synchronize_focus	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^  let g:nerdtree_tabs_synchronize_focus = 1$/;"	v
g:nerdtree_tabs_synchronize_view	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^  let g:nerdtree_tabs_synchronize_view = 1$/;"	v
g:one_allow_italics	plugged/vim-one/colors/one.vim	/^  let g:one_allow_italics = 0$/;"	v
g:smoothie_break_on_reverse	plugged/vim-smoothie/autoload/smoothie.vim	/^  let g:smoothie_break_on_reverse = 0$/;"	v
g:smoothie_enabled	plugged/vim-smoothie/autoload/smoothie.vim	/^  let g:smoothie_enabled = 1$/;"	v
g:smoothie_enabled	plugged/vim-smoothie/plugin/smoothie.vim	/^  let g:smoothie_enabled = 0$/;"	v
g:smoothie_speed_constant_factor	plugged/vim-smoothie/autoload/smoothie.vim	/^  let g:smoothie_speed_constant_factor = 10$/;"	v
g:smoothie_speed_exponentiation_factor	plugged/vim-smoothie/autoload/smoothie.vim	/^  let g:smoothie_speed_exponentiation_factor = 0.9$/;"	v
g:smoothie_speed_linear_factor	plugged/vim-smoothie/autoload/smoothie.vim	/^  let g:smoothie_speed_linear_factor = 10$/;"	v
g:smoothie_update_interval	plugged/vim-smoothie/autoload/smoothie.vim	/^  let g:smoothie_update_interval = 20$/;"	v
g:snips_author	plugged/vim-snippets/plugin/vimsnippets.vim	/^    let g:snips_author = "yourname"$/;"	v
g:snips_email	plugged/vim-snippets/plugin/vimsnippets.vim	/^    let g:snips_email = "yourname@email.com"$/;"	v
g:snips_github	plugged/vim-snippets/plugin/vimsnippets.vim	/^    let g:snips_github = "https:\/\/github.com\/yourname"$/;"	v
g:tagbar_type_snippets	plugged/ultisnips/ftplugin/snippets.vim	/^let g:tagbar_type_snippets = {$/;"	v
g:tagbar_width	init.vim	/^let g:tagbar_width = 60$/;"	v
g:tagbar_wrap	init.vim	/^let g:tagbar_wrap = 1$/;"	v
g:terminal_ansi_colors	plugged/neodark.vim/colors/neodark.vim	/^let g:terminal_ansi_colors = [s:base1[0], s:red[0], s:green[0], s:yellow[0],$/;"	v
g:terminal_ansi_colors	plugged/vim-monokai/colors/monokai.vim	/^  let g:terminal_ansi_colors = [$/;"	v
g:terminal_color_0	plugged/neodark.vim/colors/neodark.vim	/^  let g:terminal_color_0  = s:base1[0]$/;"	v
g:terminal_color_0	plugged/vim-monokai/colors/monokai.vim	/^  let g:terminal_color_0  = s:black.gui$/;"	v
g:terminal_color_1	plugged/neodark.vim/colors/neodark.vim	/^  let g:terminal_color_1  = s:red[0]$/;"	v
g:terminal_color_1	plugged/vim-monokai/colors/monokai.vim	/^  let g:terminal_color_1  = s:red.gui$/;"	v
g:terminal_color_10	plugged/neodark.vim/colors/neodark.vim	/^  let g:terminal_color_10 = s:teal[0]$/;"	v
g:terminal_color_10	plugged/vim-monokai/colors/monokai.vim	/^  let g:terminal_color_10 = s:br_green.gui$/;"	v
g:terminal_color_11	plugged/neodark.vim/colors/neodark.vim	/^  let g:terminal_color_11 = s:beige[0]$/;"	v
g:terminal_color_11	plugged/vim-monokai/colors/monokai.vim	/^  let g:terminal_color_11 = s:br_yellow.gui$/;"	v
g:terminal_color_12	plugged/neodark.vim/colors/neodark.vim	/^  let g:terminal_color_12 = s:light_blue[0]$/;"	v
g:terminal_color_12	plugged/vim-monokai/colors/monokai.vim	/^  let g:terminal_color_12 = s:br_blue.gui$/;"	v
g:terminal_color_13	plugged/neodark.vim/colors/neodark.vim	/^  let g:terminal_color_13 = s:base3[0]$/;"	v
g:terminal_color_13	plugged/vim-monokai/colors/monokai.vim	/^  let g:terminal_color_13 = s:br_purple.gui$/;"	v
g:terminal_color_14	plugged/neodark.vim/colors/neodark.vim	/^  let g:terminal_color_14 = s:brown[0]$/;"	v
g:terminal_color_14	plugged/vim-monokai/colors/monokai.vim	/^  let g:terminal_color_14 = s:br_cyan.gui$/;"	v
g:terminal_color_15	plugged/neodark.vim/colors/neodark.vim	/^  let g:terminal_color_15 = s:base5[0]$/;"	v
g:terminal_color_15	plugged/vim-monokai/colors/monokai.vim	/^  let g:terminal_color_15 = s:br_white.gui$/;"	v
g:terminal_color_2	plugged/neodark.vim/colors/neodark.vim	/^  let g:terminal_color_2  = s:green[0]$/;"	v
g:terminal_color_2	plugged/vim-monokai/colors/monokai.vim	/^  let g:terminal_color_2  = s:green.gui$/;"	v
g:terminal_color_3	plugged/neodark.vim/colors/neodark.vim	/^  let g:terminal_color_3  = s:yellow[0]$/;"	v
g:terminal_color_3	plugged/vim-monokai/colors/monokai.vim	/^  let g:terminal_color_3  = s:yellow.gui$/;"	v
g:terminal_color_4	plugged/neodark.vim/colors/neodark.vim	/^  let g:terminal_color_4  = s:blue[0]$/;"	v
g:terminal_color_4	plugged/vim-monokai/colors/monokai.vim	/^  let g:terminal_color_4  = s:aqua.gui$/;"	v
g:terminal_color_5	plugged/neodark.vim/colors/neodark.vim	/^  let g:terminal_color_5  = s:purple[0]$/;"	v
g:terminal_color_5	plugged/vim-monokai/colors/monokai.vim	/^  let g:terminal_color_5  = s:purple.gui$/;"	v
g:terminal_color_6	plugged/neodark.vim/colors/neodark.vim	/^  let g:terminal_color_6  = s:orange[0]$/;"	v
g:terminal_color_6	plugged/vim-monokai/colors/monokai.vim	/^  let g:terminal_color_6  = s:cyan.gui$/;"	v
g:terminal_color_7	plugged/neodark.vim/colors/neodark.vim	/^  let g:terminal_color_7  = s:base4[0]$/;"	v
g:terminal_color_7	plugged/vim-monokai/colors/monokai.vim	/^  let g:terminal_color_7  = s:white.gui$/;"	v
g:terminal_color_8	plugged/neodark.vim/colors/neodark.vim	/^  let g:terminal_color_8  = s:base2[0]$/;"	v
g:terminal_color_8	plugged/vim-monokai/colors/monokai.vim	/^  let g:terminal_color_8  = s:darkgrey.gui$/;"	v
g:terminal_color_9	plugged/neodark.vim/colors/neodark.vim	/^  let g:terminal_color_9  = s:pink[0]$/;"	v
g:terminal_color_9	plugged/vim-monokai/colors/monokai.vim	/^  let g:terminal_color_9  = s:pink.gui$/;"	v
g:virtual_scriptnames	plugged/vim-fugitive/autoload/fugitive.vim	/^    let g:virtual_scriptnames = {}$/;"	v
g:virtual_scriptnames	plugged/vim-fugitive/autoload/fugitive.vim	/^  let g:virtual_scriptnames[temp] = amatch$/;"	v
g:webdevicons_enable	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^  let g:webdevicons_enable = 1$/;"	v
g:webdevicons_enable_airline_statusline	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^  let g:webdevicons_enable_airline_statusline = 1$/;"	v
g:webdevicons_enable_airline_tabline	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^  let g:webdevicons_enable_airline_tabline = 1$/;"	v
g:webdevicons_enable_nerdtree	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^     let g:webdevicons_enable_nerdtree = 0$/;"	v
g:webdevicons_enable_nerdtree	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^  let g:webdevicons_enable_nerdtree = 1$/;"	v
g:webdevicons_gui_glyph_fix	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^    let g:webdevicons_gui_glyph_fix = 0$/;"	v
g:webdevicons_gui_glyph_fix	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^    let g:webdevicons_gui_glyph_fix = 1$/;"	v
gather_candidates	plugged/ultisnips/rplugin/python3/deoplete/sources/ultisnips.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
gdscript	plugged/nvim-lspconfig/CONFIG.md	/^## gdscript$/;"	s	chapter:Configurations
gdscript	plugged/nvim-treesitter/lockfile.json	/^  "gdscript": {$/;"	o
generate	plugged/nvim-lspconfig/scripts/vimdocgen.lua	/^docs.generate = function()$/;"	f	unknown:docs
generate_files.sh script	plugged/vim-nerdtree-syntax-highlight/README.md	/^### generate_files.sh script$/;"	S	chapter:vim-nerdtree-syntax-highlight
generate_join	plugged/nvim-treesitter/lua/nvim-treesitter/utils.lua	/^function M.generate_join(separator)$/;"	f	unknown:M
generate_readme	plugged/nvim-lspconfig/scripts/docgen.lua	/^local function generate_readme(template_file, params)$/;"	f
get	plugged/nvim-cmp/lua/cmp/config.lua	/^config.get = function()$/;"	f	unknown:config
get	plugged/nvim-cmp/lua/cmp/utils/cache.lua	/^cache.get = function(self, key)$/;"	f	unknown:cache
get	plugged/nvim-cmp/lua/cmp/utils/highlight.lua	/^highlight.get = function(source, key)$/;"	f	unknown:highlight
get	plugged/nvim-treesitter/lua/nvim-treesitter/caching.lua	/^  function cache.get(type_name, bufnr)$/;"	f	unknown:cache
get_active_clients_list_by_ft	plugged/nvim-lspconfig/lua/lspconfig/util.lua	/^function M.get_active_clients_list_by_ft(filetype)$/;"	f	unknown:M
get_active_entry	plugged/nvim-cmp/lua/cmp/view.lua	/^view.get_active_entry = function(self)$/;"	f	unknown:view
get_active_entry	plugged/nvim-cmp/lua/cmp/view/custom_entries_view.lua	/^custom_entries_view.get_active_entry = function(self)$/;"	f	unknown:custom_entries_view
get_active_entry	plugged/nvim-cmp/lua/cmp/view/native_entries_view.lua	/^native_entries_view.get_active_entry = function(self)$/;"	f	unknown:native_entries_view
get_active_snip	plugged/LuaSnip/lua/luasnip/init.lua	/^local function get_active_snip()$/;"	f
get_args	plugged/LuaSnip/lua/luasnip/nodes/node.lua	/^function Node:get_args()$/;"	f	unknown:Node
get_args	plugged/LuaSnip/lua/luasnip/nodes/node.lua	/^local function get_args(node, get_text_func_name)$/;"	f
get_at_path	plugged/nvim-treesitter/lua/nvim-treesitter/utils.lua	/^function M.get_at_path(tbl, path)$/;"	f	unknown:M
get_border_width	plugged/nvim-cmp/lua/cmp/utils/window.lua	/^window.get_border_width = function(self)$/;"	f	unknown:window
get_buf_lang	plugged/nvim-treesitter/lua/nvim-treesitter/parsers.lua	/^function M.get_buf_lang(bufnr)$/;"	f	unknown:M
get_buffer	plugged/nvim-cmp/lua/cmp/utils/window.lua	/^window.get_buffer = function(self)$/;"	f	unknown:window
get_buffer_data	plugged/ultisnips/test/vim_interface.py	/^    def get_buffer_data(self):$/;"	m	class:VimInterface
get_buffer_filetypes	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def get_buffer_filetypes(self):$/;"	m	class:SnippetManager
get_byte_offset	plugged/nvim-treesitter/lua/nvim-treesitter/tsrange.lua	/^local function get_byte_offset(buf, row, col)$/;"	f
get_cache_dir	plugged/nvim-treesitter/lua/nvim-treesitter/utils.lua	/^function M.get_cache_dir()$/;"	f	unknown:M
get_capture_matches	plugged/nvim-treesitter/lua/nvim-treesitter/query.lua	/^function M.get_capture_matches(bufnr, captures, query_group, root, lang)$/;"	f	unknown:M
get_capture_matches_recursively	plugged/nvim-treesitter/lua/nvim-treesitter/query.lua	/^function M.get_capture_matches_recursively(bufnr, capture_or_fn, query_type)$/;"	f	unknown:M
get_clear_priority	plugged/ultisnips/pythonx/UltiSnips/snippet/source/base.py	/^    def get_clear_priority(self, filetypes):$/;"	m	class:SnippetSource
get_cleared	plugged/ultisnips/pythonx/UltiSnips/snippet/source/base.py	/^    def get_cleared(self, filetypes):$/;"	m	class:SnippetSource
get_command	plugged/nvim-treesitter/lua/nvim-treesitter/install.lua	/^local function get_command(cmd)$/;"	f
get_comment_format	plugged/vim-snippets/pythonx/vimsnippets.py	/^def get_comment_format():$/;"	f
get_commit_characters	plugged/nvim-cmp/lua/cmp/config/default.lua	/^      get_commit_characters = function(commit_characters)$/;"	f
get_commit_characters	plugged/nvim-cmp/lua/cmp/entry.lua	/^entry.get_commit_characters = function(self)$/;"	f	unknown:entry
get_completion_item	plugged/nvim-cmp/lua/cmp/entry.lua	/^entry.get_completion_item = function(self)$/;"	f	unknown:entry
get_config	plugged/nvim-cmp/lua/cmp/source.lua	/^source.get_config = function(self)$/;"	f	unknown:source
get_content_height	plugged/nvim-cmp/lua/cmp/utils/window.lua	/^window.get_content_height = function(self)$/;"	f	unknown:window
get_context	plugged/LuaSnip/lua/luasnip/init.lua	/^local function get_context(snip)$/;"	f
get_context	plugged/nvim-cmp/lua/cmp/core.lua	/^core.get_context = function(self, option)$/;"	f	unknown:core
get_current_line_to_cursor	plugged/LuaSnip/lua/luasnip/util/util.lua	/^local function get_current_line_to_cursor()$/;"	f
get_cursor_0ind	plugged/LuaSnip/lua/luasnip/util/util.lua	/^local function get_cursor_0ind()$/;"	f
get_cursor_before_line	plugged/nvim-cmp/lua/cmp/utils/misc.lua	/^misc.get_cursor_before_line = function()$/;"	f	unknown:misc
get_cursor_pos	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def get_cursor_pos():$/;"	f
get_debug_name	plugged/cmp-nvim-lsp/lua/cmp_nvim_lsp/source.lua	/^source.get_debug_name = function(self)$/;"	f	unknown:source
get_debug_name	plugged/cmp_luasnip/lua/cmp_luasnip/init.lua	/^function source:get_debug_name()$/;"	f	unknown:source
get_debug_name	plugged/nvim-cmp/lua/cmp/source.lua	/^source.get_debug_name = function(self)$/;"	f	unknown:source
get_deep_extends	plugged/ultisnips/pythonx/UltiSnips/snippet/source/base.py	/^    def get_deep_extends(self, base_filetypes):$/;"	m	class:SnippetSource
get_default_insert_range	plugged/nvim-cmp/lua/cmp/source.lua	/^source.get_default_insert_range = function(self)$/;"	f	unknown:source
get_default_replace_range	plugged/nvim-cmp/lua/cmp/source.lua	/^source.get_default_replace_range = function(self)$/;"	f	unknown:source
get_definition_id	plugged/nvim-treesitter/lua/nvim-treesitter/locals.lua	/^function M.get_definition_id(scope, node_text)$/;"	f	unknown:M
get_definition_scopes	plugged/nvim-treesitter/lua/nvim-treesitter/locals.lua	/^function M.get_definition_scopes(node, bufnr, scope_type)$/;"	f	unknown:M
get_definitions	plugged/nvim-treesitter/lua/nvim-treesitter/locals.lua	/^function M.get_definitions(bufnr)$/;"	f	unknown:M
get_definitions_lookup_table	plugged/nvim-treesitter/lua/nvim-treesitter/locals.lua	/^M.get_definitions_lookup_table = ts_utils.memoize_by_buf_tick(function(bufnr)$/;"	f	unknown:M
get_docstring	plugged/LuaSnip/lua/luasnip/nodes/choiceNode.lua	/^function ChoiceNode:get_docstring()$/;"	f	unknown:ChoiceNode
get_docstring	plugged/LuaSnip/lua/luasnip/nodes/dynamicNode.lua	/^function DynamicNode:get_docstring()$/;"	f	unknown:DynamicNode
get_docstring	plugged/LuaSnip/lua/luasnip/nodes/insertNode.lua	/^function InsertNode:get_docstring()$/;"	f	unknown:InsertNode
get_docstring	plugged/LuaSnip/lua/luasnip/nodes/node.lua	/^function Node:get_docstring()$/;"	f	unknown:Node
get_docstring	plugged/LuaSnip/lua/luasnip/nodes/snippet.lua	/^function Snippet:get_docstring()$/;"	f	unknown:Snippet
get_documentation	plugged/cmp_luasnip/lua/cmp_luasnip/init.lua	/^local function get_documentation(snip, data)$/;"	f
get_documentation	plugged/nvim-cmp/lua/cmp/entry.lua	/^entry.get_documentation = function(self)$/;"	f	unknown:entry
get_dot_vim	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def get_dot_vim():$/;"	f
get_entries	plugged/nvim-cmp/lua/cmp/source.lua	/^source.get_entries = function(self, ctx)$/;"	f	unknown:source
get_eslint_client	plugged/nvim-lspconfig/lua/lspconfig/eslint.lua	/^local get_eslint_client = function()$/;"	f
get_fetching_time	plugged/nvim-cmp/lua/cmp/source.lua	/^source.get_fetching_time = function(self)$/;"	f	unknown:source
get_filter_text	plugged/nvim-cmp/lua/cmp/entry.lua	/^entry.get_filter_text = function(self)$/;"	f	unknown:entry
get_first_entry	plugged/nvim-cmp/lua/cmp/view.lua	/^view.get_first_entry = function(self)$/;"	f	unknown:view
get_first_entry	plugged/nvim-cmp/lua/cmp/view/custom_entries_view.lua	/^custom_entries_view.get_first_entry = function(self)$/;"	f	unknown:custom_entries_view
get_first_entry	plugged/nvim-cmp/lua/cmp/view/native_entries_view.lua	/^native_entries_view.get_first_entry = function(self)$/;"	f	unknown:native_entries_view
get_fold_indic	plugged/nvim-treesitter/lua/nvim-treesitter/fold.lua	/^function M.get_fold_indic(lnum)$/;"	f	unknown:M
get_ignored_parser_installs	plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^function M.get_ignored_parser_installs()$/;"	f	unknown:M
get_indent	plugged/nvim-treesitter/lua/nvim-treesitter/indent.lua	/^function M.get_indent(lnum)$/;"	f	unknown:M
get_indents	plugged/nvim-treesitter/lua/nvim-treesitter/indent.lua	/^local get_indents = tsutils.memoize_by_buf_tick(function(bufnr, root, lang)$/;"	f
get_insert_range	plugged/nvim-cmp/lua/cmp/entry.lua	/^entry.get_insert_range = function(self)$/;"	f	unknown:entry
get_insert_text	plugged/nvim-cmp/lua/cmp/entry.lua	/^entry.get_insert_text = function(self)$/;"	f	unknown:entry
get_installed_revision	plugged/nvim-treesitter/lua/nvim-treesitter/install.lua	/^local function get_installed_revision(lang)$/;"	f
get_java_executable	plugged/nvim-lspconfig/lua/lspconfig/jdtls.lua	/^local function get_java_executable()$/;"	f
get_jdtls_config	plugged/nvim-lspconfig/lua/lspconfig/jdtls.lua	/^local function get_jdtls_config()$/;"	f
get_jdtls_jar	plugged/nvim-lspconfig/lua/lspconfig/jdtls.lua	/^local function get_jdtls_jar()$/;"	f
get_job_status	plugged/nvim-treesitter/lua/nvim-treesitter/install.lua	/^local function get_job_status()$/;"	f
get_keyword_length	plugged/nvim-cmp/lua/cmp/source.lua	/^source.get_keyword_length = function(self)$/;"	f	unknown:source
get_keyword_pattern	plugged/cmp_luasnip/lua/cmp_luasnip/init.lua	/^source.get_keyword_pattern = function()$/;"	f	unknown:source
get_keyword_pattern	plugged/nvim-cmp/lua/cmp/source.lua	/^source.get_keyword_pattern = function(self)$/;"	f	unknown:source
get_kind	plugged/nvim-cmp/lua/cmp/entry.lua	/^entry.get_kind = function(self)$/;"	f	unknown:entry
get_language_id	plugged/nvim-lspconfig/lua/lspconfig/ocamllsp.lua	/^local get_language_id = function(_, ftype)$/;"	f
get_line_for_node	plugged/nvim-treesitter/lua/nvim-treesitter.lua	/^local get_line_for_node = function(node, type_patterns, transform_fn)$/;"	f
get_local_nodes	plugged/nvim-treesitter/lua/nvim-treesitter/locals.lua	/^function M.get_local_nodes(local_def)$/;"	f	unknown:M
get_locals	plugged/nvim-treesitter/lua/nvim-treesitter/locals.lua	/^function M.get_locals(bufnr)$/;"	f	unknown:M
get_map	plugged/nvim-treesitter/lua/nvim-treesitter/indent.lua	/^  local get_map = function(capture)$/;"	f
get_mark_pos	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def get_mark_pos(name):$/;"	f
get_matches	plugged/nvim-treesitter/lua/nvim-treesitter/query.lua	/^  function M.get_matches(bufnr, query_group)$/;"	f	unknown:M
get_matching_snippets	plugged/ultisnips/pythonx/UltiSnips/snippet/source/snippet_dictionary.py	/^    def get_matching_snippets($/;"	m	class:SnippetDictionary
get_min_indent	plugged/LuaSnip/lua/luasnip/util/util.lua	/^local function get_min_indent(lines)$/;"	f
get_module	plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^function M.get_module(mod_path)$/;"	f	unknown:M
get_named_children	plugged/nvim-treesitter/lua/nvim-treesitter/ts_utils.lua	/^function M.get_named_children(node)$/;"	f	unknown:M
get_next_node	plugged/nvim-treesitter/lua/nvim-treesitter/ts_utils.lua	/^function M.get_next_node(node, allow_switch_parents, allow_next_parent)$/;"	f	unknown:M
get_next_semantic_index	plugged/nvim-cmp/lua/cmp/utils/char.lua	/^char.get_next_semantic_index = function(text, current_index)$/;"	f	unknown:char
get_node_at_cursor	plugged/nvim-treesitter/lua/nvim-treesitter/ts_utils.lua	/^function M.get_node_at_cursor(winnr)$/;"	f	unknown:M
get_node_at_line	plugged/nvim-treesitter/lua/nvim-treesitter/indent.lua	/^local function get_node_at_line(root, lnum)$/;"	f
get_node_range	plugged/nvim-treesitter/lua/nvim-treesitter/ts_utils.lua	/^function M.get_node_range(node_or_range)$/;"	f	unknown:M
get_node_text	plugged/nvim-treesitter/lua/nvim-treesitter/ts_utils.lua	/^function M.get_node_text(node, bufnr)$/;"	f	unknown:M
get_offset	plugged/nvim-cmp/lua/cmp/context.lua	/^context.get_offset = function(self, keyword_pattern)$/;"	f	unknown:context
get_offset	plugged/nvim-cmp/lua/cmp/entry.lua	/^entry.get_offset = function(self)$/;"	f	unknown:entry
get_option	plugged/vim-snippets/pythonx/javascript_snippets.py	/^def get_option(snip, option, default=None):$/;"	f
get_other_matching_providers	plugged/nvim-lspconfig/lua/lspconfig/util.lua	/^function M.get_other_matching_providers(filetype)$/;"	f	unknown:M
get_overwrite	plugged/nvim-cmp/lua/cmp/entry.lua	/^entry.get_overwrite = function(self)$/;"	f	unknown:entry
get_package_path	plugged/nvim-treesitter/lua/nvim-treesitter/utils.lua	/^function M.get_package_path()$/;"	f	unknown:M
get_parser	plugged/nvim-treesitter/lua/nvim-treesitter/parsers.lua	/^function M.get_parser(bufnr, lang)$/;"	f	unknown:M
get_parser_configs	plugged/nvim-treesitter/lua/nvim-treesitter/parsers.lua	/^function M.get_parser_configs()$/;"	f	unknown:M
get_parser_info_dir	plugged/nvim-treesitter/lua/nvim-treesitter/utils.lua	/^function M.get_parser_info_dir()$/;"	f	unknown:M
get_parser_install_dir	plugged/nvim-treesitter/lua/nvim-treesitter/utils.lua	/^function M.get_parser_install_dir(folder_name)$/;"	f	unknown:M
get_parser_install_info	plugged/nvim-treesitter/lua/nvim-treesitter/install.lua	/^local function get_parser_install_info(lang, validate)$/;"	f
get_path_sep	plugged/nvim-treesitter/lua/nvim-treesitter/utils.lua	/^function M.get_path_sep()$/;"	f	unknown:M
get_pattern_expand_helper	plugged/LuaSnip/lua/luasnip/nodes/snippet.lua	/^function Snippet:get_pattern_expand_helper()$/;"	f	unknown:Snippet
get_previous_node	plugged/nvim-treesitter/lua/nvim-treesitter/ts_utils.lua	/^function M.get_previous_node(node, allow_switch_parents, allow_previous_parent)$/;"	f	unknown:M
get_probe_dir	plugged/nvim-lspconfig/lua/lspconfig/angularls.lua	/^local function get_probe_dir(root_dir)$/;"	f
get_query	plugged/nvim-treesitter/lua/nvim-treesitter/query.lua	/^  function M.get_query(lang, query_name)$/;"	f	unknown:M
get_query_guard	plugged/nvim-treesitter/lua/nvim-treesitter/query.lua	/^local function get_query_guard(query)$/;"	f
get_reason	plugged/nvim-cmp/lua/cmp/context.lua	/^context.get_reason = function(self)$/;"	f	unknown:context
get_references	plugged/nvim-treesitter/lua/nvim-treesitter/locals.lua	/^function M.get_references(bufnr)$/;"	f	unknown:M
get_replace_range	plugged/nvim-cmp/lua/cmp/entry.lua	/^entry.get_replace_range = function(self)$/;"	f	unknown:entry
get_revision	plugged/nvim-treesitter/lua/nvim-treesitter/install.lua	/^local function get_revision(lang)$/;"	f
get_root_for_node	plugged/nvim-treesitter/lua/nvim-treesitter/ts_utils.lua	/^function M.get_root_for_node(node)$/;"	f	unknown:M
get_root_for_position	plugged/nvim-treesitter/lua/nvim-treesitter/ts_utils.lua	/^function M.get_root_for_position(line, col, root_lang_tree)$/;"	f	unknown:M
get_scope_tree	plugged/nvim-treesitter/lua/nvim-treesitter/locals.lua	/^function M.get_scope_tree(node, bufnr)$/;"	f	unknown:M
get_scopes	plugged/nvim-treesitter/lua/nvim-treesitter/locals.lua	/^function M.get_scopes(bufnr)$/;"	f	unknown:M
get_selected_entry	plugged/nvim-cmp/lua/cmp/view.lua	/^view.get_selected_entry = function(self)$/;"	f	unknown:view
get_selected_entry	plugged/nvim-cmp/lua/cmp/view/custom_entries_view.lua	/^custom_entries_view.get_selected_entry = function(self)$/;"	f	unknown:custom_entries_view
get_selected_entry	plugged/nvim-cmp/lua/cmp/view/native_entries_view.lua	/^native_entries_view.get_selected_entry = function(self)$/;"	f	unknown:native_entries_view
get_selection	plugged/LuaSnip/lua/luasnip/util/util.lua	/^local function get_selection()$/;"	f
get_site_dir	plugged/nvim-treesitter/lua/nvim-treesitter/utils.lua	/^function M.get_site_dir()$/;"	f	unknown:M
get_snippet_filetypes	plugged/LuaSnip/lua/luasnip/util/util.lua	/^local function get_snippet_filetypes(filetype)$/;"	f
get_snippets	plugged/ultisnips/pythonx/UltiSnips/snippet/source/base.py	/^    def get_snippets($/;"	m	class:SnippetSource
get_snippets_rtp	plugged/LuaSnip/lua/luasnip/loaders/from_vscode.lua	/^local function get_snippets_rtp()$/;"	f
get_source_config	plugged/nvim-cmp/lua/cmp/config.lua	/^config.get_source_config = function(name)$/;"	f	unknown:config
get_sources	plugged/nvim-cmp/lua/cmp/core.lua	/^core.get_sources = function(self, statuses)$/;"	f	unknown:core
get_static_args	plugged/LuaSnip/lua/luasnip/nodes/node.lua	/^function Node:get_static_args()$/;"	f	unknown:Node
get_static_text	plugged/LuaSnip/lua/luasnip/nodes/choiceNode.lua	/^function ChoiceNode:get_static_text()$/;"	f	unknown:ChoiceNode
get_static_text	plugged/LuaSnip/lua/luasnip/nodes/dynamicNode.lua	/^function DynamicNode:get_static_text()$/;"	f	unknown:DynamicNode
get_static_text	plugged/LuaSnip/lua/luasnip/nodes/functionNode.lua	/^function FunctionNode:get_static_text()$/;"	f	unknown:FunctionNode
get_static_text	plugged/LuaSnip/lua/luasnip/nodes/node.lua	/^function Node:get_static_text()$/;"	f	unknown:Node
get_static_text	plugged/LuaSnip/lua/luasnip/nodes/snippet.lua	/^function Snippet:get_static_text()$/;"	f	unknown:Snippet
get_tabstops	plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^    def get_tabstops(self):$/;"	m	class:SnippetInstance
get_text	plugged/LuaSnip/lua/luasnip/nodes/node.lua	/^function Node:get_text()$/;"	f	unknown:Node
get_tree_root	plugged/nvim-treesitter/lua/nvim-treesitter/parsers.lua	/^function M.get_tree_root(bufnr)$/;"	f	unknown:M
get_trigger_characters	plugged/cmp-nvim-lsp/lua/cmp_nvim_lsp/source.lua	/^source.get_trigger_characters = function(self)$/;"	f	unknown:source
get_trigger_characters	plugged/nvim-cmp/lua/cmp/config/default.lua	/^      get_trigger_characters = function(trigger_characters)$/;"	f
get_trigger_characters	plugged/nvim-cmp/lua/cmp/source.lua	/^source.get_trigger_characters = function(self)$/;"	f	unknown:source
get_typescript_server_path	plugged/nvim-lspconfig/lua/lspconfig/volar.lua	/^local function get_typescript_server_path(root_dir)$/;"	f
get_update_strategy	plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^function M.get_update_strategy()$/;"	f	unknown:M
get_view	plugged/nvim-cmp/lua/cmp/entry.lua	/^entry.get_view = function(self, suggest_offset)$/;"	f	unknown:entry
get_vim_item	plugged/nvim-cmp/lua/cmp/entry.lua	/^entry.get_vim_item = function(self, suggest_offset)$/;"	f	unknown:entry
get_vim_range	plugged/nvim-treesitter/lua/nvim-treesitter/ts_utils.lua	/^function M.get_vim_range(range, buf)$/;"	f	unknown:M
get_word	plugged/nvim-cmp/lua/cmp/entry.lua	/^entry.get_word = function(self)$/;"	f	unknown:entry
get_word	plugged/nvim-cmp/lua/cmp/utils/str.lua	/^str.get_word = function(text, stop_char)$/;"	f	unknown:str
get_workspace_dir	plugged/nvim-lspconfig/lua/lspconfig/jdtls.lua	/^local function get_workspace_dir()$/;"	f
ghcide	plugged/nvim-lspconfig/CONFIG.md	/^## ghcide$/;"	s	chapter:Configurations
gitstatus#doctor#Say	plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^function! gitstatus#doctor#Say() abort$/;"	f
gitstatus#getIndicator	plugged/nerdtree-git-plugin/autoload/gitstatus.vim	/^function! gitstatus#getIndicator(status) abort$/;"	f
gitstatus#isWin	plugged/nerdtree-git-plugin/autoload/gitstatus.vim	/^function! gitstatus#isWin() abort$/;"	f
gitstatus#job#Spawn	plugged/nerdtree-git-plugin/autoload/gitstatus/job.vim	/^function! gitstatus#job#Spawn(name, cmd, opts) abort$/;"	f
gitstatus#listener#New	plugged/nerdtree-git-plugin/autoload/gitstatus/listener.vim	/^function! gitstatus#listener#New(opts) abort$/;"	f
gitstatus#log#NewLogger	plugged/nerdtree-git-plugin/autoload/gitstatus/log.vim	/^function! gitstatus#log#NewLogger(level) abort$/;"	f
gitstatus#shouldConceal	plugged/nerdtree-git-plugin/autoload/gitstatus.vim	/^function! gitstatus#shouldConceal() abort$/;"	f
gitstatus#util#BuildGitStatusCommand	plugged/nerdtree-git-plugin/autoload/gitstatus/util.vim	/^function! gitstatus#util#BuildGitStatusCommand(root, opts) abort$/;"	f
gitstatus#util#BuildGitWorkdirCommand	plugged/nerdtree-git-plugin/autoload/gitstatus/util.vim	/^function! gitstatus#util#BuildGitWorkdirCommand(root, opts) abort$/;"	f
gitstatus#util#FormatPath	plugged/nerdtree-git-plugin/autoload/gitstatus/util.vim	/^        function! gitstatus#util#FormatPath(path) abort$/;"	f
gitstatus#util#FormatPath	plugged/nerdtree-git-plugin/autoload/gitstatus/util.vim	/^    function! gitstatus#util#FormatPath(path) abort$/;"	f
gitstatus#util#ParseGitStatusLine	plugged/nerdtree-git-plugin/autoload/gitstatus/util.vim	/^function! gitstatus#util#ParseGitStatusLine(statusLine, opts) abort$/;"	f
gitstatus#util#ParseGitStatusLines	plugged/nerdtree-git-plugin/autoload/gitstatus/util.vim	/^function! gitstatus#util#ParseGitStatusLines(root, statusLines, opts) abort$/;"	f
gitstatus#util#UpdateParentDirsStatus	plugged/nerdtree-git-plugin/autoload/gitstatus/util.vim	/^function! gitstatus#util#UpdateParentDirsStatus(cache, root, pathStr, statusKey, opts) abort$/;"	f
glimmer	plugged/nvim-treesitter/lockfile.json	/^  "glimmer": {$/;"	o
global	plugged/nvim-cmp/lua/cmp/init.lua	/^  global = function(c)$/;"	f
glsl	plugged/nvim-treesitter/lockfile.json	/^  "glsl": {$/;"	o
go	plugged/nvim-treesitter/lockfile.json	/^  "go": {$/;"	o
godotResource	plugged/nvim-treesitter/lockfile.json	/^  "godotResource": {$/;"	o
goimports	lua/lsp/go.lua	/^function goimports(timeout_ms)$/;"	f
gomod	plugged/nvim-treesitter/lockfile.json	/^  "gomod": {$/;"	o
gopls	plugged/nvim-lspconfig/CONFIG.md	/^## gopls$/;"	s	chapter:Configurations
goto_node	plugged/nvim-treesitter/lua/nvim-treesitter/ts_utils.lua	/^function M.goto_node(node, goto_end, avoid_set_jump)$/;"	f	unknown:M
graphql	plugged/nvim-lspconfig/CONFIG.md	/^## graphql$/;"	s	chapter:Configurations
graphql	plugged/nvim-treesitter/lockfile.json	/^  "graphql": {$/;"	o
grey_color	plugged/vim-one/colors/one.vim	/^  fun <SID>grey_color(n)$/;"	f
grey_level	plugged/vim-one/colors/one.vim	/^  fun <SID>grey_level(n)$/;"	f
grey_number	plugged/vim-one/colors/one.vim	/^  fun <SID>grey_number(x)$/;"	f
groovyls	plugged/nvim-lspconfig/CONFIG.md	/^## groovyls$/;"	s	chapter:Configurations
guess_edit	plugged/ultisnips/pythonx/UltiSnips/diff.py	/^def guess_edit(initial_line, last_text, current_text, vim_state):$/;"	f
gui_normal	plugged/nvim-treesitter/plugin/nvim-treesitter.vim	/^let gui_normal = s:has_attr('fg', 'gui') ? 'foreground' : 'NONE'$/;"	v
gutentags#add_job	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#add_job(module, tags_file, data) abort$/;"	f
gutentags#build_default_job_options	plugged/vim-gutentags/autoload/gutentags.vim	/^    function! gutentags#build_default_job_options(module) abort$/;"	f
gutentags#chdir	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#chdir(path)$/;"	f
gutentags#cscope#generate	plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^function! gutentags#cscope#generate(proj_dir, tags_file, gen_opts) abort$/;"	f
gutentags#cscope#init	plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^function! gutentags#cscope#init(project_root) abort$/;"	f
gutentags#cscope#on_job_exit	plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^function! gutentags#cscope#on_job_exit(job, exit_val) abort$/;"	f
gutentags#ctags#generate	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^function! gutentags#ctags#generate(proj_dir, tags_file, gen_opts) abort$/;"	f
gutentags#ctags#init	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^function! gutentags#ctags#init(project_root) abort$/;"	f
gutentags#ctags#on_job_exit	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^function! gutentags#ctags#on_job_exit(job, exit_val) abort$/;"	f
gutentags#default_get_project_root	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#default_get_project_root(path) abort$/;"	f
gutentags#default_stderr_cb	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#default_stderr_cb(chan, msg) abort$/;"	f
gutentags#default_stdout_cb	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#default_stdout_cb(chan, msg) abort$/;"	f
gutentags#error	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#error(message)$/;"	f
gutentags#fake	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#fake(...)$/;"	f
gutentags#find_job_index_by_data	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#find_job_index_by_data(module, data) abort$/;"	f
gutentags#find_job_index_by_tags_file	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#find_job_index_by_tags_file(module, tags_file) abort$/;"	f
gutentags#get_cachefile	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_cachefile(root_dir, filename) abort$/;"	f
gutentags#get_job_data	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_job_data(module, job_idx) abort$/;"	f
gutentags#get_job_tags_file	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_job_tags_file(module, job_idx) abort$/;"	f
gutentags#get_plat_file	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_plat_file(filename) abort$/;"	f
gutentags#get_project_file_list_cmd	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_project_file_list_cmd(path) abort$/;"	f
gutentags#get_project_info	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_project_info(path) abort$/;"	f
gutentags#get_project_root	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_project_root(path) abort$/;"	f
gutentags#get_res_file	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_res_file(filename) abort$/;"	f
gutentags#gtags_cscope#generate	plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! gutentags#gtags_cscope#generate(proj_dir, tags_file, gen_opts) abort$/;"	f
gutentags#gtags_cscope#init	plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! gutentags#gtags_cscope#init(project_root) abort$/;"	f
gutentags#gtags_cscope#on_job_exit	plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! gutentags#gtags_cscope#on_job_exit(job, exit_val) abort$/;"	f
gutentags#inprogress	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#inprogress()$/;"	f
gutentags#is_path_rooted	plugged/vim-gutentags/autoload/gutentags.vim	/^    function! gutentags#is_path_rooted(path) abort$/;"	f
gutentags#make_args	plugged/vim-gutentags/autoload/gutentags.vim	/^    function! gutentags#make_args(cmd) abort$/;"	f
gutentags#normalizepath	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#normalizepath(path)$/;"	f
gutentags#on_vim_leave_pre	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#on_vim_leave_pre() abort$/;"	f
gutentags#remove_job	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#remove_job(module, job_idx) abort$/;"	f
gutentags#remove_job_by_data	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#remove_job_by_data(module, data) abort$/;"	f
gutentags#rescan	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#rescan(...)$/;"	f
gutentags#setup_gutentags	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#setup_gutentags() abort$/;"	f
gutentags#shellslash	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#shellslash(path)$/;"	f
gutentags#start_job	plugged/vim-gutentags/autoload/gutentags.vim	/^    function! gutentags#start_job(cmd, opts) abort$/;"	f
gutentags#statusline	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#statusline(...) abort$/;"	f
gutentags#statusline_cb	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#statusline_cb(fmt_cb, ...) abort$/;"	f
gutentags#stripslash	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#stripslash(path)$/;"	f
gutentags#throw	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#throw(message)$/;"	f
gutentags#toggletrace	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#toggletrace(...)$/;"	f
gutentags#trace	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#trace(message, ...)$/;"	f
gutentags#validate_cmd	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#validate_cmd(cmd) abort$/;"	f
gutentags#warning	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#warning(message)$/;"	f
gutentags_detect	plugged/vim-gutentags/plugin/gutentags.vim	/^augroup gutentags_detect$/;"	a
handle_action	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/common.py	/^def handle_action(head, tail, line_index):$/;"	f
handle_context	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/common.py	/^def handle_context(tail, line_index):$/;"	f
handle_extends	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/common.py	/^def handle_extends(tail, line_index):$/;"	f
hanging_indent	plugged/nvim-treesitter/tests/indent/python/hanging_indent.py	/^def hanging_indent($/;"	f
has	plugged/nvim-treesitter/lua/nvim-treesitter/caching.lua	/^  function cache.has(type_name, bufnr)$/;"	f	unknown:cache
has_ancestor	plugged/nvim-treesitter/lua/nvim-treesitter/query_predicates.lua	/^local function has_ancestor(match, pattern, bufnr, pred)$/;"	f
has_bins	plugged/nvim-lspconfig/lua/lspconfig/util.lua	/^function M.has_bins(...)$/;"	f	unknown:M
has_cjk	plugged/vim-snippets/pythonx/vimsnippets.py	/^def has_cjk(s):$/;"	f
has_cursor_line_text_edit	plugged/nvim-cmp/lua/cmp/core.lua	/^          local has_cursor_line_text_edit = (function()$/;"	f
has_error	plugged/nvim-treesitter/lua/nvim-treesitter/tsrange.lua	/^function TSRange:has_error()$/;"	f	unknown:TSRange
has_next_tab	plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^    def has_next_tab(self, jump_direction: JumpDirection):$/;"	m	class:SnippetInstance
has_option	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def has_option(self, opt):$/;"	m	class:SnippetDefinition
has_parser	plugged/nvim-treesitter/lua/nvim-treesitter/parsers.lua	/^function M.has_parser(lang)$/;"	f	unknown:M
has_prefix	plugged/nvim-cmp/lua/cmp/utils/str.lua	/^str.has_prefix = function(text, prefix)$/;"	f	unknown:str
has_query_files	plugged/nvim-treesitter/lua/nvim-treesitter/query.lua	/^function M.has_query_files(lang, query_name)$/;"	f	unknown:M
has_scrollbar	plugged/nvim-cmp/lua/cmp/utils/window.lua	/^window.has_scrollbar = function(self)$/;"	f	unknown:window
has_version	plugged/ultisnips/test/vim_interface.py	/^    def has_version(self, major, minor, patchlevel):$/;"	m	class:VimInterface
haskell	plugged/nvim-treesitter/lockfile.json	/^  "haskell": {$/;"	o
haxe_language_server	plugged/nvim-lspconfig/CONFIG.md	/^## haxe_language_server$/;"	s	chapter:Configurations
hcl	plugged/nvim-treesitter/lockfile.json	/^  "hcl": {$/;"	o
head_tail	plugged/ultisnips/pythonx/UltiSnips/text.py	/^def head_tail(line):$/;"	f
health#lspconfig#check	plugged/nvim-lspconfig/autoload/health/lspconfig.vim	/^function! health#lspconfig#check()$/;"	f
health#nvim_treesitter#check	plugged/nvim-treesitter/autoload/health/nvim_treesitter.vim	/^function! health#nvim_treesitter#check()$/;"	f
heex	plugged/nvim-treesitter/lockfile.json	/^  "heex": {$/;"	o
helpers	plugged/nvim-lspconfig/test/lspconfig_spec.lua	/^local helpers = require 'test.functional.helpers'(after_each)$/;"	f
heredoc_example	plugged/neodark.vim/test/test.rb	/^    def heredoc_example$/;"	f	class:VimColors.RubyExample
hide	plugged/nvim-cmp/lua/cmp/view/ghost_text_view.lua	/^ghost_text_view.hide = function(self)$/;"	f	unknown:ghost_text_view
hie	plugged/nvim-lspconfig/CONFIG.md	/^## hie$/;"	s	chapter:Configurations
highlight_node	plugged/nvim-treesitter/lua/nvim-treesitter/ts_utils.lua	/^function M.highlight_node(node, buf, hl_namespace, hl_group)$/;"	f	unknown:M
highlight_range	plugged/nvim-treesitter/lua/nvim-treesitter/ts_utils.lua	/^function M.highlight_range(range, buf, hl_namespace, hl_group)$/;"	f	unknown:M
hjson	plugged/nvim-treesitter/lockfile.json	/^  "hjson": {$/;"	o
hls	plugged/nvim-lspconfig/CONFIG.md	/^## hls$/;"	s	chapter:Configurations
html	plugged/nvim-lspconfig/CONFIG.md	/^## html$/;"	s	chapter:Configurations
html	plugged/nvim-treesitter/lockfile.json	/^  "html": {$/;"	o
iS	plugged/ultisnips/ftplugin/snippets.vim	/^onoremap <silent><buffer> iS :<C-U>call <SID>UltiSnippetTextObj(1)<CR>$/;"	m
iS	plugged/ultisnips/ftplugin/snippets.vim	/^xnoremap <silent><buffer> iS :<C-U>call <SID>UltiSnippetTextObj(1)<CR>$/;"	m
icon	plugged/vim-nerdtree-syntax-highlight/after/syntax/nerdtree.vim	/^    let icon = g:WebDevIconsUnicodeDecorateFileNodesExactSymbols[key]$/;"	v
icon	plugged/vim-nerdtree-syntax-highlight/after/syntax/nerdtree.vim	/^    let icon = g:WebDevIconsUnicodeDecorateFileNodesExtensionSymbols[key]$/;"	v
icon	plugged/vim-nerdtree-syntax-highlight/after/syntax/nerdtree.vim	/^    let icon = g:WebDevIconsUnicodeDecorateFileNodesPatternSymbols[key]$/;"	v
icon	plugged/vim-nerdtree-syntax-highlight/after/syntax/nerdtree.vim	/^  let icon = g:WebDevIconsUnicodeDecorateFileNodesDefaultSymbol$/;"	v
icon_closed	plugged/vim-nerdtree-syntax-highlight/after/syntax/nerdtree.vim	/^  let icon_closed = g:WebDevIconsUnicodeDecorateFolderNodesDefaultSymbol$/;"	v
icon_identifier	plugged/vim-nerdtree-syntax-highlight/after/syntax/nerdtree.vim	/^  let icon_identifier = 'nerdtreeExactMatchIcon_'.key$/;"	v
icon_identifier	plugged/vim-nerdtree-syntax-highlight/after/syntax/nerdtree.vim	/^  let icon_identifier = 'nerdtreeFileExtensionIcon_'.key$/;"	v
icon_identifier	plugged/vim-nerdtree-syntax-highlight/after/syntax/nerdtree.vim	/^  let icon_identifier = 'nerdtreePatternMatchIcon_'.suffix$/;"	v
icon_open	plugged/vim-nerdtree-syntax-highlight/after/syntax/nerdtree.vim	/^  let icon_open = g:DevIconsDefaultFolderOpenSymbol$/;"	v
identifier	plugged/nvim-treesitter/queries/c_sharp/highlights.scm	/^  (identifier) @constant) @constant.macro$/;"	f
identifier	plugged/nvim-treesitter/queries/gdscript/highlights.scm	/^  (identifier) @parameter)$/;"	f
identifier	plugged/nvim-treesitter/queries/python/locals.scm	/^  (identifier) @definition.parameter)$/;"	f
identifier	plugged/vim-nerdtree-syntax-highlight/after/syntax/nerdtree.vim	/^  let identifier = 'WebDevIconsDefaultFileSymbol '$/;"	v
identifier	plugged/vim-nerdtree-syntax-highlight/after/syntax/nerdtree.vim	/^  let identifier = 'WebDevIconsDefaultFolderSymbol'$/;"	v
identity	plugged/nvim-treesitter/lua/nvim-treesitter/utils.lua	/^function M.identity(a)$/;"	f	unknown:M
idris2_lsp	plugged/nvim-lspconfig/CONFIG.md	/^## idris2_lsp$/;"	s	chapter:Configurations
if_nil	plugged/cmp-nvim-lsp/lua/cmp_nvim_lsp/init.lua	/^local if_nil = function(val, default)$/;"	f
ignore_missing_imports	plugged/ultisnips/mypy.ini	/^ignore_missing_imports = True$/;"	k	section:mypy-unidecode
ignore_missing_imports	plugged/ultisnips/mypy.ini	/^ignore_missing_imports = True$/;"	k	section:mypy-vim
ignores	plugged/ultisnips/test/test_Selection.py	/^    ignores = ["H"]$/;"	v	class:SelectModeMappings_IgnoreMappings1_ECR
ignores	plugged/ultisnips/test/test_Selection.py	/^    ignores = ["e", "H"]$/;"	v	class:SelectModeMappings_IgnoreMappings2_ECR
ignores	plugged/ultisnips/test/test_Selection.py	/^    ignores = ["e"]$/;"	v	class:SelectModeMappings_IgnoreMappings_ECR
ignores	plugged/ultisnips/test/test_Selection.py	/^    ignores = []$/;"	v	class:_SelectModeMappings
image_repro	plugged/ultisnips/Makefile	/^image_repro: image_vim_82_py39$/;"	t
image_vim_74_py35	plugged/ultisnips/Makefile	/^image_vim_74_py35:$/;"	t
image_vim_74_py36	plugged/ultisnips/Makefile	/^image_vim_74_py36:$/;"	t
image_vim_80_py35	plugged/ultisnips/Makefile	/^image_vim_80_py35:$/;"	t
image_vim_80_py36	plugged/ultisnips/Makefile	/^image_vim_80_py36:$/;"	t
image_vim_81_py35	plugged/ultisnips/Makefile	/^image_vim_81_py35:$/;"	t
image_vim_81_py36	plugged/ultisnips/Makefile	/^image_vim_81_py36:$/;"	t
image_vim_81_py37	plugged/ultisnips/Makefile	/^image_vim_81_py37:$/;"	t
image_vim_81_py38	plugged/ultisnips/Makefile	/^image_vim_81_py38:$/;"	t
image_vim_81_py39	plugged/ultisnips/Makefile	/^image_vim_81_py39:$/;"	t
image_vim_82_py35	plugged/ultisnips/Makefile	/^image_vim_82_py35:$/;"	t
image_vim_82_py36	plugged/ultisnips/Makefile	/^image_vim_82_py36:$/;"	t
image_vim_82_py37	plugged/ultisnips/Makefile	/^image_vim_82_py37:$/;"	t
image_vim_82_py38	plugged/ultisnips/Makefile	/^image_vim_82_py38:$/;"	t
image_vim_82_py39	plugged/ultisnips/Makefile	/^image_vim_82_py39:$/;"	t
image_vim_git_py35	plugged/ultisnips/Makefile	/^image_vim_git_py35:$/;"	t
image_vim_git_py36	plugged/ultisnips/Makefile	/^image_vim_git_py36:$/;"	t
image_vim_git_py37	plugged/ultisnips/Makefile	/^image_vim_git_py37:$/;"	t
image_vim_git_py38	plugged/ultisnips/Makefile	/^image_vim_git_py38:$/;"	t
image_vim_git_py39	plugged/ultisnips/Makefile	/^image_vim_git_py39:$/;"	t
import	plugged/LuaSnip/lua/luasnip/extras/_lambda.lua	/^function lambda.import(tname, context)$/;"	f	unknown:lambda
import_name	plugged/LuaSnip/lua/luasnip/extras/_lambda.lua	/^local function import_name(name, fun, context)$/;"	f
increase_ext_prio	plugged/LuaSnip/lua/luasnip/util/util.lua	/^local function increase_ext_prio(opts, amount)$/;"	f
indent	plugged/LuaSnip/lua/luasnip/nodes/choiceNode.lua	/^function ChoiceNode:indent(indentstr)$/;"	f	unknown:ChoiceNode
indent	plugged/LuaSnip/lua/luasnip/nodes/dynamicNode.lua	/^function DynamicNode:indent(_) end$/;"	f	unknown:DynamicNode
indent	plugged/LuaSnip/lua/luasnip/nodes/functionNode.lua	/^function FunctionNode:indent(_) end$/;"	f	unknown:FunctionNode
indent	plugged/LuaSnip/lua/luasnip/nodes/node.lua	/^function Node:indent(indentstr)$/;"	f	unknown:Node
indent	plugged/LuaSnip/lua/luasnip/nodes/snippet.lua	/^	function snip:indent(parent_indent)$/;"	f	unknown:snip
indent	plugged/LuaSnip/lua/luasnip/nodes/snippet.lua	/^function Snippet:indent(prefix)$/;"	f	unknown:Snippet
indent	plugged/LuaSnip/lua/luasnip/util/util.lua	/^local function indent(text, indentstring)$/;"	f
indent	plugged/nvim-lspconfig/scripts/docgen.lua	/^local function indent(n, s)$/;"	f
indent_lines	plugged/nvim-lspconfig/lua/lspconfig/ui/lspinfo.lua	/^local function indent_lines(lines, offset)$/;"	f
indent_new_line	plugged/nvim-treesitter/tests/indent/common.lua	/^function M.indent_new_line(file, spec, opts)$/;"	f	unknown:M
indent_to_spaces	plugged/ultisnips/pythonx/UltiSnips/indent_util.py	/^    def indent_to_spaces(self, indent):$/;"	m	class:IndentUtil
indent_whole_file	plugged/nvim-treesitter/tests/indent/common.lua	/^function M.indent_whole_file(file, opts)$/;"	f	unknown:M
index	plugged/nvim-lspconfig/lua/lspconfig/zk.lua	/^configs.zk.index = function()$/;"	f	unknown:configs.zk
index_of	plugged/nvim-treesitter/lua/nvim-treesitter/utils.lua	/^function M.index_of(tbl, obj)$/;"	f	unknown:M
info	plugged/nvim-cmp/lua/cmp/utils/window.lua	/^window.info = function(self)$/;"	f	unknown:window
info	plugged/nvim-cmp/lua/cmp/view/custom_entries_view.lua	/^custom_entries_view.info = function(self)$/;"	f	unknown:custom_entries_view
info	plugged/nvim-cmp/lua/cmp/view/native_entries_view.lua	/^native_entries_view.info = function(self)$/;"	f	unknown:native_entries_view
inherit	plugged/nvim-cmp/lua/cmp/utils/highlight.lua	/^highlight.inherit = function(name, source, override)$/;"	f	unknown:highlight
init	plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^function M.init()$/;"	f	unknown:M
init_nodes	plugged/LuaSnip/lua/luasnip/nodes/choiceNode.lua	/^function ChoiceNode:init_nodes()$/;"	f	unknown:ChoiceNode
init_nodes	plugged/LuaSnip/lua/luasnip/nodes/snippet.lua	/^function Snippet:init_nodes()$/;"	f	unknown:Snippet
init_opts	plugged/LuaSnip/lua/luasnip/nodes/snippet.lua	/^local function init_opts(opts)$/;"	f
init_selection	plugged/nvim-treesitter/lua/nvim-treesitter/incremental_selection.lua	/^function M.init_selection()$/;"	f	unknown:M
initial_line	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    initial_line = 0$/;"	v	class:TestGuessing_BackspaceOneChar
initial_line	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    initial_line = 0$/;"	v	class:TestGuessing_DeleteOneChar
initial_line	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    initial_line = 0$/;"	v	class:TestGuessing_InsertOneChar
initial_line	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    initial_line = 0$/;"	v	class:TestGuessing_InsertOneChar1
initial_line	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    initial_line = 0$/;"	v	class:TestGuessing_Noop0
initialize	plugged/neodark.vim/test/test.rb	/^    def initialize(attributes = {})$/;"	f	class:VimColors.RubyExample
input	plugged/nvim-cmp/lua/cmp/utils/spec.lua	/^    input = function(char)$/;"	f
input_enter	plugged/LuaSnip/lua/luasnip/nodes/choiceNode.lua	/^function ChoiceNode:input_enter()$/;"	f	unknown:ChoiceNode
input_enter	plugged/LuaSnip/lua/luasnip/nodes/dynamicNode.lua	/^function DynamicNode:input_enter()$/;"	f	unknown:DynamicNode
input_enter	plugged/LuaSnip/lua/luasnip/nodes/functionNode.lua	/^function FunctionNode:input_enter()$/;"	f	unknown:FunctionNode
input_enter	plugged/LuaSnip/lua/luasnip/nodes/insertNode.lua	/^function ExitNode:input_enter(no_move)$/;"	f	unknown:ExitNode
input_enter	plugged/LuaSnip/lua/luasnip/nodes/insertNode.lua	/^function InsertNode:input_enter(no_move)$/;"	f	unknown:InsertNode
input_enter	plugged/LuaSnip/lua/luasnip/nodes/node.lua	/^function Node:input_enter(_)$/;"	f	unknown:Node
input_enter	plugged/LuaSnip/lua/luasnip/nodes/snippet.lua	/^function Snippet:input_enter()$/;"	f	unknown:Snippet
input_enter	plugged/LuaSnip/lua/luasnip/nodes/textNode.lua	/^function TextNode:input_enter(no_move)$/;"	f	unknown:TextNode
input_leave	plugged/LuaSnip/lua/luasnip/nodes/choiceNode.lua	/^function ChoiceNode:input_leave()$/;"	f	unknown:ChoiceNode
input_leave	plugged/LuaSnip/lua/luasnip/nodes/dynamicNode.lua	/^function DynamicNode:input_leave()$/;"	f	unknown:DynamicNode
input_leave	plugged/LuaSnip/lua/luasnip/nodes/insertNode.lua	/^function ExitNode:input_leave()$/;"	f	unknown:ExitNode
input_leave	plugged/LuaSnip/lua/luasnip/nodes/insertNode.lua	/^function InsertNode:input_leave()$/;"	f	unknown:InsertNode
input_leave	plugged/LuaSnip/lua/luasnip/nodes/node.lua	/^function Node:input_leave()$/;"	f	unknown:Node
input_leave	plugged/LuaSnip/lua/luasnip/nodes/snippet.lua	/^function Snippet:input_leave()$/;"	f	unknown:Snippet
insert_into_jumplist	plugged/LuaSnip/lua/luasnip/nodes/snippet.lua	/^local function insert_into_jumplist(snippet, start_node, current_node)$/;"	f
insert_to_path	plugged/nvim-treesitter/lua/nvim-treesitter/query.lua	/^  local function insert_to_path(object, path, value)$/;"	f
insort	plugged/nvim-cmp/lua/cmp/utils/binary.lua	/^binary.insort = function(list, item, func)$/;"	f	unknown:binary
install	plugged/nvim-treesitter/lua/nvim-treesitter/install.lua	/^local function install(options)$/;"	f
install_health	plugged/nvim-treesitter/lua/nvim-treesitter/health.lua	/^local function install_health()$/;"	f
install_info	plugged/nvim-treesitter/lua/nvim-treesitter/info.lua	/^local function install_info()$/;"	f
install_lang	plugged/nvim-treesitter/lua/nvim-treesitter/install.lua	/^local function install_lang(lang, ask_reinstall, cache_folder, install_folder, with_sync, genera/;"	f
installed	plugged/nvim-treesitter/lua/nvim-treesitter/install.lua	/^      installed = vim.tbl_filter(function(l)$/;"	f
installed_parsers	plugged/nvim-treesitter/lua/nvim-treesitter/info.lua	/^function M.installed_parsers()$/;"	f	unknown:M
instantiate	plugged/LuaSnip/lua/luasnip/extras/_lambda.lua	/^function lambda.instantiate(e)$/;"	f	unknown:lambda
instantiate	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def instantiate(self, snippet_instance, initial_text, indent):$/;"	m	class:SnippetDefinition
instantiate	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/snipmate.py	/^    def instantiate(self, snippet_instance, initial_text, indent):$/;"	m	class:SnipMateSnippetDefinition
instantiate	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/ulti_snips.py	/^    def instantiate(self, snippet_instance, initial_text, indent):$/;"	m	class:UltiSnipsSnippetDefinition
integration	plugged/nvim-cmp/Makefile	/^integration:$/;"	t
intelephense	plugged/nvim-lspconfig/CONFIG.md	/^## intelephense$/;"	s	chapter:Configurations
interpolate	plugged/LuaSnip/lua/luasnip/extras/fmt.lua	/^local function interpolate(fmt, args, opts)$/;"	f
invalidate_query_cache	plugged/nvim-treesitter/lua/nvim-treesitter/query.lua	/^  function M.invalidate_query_cache(lang, query_name)$/;"	f	unknown:M
invalidate_query_file	plugged/nvim-treesitter/lua/nvim-treesitter/query.lua	/^function M.invalidate_query_file(fname)$/;"	f	unknown:M
invoke	plugged/nvim-cmp/lua/cmp/config/mapping.lua	/^      invoke = function(...)$/;"	f
isPE	plugged/LuaSnip/lua/luasnip/extras/_lambda.lua	/^local function isPE(obj)$/;"	f
is_absolute	plugged/nvim-lspconfig/lua/lspconfig/util.lua	/^  local function is_absolute(filename)$/;"	f
is_alnum	plugged/nvim-cmp/lua/cmp/utils/char.lua	/^char.is_alnum = function(byte)$/;"	f	unknown:char
is_alpha	plugged/nvim-cmp/lua/cmp/utils/char.lua	/^char.is_alpha = function(byte)$/;"	f	unknown:char
is_available	plugged/cmp-nvim-lsp/lua/cmp_nvim_lsp/source.lua	/^source.is_available = function(self)$/;"	f	unknown:source
is_available	plugged/cmp_luasnip/lua/cmp_luasnip/init.lua	/^function source:is_available()$/;"	f	unknown:source
is_available	plugged/nvim-cmp/lua/cmp/source.lua	/^source.is_available = function(self)$/;"	f	unknown:source
is_buffer_changed_outside	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def is_buffer_changed_outside(self):$/;"	m	class:VimBufferProxy
is_complete_edit	plugged/ultisnips/pythonx/UltiSnips/diff.py	/^def is_complete_edit(initial_line, original, wanted, cmds):$/;"	f
is_deprecated	plugged/nvim-cmp/lua/cmp/entry.lua	/^entry.is_deprecated = function(self)$/;"	f	unknown:entry
is_descendant	plugged/nvim-lspconfig/lua/lspconfig/util.lua	/^  local function is_descendant(root, path)$/;"	f
is_digit	plugged/nvim-cmp/lua/cmp/utils/char.lua	/^char.is_digit = function(byte)$/;"	f	unknown:char
is_dir	plugged/nvim-lspconfig/lua/lspconfig/util.lua	/^  local function is_dir(filename)$/;"	f
is_enabled	plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^function M.is_enabled(mod, lang)$/;"	f	unknown:M
is_escaped	plugged/LuaSnip/lua/luasnip/util/parser.lua	/^local function is_escaped(text, indx)$/;"	f
is_escaped	plugged/LuaSnip/lua/luasnip/util/pattern_tokenizer.lua	/^local function is_escaped(text, indx)$/;"	f
is_file	plugged/nvim-lspconfig/lua/lspconfig/util.lua	/^  local function is_file(filename)$/;"	f
is_focused	plugged/ultisnips/test/vim_interface.py	/^    def is_focused(self, title=None):$/;"	m	class:VimInterfaceWindows
is_forwarding	plugged/nvim-cmp/lua/cmp/context.lua	/^context.is_forwarding = function(self)$/;"	f	unknown:context
is_fs_root	plugged/nvim-lspconfig/lua/lspconfig/util.lua	/^    is_fs_root = function(path)$/;"	f
is_global_table	plugged/LuaSnip/lua/luasnip/extras/_lambda.lua	/^local function is_global_table(n)$/;"	f
is_in_node_range	plugged/nvim-treesitter/lua/nvim-treesitter/ts_utils.lua	/^function M.is_in_node_range(node, line, col)$/;"	f	unknown:M
is_installed	plugged/nvim-treesitter/lua/nvim-treesitter/install.lua	/^local function is_installed(lang)$/;"	f
is_interactive	plugged/LuaSnip/lua/luasnip/nodes/snippet.lua	/^function Snippet:is_interactive()$/;"	f	unknown:Snippet
is_killed	plugged/ultisnips/pythonx/UltiSnips/text_objects/tabstop.py	/^    def is_killed(self):$/;"	m	class:TabStop
is_module	plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^function M.is_module(mod)$/;"	f	unknown:M
is_parent	plugged/nvim-treesitter/lua/nvim-treesitter/ts_utils.lua	/^function M.is_parent(dest, source)$/;"	f	unknown:M
is_printable	plugged/nvim-cmp/lua/cmp/utils/char.lua	/^char.is_printable = function(byte)$/;"	f	unknown:char
is_process_running	plugged/ultisnips/test/vim_interface.py	/^def is_process_running(pid):$/;"	f
is_semantic_index	plugged/nvim-cmp/lua/cmp/utils/char.lua	/^char.is_semantic_index = function(text, index)$/;"	f	unknown:char
is_set	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def is_set(self):$/;"	m	class:_SnippetUtilCursor
is_suitable_mode	plugged/nvim-cmp/lua/cmp/utils/misc.lua	/^misc.is_suitable_mode = function()$/;"	f	unknown:misc
is_supported	plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^      is_supported = function()$/;"	f
is_supported	plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^    is_supported = function()$/;"	f
is_symbol	plugged/nvim-cmp/lua/cmp/utils/char.lua	/^char.is_symbol = function(byte)$/;"	f	unknown:char
is_upper	plugged/nvim-cmp/lua/cmp/utils/char.lua	/^char.is_upper = function(byte)$/;"	f	unknown:char
is_valid_var	plugged/LuaSnip/lua/luasnip/util/environ.lua	/^function Environ.is_valid_var(key)$/;"	f	unknown:Environ
is_white	plugged/nvim-cmp/lua/cmp/utils/char.lua	/^char.is_white = function(byte)$/;"	f	unknown:char
it	plugged/nvim-lspconfig/lua/lspconfig/util.lua	/^    local function it(s, v)$/;"	f
iter_children	plugged/nvim-treesitter/lua/nvim-treesitter/tsrange.lua	/^function TSRange:iter_children()$/;"	f	unknown:TSRange
iter_cmd	plugged/nvim-treesitter/lua/nvim-treesitter/install.lua	/^function M.iter_cmd(cmd_list, i, lang, success_message)$/;"	f	unknown:M
iter_cmd_sync	plugged/nvim-treesitter/lua/nvim-treesitter/install.lua	/^local function iter_cmd_sync(cmd_list)$/;"	f
iter_group_results	plugged/nvim-treesitter/lua/nvim-treesitter/query.lua	/^function M.iter_group_results(bufnr, query_group, root, root_lang)$/;"	f	unknown:M
iter_locals	plugged/nvim-treesitter/lua/nvim-treesitter/locals.lua	/^function M.iter_locals(bufnr, root)$/;"	f	unknown:M
iter_prepared_matches	plugged/nvim-treesitter/lua/nvim-treesitter/query.lua	/^function M.iter_prepared_matches(query, qnode, bufnr, start_row, end_row)$/;"	f	unknown:M
iter_scope_tree	plugged/nvim-treesitter/lua/nvim-treesitter/locals.lua	/^function M.iter_scope_tree(node, bufnr)$/;"	f	unknown:M
iterate_parents	plugged/nvim-lspconfig/lua/lspconfig/util.lua	/^  local function iterate_parents(path)$/;"	f
iterator	plugged/nvim-treesitter/lua/nvim-treesitter/query.lua	/^  local function iterator()$/;"	f
java	plugged/nvim-treesitter/lockfile.json	/^  "java": {$/;"	o
java_language_server	plugged/nvim-lspconfig/CONFIG.md	/^## java_language_server$/;"	s	chapter:Configurations
javascript	plugged/nvim-treesitter/lockfile.json	/^  "javascript": {$/;"	o
jdocsnip	plugged/LuaSnip/Examples/snippets.lua	/^local function jdocsnip(args, _, old_state)$/;"	f
jdtls	plugged/nvim-lspconfig/CONFIG.md	/^## jdtls$/;"	s	chapter:Configurations
jedi_language_server	plugged/nvim-lspconfig/CONFIG.md	/^## jedi_language_server$/;"	s	chapter:Configurations
jsdoc	plugged/nvim-treesitter/lockfile.json	/^  "jsdoc": {$/;"	o
json	plugged/nvim-treesitter/lockfile.json	/^  "json": {$/;"	o
json5	plugged/nvim-treesitter/lockfile.json	/^  "json5": {$/;"	o
json_decode	plugged/LuaSnip/lua/luasnip/loaders/from_vscode.lua	/^local function json_decode(data)$/;"	f
jsonc	plugged/nvim-treesitter/lockfile.json	/^  "jsonc": {$/;"	o
jsonls	plugged/nvim-lspconfig/CONFIG.md	/^## jsonls$/;"	s	chapter:Configurations
julia	plugged/nvim-treesitter/lockfile.json	/^  "julia": {$/;"	o
julials	plugged/nvim-lspconfig/CONFIG.md	/^## julials$/;"	s	chapter:Configurations
jump	plugged/LuaSnip/lua/luasnip/init.lua	/^local function jump(dir)$/;"	f
jump_backwards	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def jump_backwards(self):$/;"	m	class:SnippetManager
jump_forwards	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def jump_forwards(self):$/;"	m	class:SnippetManager
jump_from	plugged/LuaSnip/lua/luasnip/nodes/insertNode.lua	/^function InsertNode:jump_from(dir, no_move)$/;"	f	unknown:InsertNode
jump_from	plugged/LuaSnip/lua/luasnip/nodes/node.lua	/^function Node:jump_from(dir, no_move)$/;"	f	unknown:Node
jump_into	plugged/LuaSnip/lua/luasnip/nodes/choiceNode.lua	/^function ChoiceNode:jump_into(dir, no_move)$/;"	f	unknown:ChoiceNode
jump_into	plugged/LuaSnip/lua/luasnip/nodes/dynamicNode.lua	/^function DynamicNode:jump_into(dir, no_move)$/;"	f	unknown:DynamicNode
jump_into	plugged/LuaSnip/lua/luasnip/nodes/insertNode.lua	/^function ExitNode:jump_into(dir, no_move)$/;"	f	unknown:ExitNode
jump_into	plugged/LuaSnip/lua/luasnip/nodes/insertNode.lua	/^function InsertNode:jump_into(dir, no_move)$/;"	f	unknown:InsertNode
jump_into	plugged/LuaSnip/lua/luasnip/nodes/node.lua	/^function Node:jump_into(_, no_move)$/;"	f	unknown:Node
jump_into	plugged/LuaSnip/lua/luasnip/nodes/snippet.lua	/^function Snippet:jump_into(dir, no_move)$/;"	f	unknown:Snippet
jumpable	plugged/LuaSnip/lua/luasnip/init.lua	/^local function jumpable(dir)$/;"	f
jumpable	plugged/LuaSnip/lua/luasnip/nodes/node.lua	/^function Node:jumpable(dir)$/;"	f	unknown:Node
key	plugged/nvim-cmp/lua/cmp/utils/cache.lua	/^cache.key = function(_, key)$/;"	f	unknown:cache
key	plugged/nvim-treesitter/lua/nvim-treesitter/indent.lua	/^  key = function(bufnr, _, lang)$/;"	f
keys	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = " " + EA + "Hello" + JF + "World"$/;"	v	class:Anon_NoTrigger_FirstCharOfLine
keys	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = "123 abc" + EA + "123" + JF + "456"$/;"	v	class:Anon_Trigger_Multi
keys	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = "abc " + EA$/;"	v	class:Anon_NoTrigger_AfterSpace
keys	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = "abc" + EA + "123" + JF + "456"$/;"	v	class:Anon_NoTrigger_Multi
keys	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = "abc" + EA + "\\nabc" + EX$/;"	v	class:Anon_Trigger_Twice
keys	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = "abc" + EA$/;"	v	class:Anon_NoTrigger_Simple
keys	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = "abc" + EA$/;"	v	class:Anon_Trigger_Simple
keys	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = "blah blah abc" + EA$/;"	v	class:Anon_Trigger_Opts
keys	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = EA + "Hello" + JF + "World"$/;"	v	class:Anon_NoTrigger_BeginningOfLine
keys	plugged/ultisnips/test/test_Autocommands.py	/^    keys = ($/;"	v	class:Autocommands
keys	plugged/ultisnips/test/test_Autotrigger.py	/^    keys = "a"$/;"	v	class:Autotrigger_CanMatchSimpleTrigger
keys	plugged/ultisnips/test/test_Autotrigger.py	/^    keys = "a\\na"$/;"	v	class:Autotrigger_CanMatchContext
keys	plugged/ultisnips/test/test_Autotrigger.py	/^    keys = "abc"$/;"	v	class:Autotrigger_CanExpandOnTriggerWithLengthMoreThanOne
keys	plugged/ultisnips/test/test_Autotrigger.py	/^    keys = "abc"$/;"	v	class:Autotrigger_WillProduceNoExceptionWithVimLowerThan214
keys	plugged/ultisnips/test/test_Autotrigger.py	/^    keys = "if" + EX + "=" + ESC + "o="$/;"	v	class:Autotrigger_CanMatchPreviouslySelectedPlaceholder
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "\\ttest" + EX$/;"	v	class:DoNotTrimSpacesAtEndOfLinesByDefault
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "\\ttest" + EX$/;"	v	class:TrimSpacesAtEndOfLines
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "oouu trig b" + 2 * ARR_L + EX$/;"	v	class:NoUmlautsBeforeTriggerAndCharsAfter
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "te ül" + EX + "hello"$/;"	v	class:Snippet_With_Umlauts_Mirrors
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "te ül" + EX + "hüüll"$/;"	v	class:Snippet_With_Umlauts_Python
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "te ül" + EX + "more text" + JF + JF + "end"$/;"	v	class:Snippet_With_Umlauts_OverwriteFirst
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "te ül" + EX + "more text"$/;"	v	class:Snippet_With_Umlauts_TypeOn
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "te ül" + EX + JF + "more text" + JF + "end"$/;"	v	class:Snippet_With_Umlauts_OverwriteSecond
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "te ül" + EX + JF + JF + "end"$/;"	v	class:Snippet_With_Umlauts_OverwriteNone
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "te" + LS + "2\\n"$/;"	v	class:Snippet_With_DoubleQuote_List
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "te" + LS + "2\\n"$/;"	v	class:Snippet_With_SingleQuote_List
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "te" + LS + "2\\n"$/;"	v	class:Snippet_With_Umlauts_List
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "te'st" + EX$/;"	v	class:Snippet_With_SingleQuote
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "test" + EX + "j" + JF + "k"$/;"	v	class:TrailingNewline_TabStop_EndNL
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "test" + EX + "j" + JF + "k"$/;"	v	class:TrailingNewline_TabStop_EndStartNL
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "test" + EX + "j" + JF + "k"$/;"	v	class:TrailingNewline_TabStop_ExtraNL_ECR
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "test" + EX + "j" + JF + "k"$/;"	v	class:TrailingNewline_TabStop_JustNL
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "test" + EX + "j" + JF + "k"$/;"	v	class:TrailingNewline_TabStop_NLInsideStuffBehind
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "test" + EX + "j" + JF + "k"$/;"	v	class:TrailingNewline_TabStop_NotEndStartNL
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "test" + EX + "j" + JF + "k"$/;"	v	class:TrailingNewline_TabStop_StartNL
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "test" + EX + "z" + JF + "y"$/;"	v	class:MultiLineDefault_Type
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "test" + EX + BS + JF + "Goodbye"$/;"	v	class:LeaveTrailingWhitespace
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "test" + EX + BS + JF + "Goodbye"$/;"	v	class:RemoveTrailingWhitespace
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "test" + EX + BS + JF + "y"$/;"	v	class:MultiLineDefault_BS
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "test" + EX + JF + "y"$/;"	v	class:MultiLineDefault_Jump
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "teüst" + EX$/;"	v	class:Snippet_With_Umlauts
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "ööuu trig b" + 2 * ARR_L + EX$/;"	v	class:UmlautsBeforeTriggerAndCharsAfter
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = 'te"st' + EX$/;"	v	class:Snippet_With_DoubleQuote
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + "1 "$/;"	v	class:Choices_MoreThan9Candidates_ShouldTerminateWithSpace
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + "1 is a color"$/;"	v	class:Choices_With_Mirror_ContinueMirroring_EvenAfterSelectionDone
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + "1"$/;"	v	class:Choices_MoreThan9Candidates_ShouldWaitForInputs
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + "1"$/;"	v	class:Choices_With_Mirror
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + "2"$/;"	v	class:Choices_CanEscapeCommaInsideChoiceItem
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + "2"$/;"	v	class:Choices_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + "2"$/;"	v	class:Choices_WilNotMessWithTabstopsAfterIt
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + "3"$/;"	v	class:Choices_WillAbandonSelection_If_InputIsGreaterThanMaxSelectionIndex
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + "char"$/;"	v	class:Choices_WillAbandonSelection_If_CharTyped
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + "input"$/;"	v	class:Choices_AsNestedElement_ShallNotTakeActionIfParentInput
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + JF + "1"$/;"	v	class:Choices_AsNestedElement_CanBeTabbedInto
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + JF + JF + "input"$/;"	v	class:Choices_AsNestedElement_CanBeTabbedThrough
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX$/;"	v	class:Choices_AsNestedElement_ShouldOverwriteDefaultText
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX$/;"	v	class:Choices_CanTakeNonAsciiCharacters
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX$/;"	v	class:Choices_EmptyChoiceWillBeDiscarded
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX$/;"	v	class:Choices_ShouldThrowErrorWithZeroTabstop
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX$/;"	v	class:Choices_WillBeExpandedToInlineSelection
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX$/;"	v	class:Choices_WillNotExpand_If_ChoiceListIsEmpty
keys	plugged/ultisnips/test/test_Completion.py	/^    keys = ($/;"	v	class:Completion_SimpleExample_ECR
keys	plugged/ultisnips/test/test_Completion.py	/^    keys = COMPLETION_OPTIONS + "test" + EX + "com" + COMPL_KW + JF + "foo"$/;"	v	class:Completion_ForwardsJumpWithoutCOMPL_ACCEPT
keys	plugged/ultisnips/test/test_Completion.py	/^    keys = COMPLETION_OPTIONS + "test" + EX + "foo" + JF + "com" + COMPL_KW + JB + "foo"$/;"	v	class:Completion_BackwardsJumpWithoutCOMPL_ACCEPT
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "a" + EX$/;"	v	class:ContextSnippets_DoNotExpandOnFalse
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "a" + EX$/;"	v	class:ContextSnippets_ExpandOnTrue
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "a" + EX$/;"	v	class:ContextSnippets_Header_DoNotExpandOnFalse
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "a" + EX$/;"	v	class:ContextSnippets_Header_ExpandOnTrue
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "a" + EX$/;"	v	class:ContextSnippets_SimpleSnippet
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "a" + EX$/;"	v	class:ContextSnippets_UseContext
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "e" + EX + " " + "e" + EX$/;"	v	class:ContextSnippets_ContextIsClearedBeforeExpand
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "e" + EX$/;"	v	class:ContextSnippets_CursorIsZeroBased
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "e" + EX$/;"	v	class:ContextSnippets_ReportError
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "e" + EX$/;"	v	class:ContextSnippets_ReportErrorOnIndexOutOfRange
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "i" + EX$/;"	v	class:ContextSnippets_PriorityKeyword
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = ($/;"	v	class:ContextSnippets_ContextHasAccessToVisual
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = ($/;"	v	class:ContextSnippets_SnippetPriority
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "first line\\n\\n\\n\\n\\n\\nthird line" + ESC + "3k0itest" + EX + ESC + "u6j"$/;"	v	class:Undo_RemoveWholeSnippet
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "hello test" + EX + "upsi" + ESC + "hh" + "iabcdef" + ESC + "u"$/;"	v	class:Undo_RemoveEditInTabstop
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "i" + EX + "asd" + JF + "feh" + ESC + "uuuu"$/;"	v	class:Undo_CompletelyUndoSnippet
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "i" + EX + "asd" + JF + ESC + "u"$/;"	v	class:Undo_ChangesInPlaceholder
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "i" + EX + "i" + EX + ESC + "u"$/;"	v	class:Undo_RemoveOneSnippetByTime
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "i" + EX + "i" + EX + ESC + "uu"$/;"	v	class:Undo_RemoveOneSnippetByTime2
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + "A" + JF + BS + "BBB"$/;"	v	class:Backspace_TabStop_NotZero
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + "A" + JF + BS + "BBB"$/;"	v	class:Backspace_TabStop_Zero
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + "a b c" + JF + "shallnot"$/;"	v	class:JumpForward_DefSnippet
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + "a" + JF + "test" + EX + ESC + "u" + JF$/;"	v	class:DoNotCrashOnUndoAndJumpInNestedSnippet
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + "a" + JF + BS + JF + "Int" + JF + "body"$/;"	v	class:UpdateModifiedSnippetWithoutCursorMove2
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + "aaaaa" + JF + BS + JF + "3333"$/;"	v	class:UpdateModifiedSnippetWithoutCursorMove1
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + ESC + "Vkx" + "i\\nworld\\n"$/;"	v	class:DeleteSnippetInsertion0
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + ESC + "ddi" + JB$/;"	v	class:DeleteCurrentTabStop1_JumpBack
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + ESC + "j2dd"$/;"	v	class:DeleteLastTwoLinesInSnippet
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + ESC + "u"$/;"	v	class:DeleteSnippetInsertion1
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + ESC + "u"$/;"	v	class:Undo_RemoveMultilineSnippet
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + JF + ESC + "ddi" + JB + "hello"$/;"	v	class:DeleteCurrentTabStop2_JumpBack
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + JF + ESC + "ddkji" + JB + "hello" + JF + "world"$/;"	v	class:DeleteCurrentTabStop3_JumpAround
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = "Wie hallo gehts" + ESC + "bhi" + EX + "Huiui!"$/;"	v	class:MultilineExpandTestTyping_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = "Wie hallo gehts" + ESC + "bhi" + EX$/;"	v	class:ExpandInTheMiddleOfLine_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = "Wie hallo gehts" + ESC + "bhi" + EX$/;"	v	class:MultilineExpand_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = "hallo " + EX$/;"	v	class:DoNotExpandAfterSpace_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = "hallo" + EX + "\\nAnd more"$/;"	v	class:SimpleExpandEndingWithNewline_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = "hallo" + EX + "\\nHallo Welt!\\n\\n\\b\\b\\b\\b\\b"$/;"	v	class:SimpleExpandNewLineAndBackspae_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = "hallo" + EX + "\\nhallo" + EX$/;"	v	class:SimpleExpandTwice_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = "hallo" + EX + "and again"$/;"	v	class:SimpleExpandTypeAfterExpand_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = "hallo" + EX + BS + ESC + "o" + ESC + "P"$/;"	v	class:SimpleExpand_DoNotClobberDefaultRegister
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = "hallo" + EX$/;"	v	class:SimpleExpand_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = "na du hallo" + EX + "and again\\b\\b\\b\\b\\bblub"$/;"	v	class:SimpleExpandTypeAndDelete_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = "test" + EX + EX$/;"	v	class:ExitSnippetModeAfterTabstopZero
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = "test" + EX + JF + "foo"$/;"	v	class:SimpleExpand_Issue1343
keys	plugged/ultisnips/test/test_Fixes.py	/^    keys = "  test" + EX + "hello" + JF + "world" + JF + "blub"$/;"	v	class:Bug1251994
keys	plugged/ultisnips/test/test_Fixes.py	/^    keys = "\\t\\t\\tpd" + EX + "2"$/;"	v	class:VirtualEdit
keys	plugged/ultisnips/test/test_Fixes.py	/^    keys = "test" + EX + "foo"$/;"	v	class:ShiftWidthZero
keys	plugged/ultisnips/test/test_Fixes.py	/^    keys = "yank" + ESC + "by4lea test" + EX + "HELLO" + JF + JF + ESC + "p"$/;"	v	class:RetainsTheUnnamedRegister
keys	plugged/ultisnips/test/test_Fixes.py	/^    keys = ($/;"	v	class:NonUnicodeDataInUnnamedRegister
keys	plugged/ultisnips/test/test_Fixes.py	/^    keys = ($/;"	v	class:RetainsTheUnnamedRegister_ButOnlyOnce
keys	plugged/ultisnips/test/test_Folding.py	/^    keys = "fold" + EX + "hi" + ESC + "jdd"$/;"	v	class:Fold_DeleteMiddleLine_ECR
keys	plugged/ultisnips/test/test_Folding.py	/^    keys = "fold" + EX + "hi"$/;"	v	class:FoldOverwrite_Simple_ECR
keys	plugged/ultisnips/test/test_Folding.py	/^    keys = "test" + EX + "Ball"$/;"	v	class:FoldingEnabled_SnippetWithFold_ExpectNoFolding
keys	plugged/ultisnips/test/test_Folding.py	/^    keys = "test" + EX + JF + "sub junk {}"$/;"	v	class:PerlSyntaxFold
keys	plugged/ultisnips/test/test_Format.py	/^    keys = "    test" + EX + "Hui"$/;"	v	class:ProperIndenting_SimpleCase_ECR
keys	plugged/ultisnips/test/test_Format.py	/^    keys = "    test" + EX + "\\n" + "blah"$/;"	v	class:ProperIndenting_AutoIndentAndNewline_ECR
keys	plugged/ultisnips/test/test_Format.py	/^    keys = "    test" + EX + "blah"$/;"	v	class:ProperIndenting_SingleLineNoReindenting_ECR
keys	plugged/ultisnips/test/test_Format.py	/^    keys = "inc" + EX + "cstdl"$/;"	v	class:ProperIndenting_FirstLineInFileComplete_ECR
keys	plugged/ultisnips/test/test_Format.py	/^    keys = "inc" + EX + "foo"$/;"	v	class:ProperIndenting_FirstLineInFile_ECR
keys	plugged/ultisnips/test/test_Format.py	/^    keys = "m" + EX + "m1" + EX + "\\nHallo"$/;"	v	class:RecTabStopsWithExpandtab_SpecialIndentProblem_ECR
keys	plugged/ultisnips/test/test_Format.py	/^    keys = "m" + EX$/;"	v	class:RecTabStopsWithExpandtab_SimpleExample_ECR
keys	plugged/ultisnips/test/test_Format.py	/^    keys = "test" + EX + "This is a longer text that should wrap"$/;"	v	class:FOTextBeforeAndAfter_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Format.py	/^    keys = "test" + EX + "This is a longersnippet that should wrap properly"$/;"	v	class:FOWrapOnLongWord_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Format.py	/^    keys = ($/;"	v	class:FOSimple_Break_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Format.py	/^    keys = ($/;"	v	class:FOTextAfter_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "    test" + EX$/;"	v	class:PythonCodeOld_IndentedMultiline
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "    test" + EX$/;"	v	class:PythonCode_MultilineIndented
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "    test" + EX$/;"	v	class:TabStop_VimScriptInterpolation_SimpleExample
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = " " * 8 + "test" + EX  # < 8 works.$/;"	v	class:PythonCode_IndentProblem
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = """    test""" + EX$/;"	v	class:PythonCode_IndentEtSwOffset
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = """   test""" + EX$/;"	v	class:PythonCode_IndentEtSw
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = """   test""" + EX$/;"	v	class:PythonCode_IndentNoetSwTs
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = """test""" + EX + "ups"$/;"	v	class:PythonCode_LongerTextThanSource_Chars
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = """test""" + EX + "ups"$/;"	v	class:PythonCode_LongerTextThanSource_MultiLine
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = """test""" + EX$/;"	v	class:PythonCode_Locals
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = """test""" + EX$/;"	v	class:PythonCode_OptExists
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = """test""" + EX$/;"	v	class:PythonCode_OptNoExists
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX$/;"	v	class:PythonVisual_SelectOneWord
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX$/;"	v	class:PythonVisual_LineSelect_Simple
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + "Hallo Welt"$/;"	v	class:PythonCodeOld_ReferencePlaceholderBefore
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + "Hallo Welt"$/;"	v	class:PythonCode_ReferencePlaceholderBefore
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + "aaa"$/;"	v	class:PythonCode_AccessKilledTabstop_OverwriteFirst
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + "abc"$/;"	v	class:PythonVisual_NoVisualSelection_Ignore
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + "and more"$/;"	v	class:TabStop_Shell_SimpleExample
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + "and more"$/;"	v	class:TabStop_Shell_TextInNextLine
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + "and more"$/;"	v	class:TabStop_Shell_WithUmlauts
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + "blah" + ", bah"$/;"	v	class:PythonCode_CanOverwriteTabstop
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + "ho"$/;"	v	class:PythonCodeOld_ReferencePlaceholderAfter
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + "ho"$/;"	v	class:PythonCode_ReferencePlaceholder
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + "overwrite" + JF + "and more"$/;"	v	class:TabStop_Shell_InDefValue_Overwrite
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + ESC + "otest" + EX + JF + ESC$/;"	v	class:PythonVisual_HasAccessToSelectedPlaceholders
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + ESC + "otest" + EX + JF + JF + JF + JF$/;"	v	class:PythonVisual_HasAccessToZeroPlaceholders
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + JF + "and more"$/;"	v	class:TabStop_Shell_InDefValue_Leave
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + JF + "and more"$/;"	v	class:TabStop_Shell_ShebangPython
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + JF + "okay"$/;"	v	class:PythonCode_AccessKilledTabstop_OverwriteSecond
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX$/;"	v	class:PythonCodeOld_SimpleExample
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX$/;"	v	class:PythonCodeOld_TransformedBeforeMultiLine
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX$/;"	v	class:PythonCode_MultiAppend
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX$/;"	v	class:PythonCode_SimpleAppend
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX$/;"	v	class:PythonCode_SimpleExample
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX$/;"	v	class:PythonCode_SimpleExample_ReturnValueIsEmptyString
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX$/;"	v	class:PythonCode_TransformedBeforeMultiLine
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX$/;"	v	class:PythonCode_UseNewOverOld
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX$/;"	v	class:Python_SnipRvCanBeNonText
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX$/;"	v	class:TabStop_Shell_TestEscapedCharsAndShellVars_Overwrite
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX$/;"	v	class:TabStop_Shell_TestEscapedChars_Overwrite
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "ups test" + EX$/;"	v	class:PythonCode_TrickyReferences
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = ($/;"	v	class:PythonCode_MultiAppendShift
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = ($/;"	v	class:PythonCode_MultiAppendShiftMethods
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = ($/;"	v	class:PythonCode_MultiAppendSimpleIndent
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = ($/;"	v	class:PythonCode_ResetIndent
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = ($/;"	v	class:PythonCode_SimpleMkline
keys	plugged/ultisnips/test/test_ListSnippets.py	/^    keys = " " + LS + "3\\n"$/;"	v	class:ListAllAvailable_SpaceInFront_ExpectCorrectResult
keys	plugged/ultisnips/test/test_ListSnippets.py	/^    keys = "" + LS + "3\\n"$/;"	v	class:ListAllAvailable_NothingTyped_ExpectCorrectResult
keys	plugged/ultisnips/test/test_ListSnippets.py	/^    keys = "hallo qualle" + LS + "Hi"$/;"	v	class:ListAllAvailable_NonDefined_NoExpectionShouldBeRaised
keys	plugged/ultisnips/test/test_ListSnippets.py	/^    keys = "hallo test" + LS + "1\\n"$/;"	v	class:ListAllAvailable_testtypedSecondOpt_ExpectCorrectResult
keys	plugged/ultisnips/test/test_ListSnippets.py	/^    keys = "hallo test" + LS + "2\\n"$/;"	v	class:ListAllAvailable_Disabled_ExpectCorrectResult
keys	plugged/ultisnips/test/test_ListSnippets.py	/^    keys = "hallo test" + LS + "2\\n"$/;"	v	class:ListAllAvailable_testtyped_ExpectCorrectResult
keys	plugged/ultisnips/test/test_ListSnippets.py	/^    keys = "} " + LS + "3\\n"$/;"	v	class:ListAllAvailable_BraceInFront_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "hallo test" + EX + "auch" + ESC + "ehihi" + ESC + "bb" + "ino" + JF + "end"$/;"	v	class:Mirror_TestKill_InsertEnd_Kill
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "hallo test" + EX + "auch" + ESC + "eiab" + ESC + "bb" + "ino" + JF + "end"$/;"	v	class:Mirror_TestKill_InsertAfter_NoKill
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "hallo test" + EX + "auch" + ESC + "wahi" + ESC + "bb" + "ino" + JF + "end"$/;"	v	class:Mirror_TestKill_InsertBeginning_Kill
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "hallo test" + EX + "auch" + ESC + "wihi" + ESC + "bb" + "ino" + JF + "end"$/;"	v	class:Mirror_TestKill_InsertBefore_NoKill
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "hallo test" + EX + "elt"$/;"	v	class:Mirror_TestKillTabstop_Kill
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "outer" + EX + "test" + EX + "hallo"$/;"	v	class:SimpleMirrorSameLineNoSpaceInsideOtherSpaceAfter_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "outer" + EX + "test" + EX + "hallo"$/;"	v	class:SimpleMirrorSameLineNoSpaceInsideOther_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "a"$/;"	v	class:MirrorBeforeTabstopOverwrite_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo Du\\nHi"$/;"	v	class:MultilineTabStopSimpleMirrorMultiline1_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo Du\\nHi"$/;"	v	class:MultilineTabStopSimpleMirrorMultiline_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo Du\\nHi\\b\\bAch Blah"$/;"	v	class:MultilineTabStopSimpleMirrorDeleteInLine_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo du"$/;"	v	class:SimpleMirrorSameLineMany_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo du\\nwie gehts"$/;"	v	class:SimpleMirrorSameLineManyMultiline_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo foo"$/;"	v	class:SimpleMirrorSameLineBeforeTabDefVal_ECR
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo test"$/;"	v	class:TextTabStopTextSurroundedTab_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo welt"$/;"	v	class:TextTabStopAllSurrounded_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo welt"$/;"	v	class:TextTabStopSurroundMirror_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:SimpleMirrorMultilineMany_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:SimpleMirrorSameLineNoSpaceSpaceAfter_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:SimpleMirrorSameLineNoSpace_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:SimpleMirrorSameLine_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:TextTabStopAfterMirror_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:TextTabStopSimpleMirrorMultiline_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:TextTabStopTextAfterTab_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:TextTabStopTextBeforeMirror_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:TextTabStopTextBeforeTab_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo\\b\\b"$/;"	v	class:SimpleMirrorDelete_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo\\b\\bhups"$/;"	v	class:SimpleMirrorDeleteSomeEnterSome_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo\\nagain"$/;"	v	class:TextTabStopSimpleMirrorMultilineMirrorInFront_ECR
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "stdin" + JF + "do snap"$/;"	v	class:TabstopWithMirrorInDefaultMultipleOverwrite_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "stdin" + JF + "overwritten"$/;"	v	class:TabstopWithMirrorInDefaultOverwrite1_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "stdin" + JF + "overwritten"$/;"	v	class:TabstopWithMirrorInDefaultOverwrite_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "stdin" + JF + JF + "end"$/;"	v	class:TabstopWithMirrorInDefaultNoOverwrite1_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "stdin"$/;"	v	class:TabstopWithMirrorInDefaultMultipleLeave_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "stdin"$/;"	v	class:TabstopWithMirrorInDefaultTwiceAndExtra_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "world"$/;"	v	class:SimpleTabstopWithDefaultComplexType_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "world"$/;"	v	class:SimpleTabstopWithDefaultSimpelType_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + BS + "hallo foo"$/;"	v	class:SimpleMirrorSameLineBeforeTabDefVal_DelB4Typing_ECR
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX$/;"	v	class:MirrorBeforeTabstopLeave_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX$/;"	v	class:SimpleTabstopWithDefaultComplexKeep_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX$/;"	v	class:SimpleTabstopWithDefaultSimpelKeep_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX$/;"	v	class:TabstopWithMirrorInDefaultNoType1_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX$/;"	v	class:TabstopWithMirrorInDefaultNoType_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "ups test blah" + ESC + "02f i" + EX + "hallo"$/;"	v	class:SimpleMirrorSameLine_InText_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = ($/;"	v	class:MirrorRealLifeExample_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = ($/;"	v	class:TabstopWithMirrorManyFromAll_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Movement.py	/^    keys = "<trh" + EX + "blah" + JF + BS + BS + JF + "end"$/;"	v	class:CursorMovement_BS_InEditMode
keys	plugged/ultisnips/test/test_Movement.py	/^    keys = "hello test this" + ESC + "02f i" + EX + "tab" + 3 * ARR_L + JF + "hallo"$/;"	v	class:IMMoving_NotExitingWhenBarelyOutsideLeft_ECR
keys	plugged/ultisnips/test/test_Movement.py	/^    keys = "hello test this" + ESC + "02f i" + EX + "tab" + 4 * ARR_L + JF + "hallo"$/;"	v	class:IMMoving_ExitWhenOutsideLeft_ECR
keys	plugged/ultisnips/test/test_Movement.py	/^    keys = "hello test this" + ESC + "02f i" + EX + "tab" + 7 * ARR_L + JF + "hallo"$/;"	v	class:IMMoving_NoExiting_ECR
keys	plugged/ultisnips/test/test_Movement.py	/^    keys = "hello test this" + ESC + "02f i" + EX + "tab" + ARR_R + JF + "hallo"$/;"	v	class:IMMoving_ExitWhenOutsideRight_ECR
keys	plugged/ultisnips/test/test_Movement.py	/^    keys = "hello test this" + ESC + "02f i" + EX + "tab" + JF + "hallo"$/;"	v	class:IMMoving_NoExitingEventAtEnd_ECR
keys	plugged/ultisnips/test/test_Movement.py	/^    keys = "test" + EX + "text" + 3 * ARR_U + 6 * ARR_D$/;"	v	class:IMMoving_CursorsKeys_ECR
keys	plugged/ultisnips/test/test_Movement.py	/^    keys = "test" + EX + "this is something\\nvery nice\\nnot" + JF + "more text"$/;"	v	class:CursorMovement_Multiline_ECR
keys	plugged/ultisnips/test/test_Movement.py	/^    keys = "test" + EX + "this" + 2 * ARR_L + "hallo\\nwelt"$/;"	v	class:IMMoving_AcceptInputWhenMoved_ECR
keys	plugged/ultisnips/test/test_Movement.py	/^    keys = ($/;"	v	class:IMMoving_ExitWhenOutsideAbove_ECR
keys	plugged/ultisnips/test/test_Movement.py	/^    keys = ($/;"	v	class:IMMoving_ExitWhenOutsideBelow_ECR
keys	plugged/ultisnips/test/test_MultipleMatches.py	/^    keys = "test" + EX + " " + ESC + ESC + "ahi"$/;"	v	class:Multiple_ManySnippetsOneTrigger_ECR
keys	plugged/ultisnips/test/test_MultipleMatches.py	/^    keys = "test" + EX + "0\\n" + "hi"$/;"	v	class:Multiple_SimpleCaseSelectZero_EEscape
keys	plugged/ultisnips/test/test_MultipleMatches.py	/^    keys = "test" + EX + "1\\n"$/;"	v	class:Multiple_SimpleCaseSelectFirst_ECR
keys	plugged/ultisnips/test/test_MultipleMatches.py	/^    keys = "test" + EX + "2\\n"$/;"	v	class:Multiple_SimpleCaseSelectSecond_ECR
keys	plugged/ultisnips/test/test_MultipleMatches.py	/^    keys = "test" + EX + "5\\n"$/;"	v	class:Multiple_SimpleCaseSelectTooHigh_ESelectLast
keys	plugged/ultisnips/test/test_MultipleMatches.py	/^    keys = "test" + EX + ESC + "hi"$/;"	v	class:Multiple_SimpleCaseEscapeOut_ECR
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "ab" + EX + "\\nac" + EX$/;"	v	class:ParseSnippets_Global_Python
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "ab" + EX$/;"	v	class:ParseSnippets_Global_Local_Python
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "abc def" + EX$/;"	v	class:ParseSnippets_MultiWord_RE1
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "foo" + EX + " bar" + EX + "\\nbar" + EX$/;"	v	class:ParseSnippets_MultiWord_RE2
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "inv snip" + EX$/;"	v	class:ParseSnippets_MultiWord_UnmatchedContainer
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "snip test" + EX$/;"	v	class:ParseSnippets_MultiWord_Description
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "snippet test" + EX$/;"	v	class:ParseSnippets_MultiWord_Description_Option
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "test snip" + EX$/;"	v	class:ParseSnippets_MultiWord_NoContainer
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "test snip" + EX$/;"	v	class:ParseSnippets_MultiWord_Quotes
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "test snip" + EX$/;"	v	class:ParseSnippets_MultiWord_Simple
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "test test test" + EX$/;"	v	class:ParseSnippets_MultiWord_RE3
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "test" + EX$/;"	v	class:ParseSnippets_PrintErroneousSnippet
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "test" + EX$/;"	v	class:ParseSnippets_PrintErroneousSnippetContext
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "test" + EX$/;"	v	class:ParseSnippets_PrintErroneousSnippetLocation
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "test" + EX$/;"	v	class:ParseSnippets_PrintErroneousSnippetPostAction
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "test" + EX$/;"	v	class:ParseSnippets_PrintErroneousSnippetPreAction
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "test" + EX$/;"	v	class:ParseSnippets_PrintPythonStacktrace
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "test" + EX$/;"	v	class:ParseSnippets_PrintPythonStacktraceMultiline
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "testsnip" + EX$/;"	v	class:ParseSnippets_ClearAll
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "testsnip" + EX$/;"	v	class:ParseSnippets_ExtendsWithoutFiletype
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "testsnip" + EX$/;"	v	class:ParseSnippets_InvalidPriorityLine
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "testsnip" + EX$/;"	v	class:ParseSnippets_InvalidPriorityLine1
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "testsnip" + EX$/;"	v	class:ParseSnippets_MissingEndSnippet
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "testsnip" + EX$/;"	v	class:ParseSnippets_SimpleSnippet
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "testsnip" + EX$/;"	v	class:ParseSnippets_UnknownDirective
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "toclear" + EX + "\\n" + "testsnip" + EX$/;"	v	class:ParseSnippets_ClearOne
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "toclear" + EX + "\\n" + "testsnip" + EX$/;"	v	class:ParseSnippets_ClearTwo
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = '"test snip"' + EX$/;"	v	class:ParseSnippets_MultiWord_WithQuotes
keys	plugged/ultisnips/test/test_Plugin.py	/^    keys = ($/;"	v	class:Plugin_SuperTab_SimpleTest
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "form_for user, namespace: some_namespace, html: {i" + EX + "i" + EX$/;"	v	class:RecTabStops_ChildTriggerContainsParentTextObjects
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "    hallo m" + EX + "hi"$/;"	v	class:RecTabStops_InNewlineManualIndentTextInFront_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "    m" + EX + "hi"$/;"	v	class:RecTabStops_InNewlineManualIndent_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "hello m" + EX + "world m" + EX + "end"$/;"	v	class:RecTabsStops_TypeInZero2_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "hi" + JF + "m" + EX + "again" + JF + "m1" + EX + "CD" + JF + "DE"$/;"	v	class:RecTabStops_ExpandedInZeroTSTwice_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "hi" + JF + "m" + EX + "m1" + EX + "CD" + JF + "DE" + JF + "AB"$/;"	v	class:RecTabStops_ExpandedInZeroTSSecondTime_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "hi" + JF + "m1" + EX + "CD" + JF + "DE"$/;"	v	class:RecTabStops_ExpandedInZeroTS_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m" + EX + "a" + 4 * ARR_L + JF + "hallo" + JF + "world"$/;"	v	class:RecTabStops_LeavingInner_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m" + EX + "hello" + JF + "world" + JF + "ups" + JF + "end"$/;"	v	class:RecTabStops_SimpleCase_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m" + EX + "hello" + JF + "world" + JF + JF + JF + "end"$/;"	v	class:RecTabStops_SimpleCaseLeaveSecondSecond_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m" + EX + "hello" + JF + JF + JF + "world" + JF + "end"$/;"	v	class:RecTabStops_SimpleCaseLeaveFirstSecond_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m" + EX + "hi" + JF + "hallo" + JF + "end"$/;"	v	class:RecTabStops_InNewlineMultilineWithNonZeroTS_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m" + EX + "hi"$/;"	v	class:RecTabStops_InNewlineMultilineWithIndent_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m" + EX + "m" + EX + "a" + 6 * ARR_L + JF + "hallo" + JF + "end"$/;"	v	class:RecTabStops_LeavingInnerInnerTwo_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m" + EX$/;"	v	class:RecTabStops_InNewlineMultiline_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m1" + EX + " m1" + EX + "hi" + JF + "two" + JF + "end"$/;"	v	class:RecTabStops_InnerWOTabStopTwiceDirectly_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m1" + EX + "CD" + JF + "DE"$/;"	v	class:RecTabStops_OuterOnlyWithZeroTS_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m1" + EX + "CD" + JF + "DE"$/;"	v	class:RecTabStops_OuterOnlyWithZero_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m1" + EX + "hi" + JF + "two" + JF + "end"$/;"	v	class:RecTabStops_InnerWOTabStop_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m1" + EX + JF + "m1" + EX + "hi" + JF + "end"$/;"	v	class:RecTabStops_InnerWOTabStopTwice_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + JF + JF + BS + "m" + EX$/;"	v	class:RecTabsStops_BackspaceZero_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = ($/;"	v	class:RecTabStops_BarelyNotLeavingInner_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = ($/;"	v	class:RecTabStops_InNewlineInTabstopNotAtBeginOfLine_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = ($/;"	v	class:RecTabStops_InNewlineInTabstop_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = ($/;"	v	class:RecTabStops_LeavingInnerInner_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = ($/;"	v	class:RecTabStops_MirrorInnerSnippet_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = ($/;"	v	class:RecTabStops_MirroredZeroTS_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = ($/;"	v	class:RecTabStops_NotAtBeginningOfTS_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = ($/;"	v	class:RecTabStops_ZeroTSisNothingSpecial_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = ($/;"	v	class:RecTabsStops_TypeInZero_ECR
keys	plugged/ultisnips/test/test_Selection.py	/^    keys = "for" + EX + "k" + JF$/;"	v	class:ExclusiveSelection_RealWorldCase_Test
keys	plugged/ultisnips/test/test_Selection.py	/^    keys = "for" + EX + "k" + JF$/;"	v	class:OldSelection_RealWorldCase_Test
keys	plugged/ultisnips/test/test_Selection.py	/^    keys = "test" + EX + "Hello"$/;"	v	class:_SelectModeMappings
keys	plugged/ultisnips/test/test_Selection.py	/^    keys = "test" + EX + "ui" + JF$/;"	v	class:ExclusiveSelection_SimpleTabstop_Test
keys	plugged/ultisnips/test/test_Selection.py	/^    keys = "test" + EX + "ui" + JF$/;"	v	class:OldSelection_SimpleTabstop_Test
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "$frac" + EX + JF + JF + "blub"$/;"	v	class:snipMate_Issue1325
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "v" + EX$/;"	v	class:snipMate_Visual_Simple
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "def" + EX$/;"	v	class:snipMate_OverwrittenByRegExpTrigger
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "for" + EX + "blub" + JF + "j" + JF + "hi"$/;"	v	class:snipMate_TestMirrors
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "hello" + EX + "2\\n"$/;"	v	class:snipMate_MultiMatches
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "hello" + EX + "\\nhello1" + EX + "\\nhello2" + EX$/;"	v	class:snipMate_SimpleSnippetInSnippetFile
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "hello" + EX + ESC + ":set ft=blubi\\nohello" + EX$/;"	v	class:snipMate_OtherFiletype
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "hello" + EX$/;"	v	class:snipMate_Disabled
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "hello" + EX$/;"	v	class:snipMate_SimpleSnippet
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "hello" + EX$/;"	v	class:snipMate_SimpleSnippetSubDirectory
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "opt" + EX + "some" + JF + "not" + JF + "ende"$/;"	v	class:snipMate_TestMirrorsInPlaceholders_Overwrite
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "opt" + EX + "some" + JF + JF + "ende"$/;"	v	class:snipMate_TestMirrorsInPlaceholders
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "os." + EX + "foo\\n." + EX$/;"	v	class:snipMate_Issue1344
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "test" + EX + "blub" + JF + "blah"$/;"	v	class:snipMate_TestNoBraceTabstops
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "test" + EX + "blub" + JF + "blah"$/;"	v	class:snipMate_TestNoBraceTabstopsAndMirrors
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "test" + EX + JF + "hi"$/;"	v	class:snipMate_NoNestedTabstops
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "test" + EX$/;"	v	class:snipMate_EmptyLinesContinueSnippets
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "test" + EX$/;"	v	class:snipMate_Interpolation
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "test" + EX$/;"	v	class:snipMate_InterpolationWithSystem
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = ESC + ":set fo=r\\n" + "i\/*" + EX + "1\\n2"$/;"	v	class:snipMate_Issue658
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = ESC + ":set ft=a\\n" + "itest1" + EX$/;"	v	class:snipMate_Extends
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "[]" + ARR_L + "a" + EX + "1" + JF + "2"$/;"	v	class:SnippetActions_PostActionModifiesCharAfterSnippet
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "\\n3" + ARR_U + "a" + EX + "1" + JF + "2"$/;"	v	class:SnippetActions_PostActionModifiesLineAfterSnippet
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "\\ni" + EX + "i" + EX + "x" + JF + "y" + JF + JF + "z"$/;"	v	class:SnippetActions_CanModifyParentBody
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "\\ni" + EX + "i" + EX + "x"$/;"	v	class:SnippetActions_EnsureIndent
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "\\ni" + EX + "x" + JF + "y"$/;"	v	class:SnippetActions_PostActionCanUseSnippetRange
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "a" + EX + "123"$/;"	v	class:SnippetActions_DoNotBreakCursorOnSingleLikeChange
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "a" + EX$/;"	v	class:SnippetActions_ErrorOnBufferModificationThroughCommand
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "a" + EX$/;"	v	class:SnippetActions_PostActionModifiesBuffer
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "a" + EX$/;"	v	class:SnippetActions_PreActionModifiesBuffer
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "i" + EX + "blah" + JF + "n" + EX + JF + "pass"$/;"	v	class:SnippetActions_CanExpandSnippetInDifferentPlace
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "i" + EX + "p" + EX + JF + "z"$/;"	v	class:SnippetActions_MoveParentSnippetFromChildInPreAction
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "i" + EX + "x" + JF + "1" + JF + "2" + JF + ";"$/;"	v	class:SnippetActions_CanExpandAnonSnippetInJumpAction
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "i" + EX + "x" + JF + JF + "1" + JF + "2" + JF + ";"$/;"	v	class:SnippetActions_CanExpandAnonSnippetInJumpActionWhileSelected
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "i" + EX$/;"	v	class:SnippetActions_CanUseContextFromContextMatch
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "i" + EX$/;"	v	class:SnippetActions_ErrorOnModificationSnippetLine
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "test" + EX + "1" + JF + "2" + JF + "3" + JF + " or 4" + JF + "5"$/;"	v	class:SnippetActions_CanExpandAnonSnippetOnFirstJump
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "test" + EX + "1" + JF + "2" + JF + "3" + JF + "4"$/;"	v	class:SnippetActions_CanEvenWrapSnippetInPreAction
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "test" + EX + "1" + JF + "2" + JF + "3"$/;"	v	class:SnippetActions_CanExpandAnonOnPreExpand
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "test" + EX + "1" + JF + "2"$/;"	v	class:SnippetActions_CanVisuallySelectFirstPlaceholderInAnonSnippetInPre
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = ($/;"	v	class:SnippetActions_CanMirrorTabStopsOutsideOfSnippet
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = ($/;"	v	class:SnippetActions_MoveVisual
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = ($/;"	v	class:SnippetActions_UseCorrectJumpActions
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "   test it" + EX$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand2
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "   test" + EX$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_Expand2
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "  test it" + EX + "1\\n"$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "  test" + EX + "1\\n"$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "  test" + EX$/;"	v	class:No_Tab_Expand_ET_Leading_Spaces
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "  test" + EX$/;"	v	class:No_Tab_Expand_Leading_Spaces
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = " ." + EX$/;"	v	class:SnippetOptions_Regex_Self_Space
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = " .a" + EX$/;"	v	class:SnippetOptions_Regex_Self_TextAfter
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "$test" + EX$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "-test" + EX$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand2
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "." + EX$/;"	v	class:SnippetOptions_Regex_Self_Start
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "[[test" + EX$/;"	v	class:SnippetOptions_ExpandWordSnippets_ExpandSuffix3
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "\\t\\thi" + EX$/;"	v	class:No_Tab_Expand_RealWorld
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "\\ttest" + EX$/;"	v	class:No_Tab_Expand_Leading_Tabs
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "a test it" + EX$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_DontExpand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "a test it" + EX$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "a test" + EX$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_DontExpand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "a test" + EX$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "a(test" + EX$/;"	v	class:SnippetOptions_ExpandWordSnippets_ExpandSuffix2
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "a-test it" + EX$/;"	v	class:MultiWord_SnippetOptions_ExpandWordSnippets_ExpandSuffix
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "a-test" + EX$/;"	v	class:SnippetOptions_ExpandWordSnippets_ExpandSuffix
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "a." + EX$/;"	v	class:SnippetOptions_Regex_Self_TextBefore
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "abc test test" + EX$/;"	v	class:SnippetOptions_Regex_SameLine_Long_Start
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "abc test test" + EX$/;"	v	class:SnippetOptions_Regex_SameLine_Simple
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "atest it" + EX$/;"	v	class:MultiWord_SnippetOptions_ExpandInwordSnippets_SimpleExpand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "atest it" + EX$/;"	v	class:MultiWord_SnippetOptions_ExpandWordSnippets_NoExpand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "atest" + EX$/;"	v	class:SnippetOptions_ExpandInwordSnippets_SimpleExpand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "atest" + EX$/;"	v	class:SnippetOptions_ExpandWordSnippets_NoExpand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test " + EX$/;"	v	class:SnippetOptions_Regex_WithSpace
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test cabfed" + EX$/;"	v	class:SnippetOptions_Regex_PythonBlockMatch
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test cabfed" + EX$/;"	v	class:SnippetOptions_Regex_PythonBlockNoMatch
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test it" + EX$/;"	v	class:MultiWord_SnippetOptions_ExpandInwordSnippets_ExpandSingle
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test it" + EX$/;"	v	class:MultiWord_SnippetOptions_ExpandWordSnippets_NormalExpand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test it" + EX$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test me" + EX$/;"	v	class:MultiWordSnippet_Simple
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test test abc" + EX$/;"	v	class:SnippetOptions_Regex_SameLine_Long_End
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test test test" + EX$/;"	v	class:SnippetOptions_Regex_Multiple
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test" + EX$/;"	v	class:No_Tab_Expand_ET
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test" + EX$/;"	v	class:No_Tab_Expand_ET_SW
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test" + EX$/;"	v	class:No_Tab_Expand_ET_SW_TS
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test" + EX$/;"	v	class:No_Tab_Expand_No_TS
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test" + EX$/;"	v	class:No_Tab_Expand_Simple
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test" + EX$/;"	v	class:SnippetOptions_ExpandInwordSnippets_ExpandSingle
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test" + EX$/;"	v	class:SnippetOptions_ExpandWordSnippets_NormalExpand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test" + EX$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_Expand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test" + EX$/;"	v	class:SnippetOptions_Regex_Expand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "ßßtest" + EX$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = "test me" + EX$/;"	v	class:SnippetPriorities_MultiWordTriggerOverwriteExisting
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = "test" + EX + "1\\n\\n" + "test" + EX + "2\\n"$/;"	v	class:SnippetPriorities_OverwriteThenChoose_ECR
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = "test" + EX$/;"	v	class:SnippetPriorities_AddedHasHigherThanFile
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = "test" + EX$/;"	v	class:SnippetPriorities_FileHasHigherThanAdded
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = "test" + EX$/;"	v	class:SnippetPriorities_FileHasHigherThanAdded_neg_prio
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = "test" + EX$/;"	v	class:SnippetPriorities_OverwriteExisting
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = "test" + EX$/;"	v	class:SnippetPriorities_OverwriteTwice_ECR
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = "test" + EX$/;"	v	class:SnippetPriorities_SimpleClear
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = "test" + EX$/;"	v	class:SnippetPriorities_SimpleClear2
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = "test1" + EX$/;"	v	class:SnippetPriorities_DoNotCareAboutNonMatchings
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = ($/;"	v	class:SnippetPriorities_ClearedByChild
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = ESC + ":set ft=c\\n" + "itest" + EX$/;"	v	class:SnippetPriorities_ClearedByParent
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "echo" + EX + "test"$/;"	v	class:TabStop_Exit_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "echo" + EX$/;"	v	class:TabStopNoReplace_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "hallo" + EX + "Nase"$/;"	v	class:TabStopSimpleReplaceSurrounded1_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "hallo" + EX + "Nase"$/;"	v	class:TabStopSimpleReplaceSurrounded_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "hallo" + EX + "Test" + JF + "Hi" + JF + JF + "du"$/;"	v	class:TabStopTestJumpingDontJumpToEndIfThereIsTabZero_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "hallo" + EX + "haselnut" + 2 * ARR_L + "hips" + JF + "end"$/;"	v	class:TabStopNavigatingInInsertModeSimple_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "hallo" + EX + "na" + JF + "Du Nase"$/;"	v	class:TabStopSimpleReplaceReversed_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "hallo" + EX + "na" + JF + "Du Nase"$/;"	v	class:TabStopSimpleReplace_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "hallo" + EX + "ship"$/;"	v	class:TabStopWithOneChar_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "hallo" + EX + JF + "Test" + JF + "Hi"$/;"	v	class:TabStopTestJumping2_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "hallo" + EX + JF + "Test" + JF + "Hi"$/;"	v	class:TabStopTestJumping_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "i" + EX + EX + "1" + JF + "2" + JF + " after" + JF + "3"$/;"	v	class:TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippet
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "i" + EX + EX + "1" + JF + "2" + JF + " after" + JF + "3"$/;"	v	class:TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippetRE
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + " blah" + JF + "Hallo"$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteFirst_NoJumpBack
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_Overwrite0
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_Overwrite1
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteFirstSwitchNumbers
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "Hello" + JF + "World" + JF$/;"	v	class:TabStop_AdjacentTabStopAddText_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "Hello" + JF + "World"$/;"	v	class:TabStopSimpleReplaceZeroLengthTabstops_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "Nothing"$/;"	v	class:TabStop_Multiline_MirrorInFront_Overwrite
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "Nothing"$/;"	v	class:TabStop_Multiline_Overwrite
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "WORLD" + JF + "End"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteFirst_RLExample
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "[ -u -v -d ]"$/;"	v	class:TabStop_EscapingChars_RealLife
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "blub" + JF + "hello"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthZerothTabstop_Override
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "hello" + JF + "world"$/;"	v	class:TabStop_EscapingChars_Backslash4
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "hi"$/;"	v	class:TabStop_EscapingCharsDollars
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "ups" + JF + "End"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteFirst
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + BS + JF + "Hallo"$/;"	v	class:TabStop_TSInDefaultTextRLExample_DeleteFirst
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + BS + JF + "Nothing"$/;"	v	class:TabStop_Multiline_DelFirstOverwriteSecond_Overwrite
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + ESC + "0ihi"$/;"	v	class:TabStopEscapingWhenSelectedNoCharTS_ECR
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + ESC + "0ihi"$/;"	v	class:TabStopEscapingWhenSelectedSingleCharTS_ECR
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + ESC + "0ihi"$/;"	v	class:TabStopEscapingWhenSelected_ECR
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "Blah"$/;"	v	class:TabStopTestJumpingRLExampleWithZeroTab_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "Hallo" + JF + "Ende"$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpBackToOther
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond1
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "WORLD" + JF + "End"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond_RLExample
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "\\n" + JF + "t"$/;"	v	class:TabStop_CROnlyOnSelectedNear
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "hello"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthZerothTabstop
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "longertext" + JB + "overwrite" + JF + "End"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackOverwrite
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "longertext" + JB + JF + "overwrite" + JF + "End"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward0
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "longertext" + JB + JF + JF + "End"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward1
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "no" + JF + "End" + JB + "yes" + JF + "Begin" + JF + "Hi"$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBack
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "no" + JF + "End"$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteSecond
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "ups" + JF + "End"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecond
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + JF + "Hallo" + JB + JB + "Blah" + JF + "Ende"$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpAround
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + JF + "Hallo" + JF + "Ende"$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpToThird
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX$/;"	v	class:TabStop_EscapingCharsBackticks
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX$/;"	v	class:TabStop_EscapingCharsDollars1
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX$/;"	v	class:TabStop_EscapingCharsDollars_BeginningOfDefinitionText
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX$/;"	v	class:TabStop_EscapingCharsDollars_BeginningOfLine
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX$/;"	v	class:TabStop_EscapingChars_Backslash
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX$/;"	v	class:TabStop_EscapingChars_Backslash2
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX$/;"	v	class:TabStop_EscapingChars_Backslash3
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX$/;"	v	class:TabStop_Multiline_Leave
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX$/;"	v	class:TabStop_Multiline_MirrorInFront_Leave
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteNone_ECR
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_DoNothing
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = ($/;"	v	class:TabStopTestBackwardJumping2_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = ($/;"	v	class:TabStopTestBackwardJumping_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = ($/;"	v	class:TabStopTestMultilineExpand_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = ($/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteFirstJumpBack
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = ($/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBackTwice
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "ascii" + EX + "éèàçôïÉÈÀÇÔÏ€"$/;"	v	class:Transformation_LowerCaseAsciiResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "ascii" + EX + "éèàçôïÉÈÀÇÔÏ€"$/;"	v	class:Transformation_SimpleCaseAsciiResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "hallo test" + EX + "AUCH" + ESC + "ehihi" + ESC + "bb" + "ino" + JF + "end"$/;"	v	class:Transformation_TestKill_InsertEnd_Kill
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "hallo test" + EX + "AUCH" + ESC + "eiab" + ESC + "bb" + "ino" + JF + "end"$/;"	v	class:Transformation_TestKill_InsertAfter_NoKill
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "hallo test" + EX + "AUCH" + ESC + "wahi" + ESC + "bb" + "ino" + JF + "end"$/;"	v	class:Transformation_TestKill_InsertBeginning_Kill
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "hallo test" + EX + "AUCH" + ESC + "wihi" + ESC + "bb" + "ino" + JF + "end"$/;"	v	class:Transformation_TestKill_InsertBefore_NoKill
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "hallo test" + EX + "b"$/;"	v	class:Transformation_TabIsAtEndNoTextType_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "hallo test" + EX + "some\\b\\b\\b\\b\\b"$/;"	v	class:Transformation_TabIsAtEndAndDeleted_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "hallo test" + EX + "some\\b\\b\\b\\bmore"$/;"	v	class:Transformation_TabIsAtEndAndDeleted1_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "hallo test" + EX$/;"	v	class:Transformation_TabIsAtEndNoTextLeave_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "HALLO"$/;"	v	class:Transformation_CleverTransformLongLower_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "Hallo"$/;"	v	class:Transformation_CleverTransformLowercaseChar_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "SomE tExt "$/;"	v	class:Transformation_MultipleTransformations_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "TEST"$/;"	v	class:Transformation_OptionIgnoreCase_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "a b  c d e f ghhh h oha"$/;"	v	class:Transformation_ConditionalInsertRWEllipsis_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "a some more text"$/;"	v	class:Transformation_ConditionalInsertionSimple_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "a some"$/;"	v	class:Transformation_CIBothDefinedPositive_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "a, nice,   building"$/;"	v	class:Transformation_OptionReplaceGlobalMatchInReplace_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "a, nice, building"$/;"	v	class:Transformation_OptionReplaceGlobal_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "aa"$/;"	v	class:Transformation_ConditionalWithBackslashBeforeDelimiter
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "aa"$/;"	v	class:Transformation_ConditionalWithEscapedDelimiter
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "ab"$/;"	v	class:Transformation_ConditionalWithBackslashBeforeDelimiter1
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "b some"$/;"	v	class:Transformation_CIBothDefinedNegative_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "dead parrot"$/;"	v	class:Transformation_BackreferenceTwice_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "foo boo aoo"$/;"	v	class:Transformation_Backreference_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "hallo foo boy"$/;"	v	class:Transformation_SimpleCase_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "hallo foo"$/;"	v	class:Transformation_SimpleCaseTransformInFrontDefVal_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "hallo foo"$/;"	v	class:Transformation_SimpleCaseTransformInFront_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:Transformation_CleverTransformLongUpper_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:Transformation_CleverTransformUpercaseChar_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:Transformation_SimpleCaseNoTransform_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "hi" + JF + BS$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueInSecondTab_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "sometext" + JF + "overwrite"$/;"	v	class:Transformation_InsideTabOvertype_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "sometext" + JF$/;"	v	class:Transformation_InsideTabLeaveAtDefault_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "test, hallo"$/;"	v	class:Transformation_CINewlines_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "test, hallo"$/;"	v	class:Transformation_CITabstop_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "test, halul"$/;"	v	class:Transformation_CIEscapedParensinReplace_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + BS + "hallo"$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueTypeSomethingThen_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + BS + JF + "hi"$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueInFirstTab_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + BS$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValue_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test\\ntest\\ntest" + ESC + "V2k" + EX + "test" + EX$/;"	v	class:Transformation_OptionMultiline_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = ($/;"	v	class:Transformation_ConditionalInConditional_ECR
keys	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    keys = "abc test" + EX$/;"	v	class:AddFunc_Opt
keys	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    keys = "abc test" + EX$/;"	v	class:AddFunc_Simple
keys	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    keys = "te'=(UltiSnips#SnippetsInCurrentScope()[{}]".format(akey) + ")\\n"$/;"	v	class:VerifyVimDict3
keys	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    keys = "testme" + EX + "hi1" + JF + "hi2" + JF + "hi3" + JF + "hi4"$/;"	v	class:TestLangmapWithUtf8_ExpectCorrectResult
keys	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    keys = "testme" + EX + "hi1" + JF + "hi2" + JF + "hi3" + JF + "hi4"$/;"	v	class:TestNonEmptyLangmap_ExpectCorrectResult
keys	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    keys = "testme" + EX + "hi;" + JF + "hi2" + JF + "hi3" + JF + "hi4" + ESC + ";Hello"$/;"	v	class:TestNonEmptyLangmapWithSemi_ExpectCorrectResult
keys	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    keys = 'te"=(UltiSnips#SnippetsInCurrentScope()[{}]'.format(akey) + ")\\n"$/;"	v	class:VerifyVimDict2
keys	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    keys = ($/;"	v	class:AddNewSnippetSource
keys	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    keys = ($/;"	v	class:VerifyVimDict1
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "    hello\\n    nice\\n\\tworld" + ESC + "Vkk" + EX + "test" + EX$/;"	v	class:Visual_LineSelect_CheckIndentTwice
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "\\tblablub" + ESC + "5hv3l" + EX + "test" + EX$/;"	v	class:Visual_SelectOneWord_ProblemAfterTab
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "bla blub\\n  helloi" + ESC + "0k4lvjll" + EX + "test" + EX$/;"	v	class:Visual_CrossOneLine
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "blablub" + ESC + "0lv4l" + EX + "test" + EX$/;"	v	class:Visual_SelectOneWord_Inword
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "blablub" + ESC + "0v$" + EX + "test" + EX + ESC + "o"$/;"	v	class:Visual_SelectOneWord_TillEndOfLine
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX + "\\ntest" + EX$/;"	v	class:Visual_ExpandTwice
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX + "hello"$/;"	v	class:Visual_InDefaultText_SelectOneWord
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX + JF + "hello"$/;"	v	class:Visual_InDefaultText_SelectOneWord_NoOverwrite
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX$/;"	v	class:VisualTransformationWithDefault_ExpandWithVisual
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX$/;"	v	class:VisualTransformation_SelectOneWord
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX$/;"	v	class:VisualWithDefault_ExpandWithVisual
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX$/;"	v	class:Visual_SelectOneWord
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX$/;"	v	class:Visual_SelectOneWord_TwiceVisual
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + "jup" + JF + "hi"$/;"	v	class:VisualTransformation_InDefaultText_LineSelect_Overwrite
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + "jup" + JF + "hi"$/;"	v	class:Visual_InDefaultText_LineSelect_Overwrite
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + "super" + JF + "done"$/;"	v	class:Visual_LineSelect_WithTabStop
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + "ups" + JF + "hi"$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_Overwrite
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + JF + "hi"$/;"	v	class:VisualTransformation_InDefaultText_LineSelect_NoOverwrite
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + JF + "hi"$/;"	v	class:Visual_InDefaultText_IndentBeforeTabstop_NoOverwrite
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + JF + "hi"$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + JF + "hi"$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite1
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + JF + "hi"$/;"	v	class:Visual_InDefaultText_LineSelect_NoOverwrite
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX$/;"	v	class:VisualTransformation_LineSelect_Simple
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX$/;"	v	class:Visual_LineSelect_CheckIndentSimple
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX$/;"	v	class:Visual_LineSelect_CheckIndentWithTS_NoOverwrite
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX$/;"	v	class:Visual_LineSelect_Simple
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "test" + EX + "abc"$/;"	v	class:Visual_NoVisualSelection_Ignore
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "test" + EX + "hi"$/;"	v	class:VisualTransformationWithDefault_ExpandWithoutVisual
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "test" + EX + "hi"$/;"	v	class:VisualWithDefaultWithSlashes_ExpandWithoutVisual
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "test" + EX + "hi"$/;"	v	class:VisualWithDefault_ExpandWithoutVisual
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "xxxyyyyxxx" + ESC + "4|vlll" + EX + "test" + EX$/;"	v	class:Visual_SelectOneWordExclusive
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "xxxyyyyxxx" + ESC + "4|vlll" + EX + "test" + EX$/;"	v	class:Visual_SelectOneWordInclusive
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = ($/;"	v	class:Visual_LineSelect_DedentLine
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = ($/;"	v	class:Visual_SelectOneWordWithTabstop_TillEndOfLine
keys	plugged/ultisnips/test/vim_test_case.py	/^    keys = ""$/;"	v	class:VimTestCase
keyword:	plugged/nvim-treesitter/queries/commonlisp/highlights.scm	/^  keyword: (defun_keyword "defmethod")$/;"	f
keyword:	plugged/nvim-treesitter/queries/commonlisp/locals.scm	/^  keyword: (defun_keyword "defmethod")$/;"	f
keyword_spacing	plugged/vim-snippets/pythonx/javascript_snippets.py	/^def keyword_spacing(snip):$/;"	f
kind	plugged/nvim-cmp/lua/cmp/config/compare.lua	/^compare.kind = function(entry1, entry2)$/;"	f	unknown:compare
kotlin	plugged/nvim-treesitter/lockfile.json	/^  "kotlin": {$/;"	o
kotlin_language_server	plugged/nvim-lspconfig/CONFIG.md	/^## kotlin_language_server$/;"	s	chapter:Configurations
label_identifier	plugged/vim-nerdtree-syntax-highlight/after/syntax/nerdtree.vim	/^  let label_identifier = 'nerdtreeExactMatchLabel_'.key$/;"	v
label_identifier	plugged/vim-nerdtree-syntax-highlight/after/syntax/nerdtree.vim	/^  let label_identifier = 'nerdtreeFileExtensionLabel_'.key$/;"	v
label_identifier	plugged/vim-nerdtree-syntax-highlight/after/syntax/nerdtree.vim	/^  let label_identifier = 'nerdtreePatternMatchLabel_'.suffix$/;"	v
lambda_list:	plugged/nvim-treesitter/queries/commonlisp/highlights.scm	/^  lambda_list: (list_lit (list_lit . (sym_lit) @parameter . (_))))$/;"	f
lambda_list:	plugged/nvim-treesitter/queries/commonlisp/highlights.scm	/^  lambda_list: (list_lit (sym_lit) @parameter))$/;"	f
lambda_list:	plugged/nvim-treesitter/queries/commonlisp/locals.scm	/^  lambda_list: (list_lit (list_lit . (sym_lit) @definition.parameter . (_))))$/;"	f
lambda_list:	plugged/nvim-treesitter/queries/commonlisp/locals.scm	/^  lambda_list: (list_lit (sym_lit) @definition.parameter))$/;"	f
latex	plugged/nvim-treesitter/lockfile.json	/^  "latex": {$/;"	o
launch	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def launch(self, text_before, visual_content, parent, start, end):$/;"	m	class:SnippetDefinition
launch	plugged/ultisnips/test/vim_interface.py	/^    def launch(self, config=[]):$/;"	m	class:VimInterface
launch	plugged/ultisnips/test/vim_interface.py	/^    def launch(self, config=[]):$/;"	m	class:VimInterfaceTmuxNeovim
lazy_load	plugged/LuaSnip/lua/luasnip/loaders/from_vscode.lua	/^function M.lazy_load(opts)$/;"	f	unknown:M
lean3ls	plugged/nvim-lspconfig/CONFIG.md	/^## lean3ls$/;"	s	chapter:Configurations
leanls	plugged/nvim-lspconfig/CONFIG.md	/^## leanls$/;"	s	chapter:Configurations
leave_with_wait	plugged/ultisnips/test/vim_interface.py	/^    def leave_with_wait(self):$/;"	m	class:VimInterface
ledger	plugged/nvim-treesitter/lockfile.json	/^  "ledger": {$/;"	o
lemminx	plugged/nvim-lspconfig/CONFIG.md	/^## lemminx$/;"	s	chapter:Configurations
length	plugged/nvim-cmp/lua/cmp/config/compare.lua	/^compare.length = function(entry1, entry2)$/;"	f	unknown:compare
line_begin	plugged/LuaSnip/lua/luasnip/extras/conditions.lua	/^function M.line_begin(line_to_cursor, matched_trigger)$/;"	f	unknown:M
line_index	plugged/ultisnips/pythonx/UltiSnips/text.py	/^    def line_index(self):$/;"	m	class:LineIterator
line_till_cursor	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^    def line_till_cursor(self):  # pylint:disable=no-self-use$/;"	m	class:VimBuffer
lines	plugged/LuaSnip/lua/luasnip/extras/fmt.lua	/^		lines = vim.tbl_map(function(line)$/;"	f
lint	plugged/nvim-cmp/Makefile	/^lint:$/;"	t
lint	plugged/nvim-lspconfig/Makefile	/^lint:$/;"	t
list_snippets	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def list_snippets(self):$/;"	m	class:SnippetManager
list_to_set	plugged/LuaSnip/lua/luasnip/loaders/from_vscode.lua	/^local function list_to_set(list)$/;"	f
llvm	plugged/nvim-treesitter/lockfile.json	/^  "llvm": {$/;"	o
load	plugged/LuaSnip/lua/luasnip/loaders/from_vscode.lua	/^function M.load(opts)$/;"	f	unknown:M
load_config	plugged/nvim-lspconfig/test/minimal_init.lua	/^_G.load_config = function()$/;"	f	unknown:_G
load_lockfile	plugged/nvim-treesitter/lua/nvim-treesitter/install.lua	/^local function load_lockfile()$/;"	f
load_plugins	plugged/nvim-lspconfig/test/minimal_init.lua	/^local function load_plugins()$/;"	f
load_snippet_docstrings	plugged/LuaSnip/lua/luasnip/init.lua	/^local function load_snippet_docstrings(snippet_table)$/;"	f
load_snippet_file	plugged/LuaSnip/lua/luasnip/loaders/from_vscode.lua	/^local function load_snippet_file(langs, snippet_set_path)$/;"	f
load_snippet_folder	plugged/LuaSnip/lua/luasnip/loaders/from_vscode.lua	/^local function load_snippet_folder(root, opts)$/;"	f
loaded_nerd_comments	plugged/nerdcommenter/plugin/nerdcommenter.vim	/^let loaded_nerd_comments = 1$/;"	v
loaded_nerd_tree	plugged/nerdtree/plugin/NERD_tree.vim	/^let loaded_nerd_tree = 1$/;"	v
location	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def location(self):$/;"	m	class:SnippetDefinition
log	plugged/nvim-cmp/lua/cmp/utils/debug.lua	/^debug.log = function(...)$/;"	f	unknown:debug
longest_string_length	plugged/nvim-treesitter/lua/nvim-treesitter/info.lua	/^local function longest_string_length(list)$/;"	f
lookup_imported_name	plugged/LuaSnip/lua/luasnip/extras/_lambda.lua	/^function lambda.lookup_imported_name(fun)$/;"	f	unknown:lambda
lsp_expand	plugged/LuaSnip/lua/luasnip/init.lua	/^local function lsp_expand(body)$/;"	f
lspinfo	plugged/nvim-lspconfig/lua/lspconfig/hls.lua	/^    lspinfo = function(cfg)$/;"	f
lua	plugged/nvim-treesitter/lockfile.json	/^  "lua": {$/;"	o
luasnip#choice_active	plugged/LuaSnip/plugin/luasnip.vim	/^function! luasnip#choice_active()$/;"	f
luasnip#expand_or_jumpable	plugged/LuaSnip/plugin/luasnip.vim	/^function! luasnip#expand_or_jumpable()$/;"	f
luasnip#expandable	plugged/LuaSnip/plugin/luasnip.vim	/^function! luasnip#expandable()$/;"	f
luasnip#jumpable	plugged/LuaSnip/plugin/luasnip.vim	/^function! luasnip#jumpable(direction)$/;"	f
main	plugged/nvim-cmp/utils/install_stylua.sh	/^function main() {$/;"	f
main	plugged/ultisnips/test_all.py	/^    def main():$/;"	f
maintained_parsers	plugged/nvim-treesitter/lua/nvim-treesitter/parsers.lua	/^function M.maintained_parsers()$/;"	f	unknown:M
maintainer	plugged/vim-snippets/addon-info.json	/^  "maintainer" : "honza @ github & others",$/;"	s
make_box	plugged/vim-snippets/pythonx/vimsnippets.py	/^def make_box(twidth, bwidth=None):$/;"	f
make_client_info	plugged/nvim-lspconfig/lua/lspconfig/ui/lspinfo.lua	/^local function make_client_info(client)$/;"	f
make_cmd	plugged/nvim-lspconfig/lua/lspconfig/powershell_es.lua	/^local function make_cmd(bundle_path)$/;"	f
make_config	plugged/nvim-lspconfig/lua/lspconfig/configs.lua	/^    local make_config = function(_root_dir)$/;"	f
make_config_info	plugged/nvim-lspconfig/lua/lspconfig/ui/lspinfo.lua	/^local function make_config_info(config)$/;"	f
make_directory_change_for_command	plugged/nvim-treesitter/lua/nvim-treesitter/shell_command_selectors.lua	/^function M.make_directory_change_for_command(dir, command)$/;"	f	unknown:M
make_ignored	plugged/nvim-treesitter/scripts/update-lockfile.sh	/^make_ignored() {$/;"	f
make_implemented_servers_list	plugged/nvim-lspconfig/scripts/docgen.lua	/^local function make_implemented_servers_list()$/;"	f
make_lambda_args	plugged/LuaSnip/lua/luasnip/extras/init.lua	/^local function make_lambda_args(node_args, snip)$/;"	f
make_lsp_sections	plugged/nvim-lspconfig/scripts/docgen.lua	/^local function make_lsp_sections()$/;"	f
make_opts_valid	plugged/LuaSnip/lua/luasnip/util/util.lua	/^local function make_opts_valid(user_opts, default_opts)$/;"	f
make_parts	plugged/nvim-lspconfig/scripts/docgen.lua	/^local function make_parts(fns)$/;"	f
make_section	plugged/nvim-lspconfig/scripts/docgen.lua	/^local function make_section(indentlvl, sep, parts)$/;"	f
manager	plugged/nvim-lspconfig/lua/lspconfig/configs.lua	/^    local manager = util.server_per_root_dir_manager(function(_root_dir)$/;"	f
manual	plugged/nvim-cmp/lua/cmp/utils/spec.lua	/^    manual = function()$/;"	f
map_list	plugged/nvim-lspconfig/scripts/docgen.lua	/^local function map_list(t, func)$/;"	f
mapleader	init.vim	/^let mapleader=";"$/;"	v
mapping (type: table<string, fun(fallback: function)>)	plugged/nvim-cmp/README.md	/^#### mapping (type: table<string, fun(fallback: function)>)$/;"	t	chapter:Configuration options
maps	plugged/ultisnips/test/test_Selection.py	/^    maps = ("", "")$/;"	v	class:_SelectModeMappings
maps	plugged/ultisnips/test/test_Selection.py	/^    maps = ("H", "x")$/;"	v	class:SelectModeMappings_DisableRemoveBeforeSelecting_ECR
maps	plugged/ultisnips/test/test_Selection.py	/^    maps = ("H", "x")$/;"	v	class:SelectModeMappings_RemoveBeforeSelecting_ECR
maps	plugged/ultisnips/test/test_Selection.py	/^    maps = ("H", "x"), ("e", "l")$/;"	v	class:SelectModeMappings_IgnoreMappings1_ECR
maps	plugged/ultisnips/test/test_Selection.py	/^    maps = ("H", "x"), ("e", "l")$/;"	v	class:SelectModeMappings_IgnoreMappings_ECR
maps	plugged/ultisnips/test/test_Selection.py	/^    maps = ("e", "l"), ("H", "x")$/;"	v	class:SelectModeMappings_IgnoreMappings2_ECR
mark	plugged/LuaSnip/lua/luasnip/util/mark.lua	/^local function mark(pos_begin, pos_end, opts)$/;"	f
mark_pos_equal	plugged/LuaSnip/lua/luasnip/util/util.lua	/^local function mark_pos_equal(m1, m2)$/;"	f
match	plugged/LuaSnip/lua/luasnip/extras/init.lua	/^local function match(index, _match, _then, _else)$/;"	f
match	plugged/nvim-cmp/lua/cmp/entry.lua	/^entry.match = function(self, input)$/;"	f	unknown:entry
match	plugged/nvim-cmp/lua/cmp/matcher.lua	/^matcher.match = function(input, word, words)$/;"	f	unknown:matcher
match	plugged/nvim-cmp/lua/cmp/utils/char.lua	/^char.match = function(byte1, byte2)$/;"	f	unknown:char
match_snippet	plugged/LuaSnip/lua/luasnip/init.lua	/^local function match_snippet(line, snippet_table)$/;"	f
matched	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def matched(self):$/;"	m	class:SnippetDefinition
matcher	plugged/nvim-lspconfig/lua/lspconfig/util.lua	/^  local function matcher(path)$/;"	f
matches	plugged/LuaSnip/lua/luasnip/nodes/snippet.lua	/^function Snippet:matches(line_to_cursor)$/;"	f	unknown:Snippet
matches	plugged/nvim-treesitter/lua/nvim-treesitter/fold.lua	/^  local matches = query.get_capture_matches_recursively(bufnr, function(lang)$/;"	f
matches	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def matches(self, before, visual_content=None):$/;"	m	class:SnippetDefinition
matchstr	plugged/nvim-cmp/lua/cmp/utils/pattern.lua	/^pattern.matchstr = function(p, text)$/;"	f	unknown:pattern
maxDiff	plugged/ultisnips/test/vim_test_case.py	/^    maxDiff = None  # Show all diff output, always.$/;"	v	class:VimTestCase
memoize_by_buf_tick	plugged/nvim-treesitter/lua/nvim-treesitter/ts_utils.lua	/^function M.memoize_by_buf_tick(fn, options)$/;"	f	unknown:M
merge	plugged/nvim-cmp/lua/cmp/utils/misc.lua	/^misc.merge = function(v1, v2)$/;"	f	unknown:misc
meson_matcher	plugged/nvim-lspconfig/lua/lspconfig/vala_ls.lua	/^local meson_matcher = function(path)$/;"	f
metals	plugged/nvim-lspconfig/CONFIG.md	/^## metals$/;"	s	chapter:Configurations
mint	plugged/nvim-lspconfig/CONFIG.md	/^## mint$/;"	s	chapter:Configurations
missing	plugged/nvim-treesitter/lua/nvim-treesitter/tsrange.lua	/^function TSRange:missing()$/;"	f	unknown:TSRange
mkline	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def mkline(self, line="", indent=None):$/;"	m	class:SnippetUtil
mode	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def mode(self):$/;"	m	class:VimPosition
mode	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def mode(self):$/;"	m	class:VisualContentPreserver
modify_nodes	plugged/LuaSnip/lua/luasnip/util/parser.lua	/^local function modify_nodes(snip)$/;"	f
module_info	plugged/nvim-treesitter/lua/nvim-treesitter/info.lua	/^local function module_info(module)$/;"	f
move	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def move(self, pivot, delta):$/;"	m	class:Position
move_to_mark	plugged/LuaSnip/lua/luasnip/util/util.lua	/^local function move_to_mark(id)$/;"	f
multiline_equal	plugged/LuaSnip/lua/luasnip/util/util.lua	/^local function multiline_equal(t1, t2)$/;"	f
mypy	plugged/ultisnips/mypy.ini	/^[mypy]$/;"	s
mypy-unidecode	plugged/ultisnips/mypy.ini	/^[mypy-unidecode]$/;"	s
mypy-vim	plugged/ultisnips/mypy.ini	/^[mypy-vim]$/;"	s
mypy_path	plugged/ultisnips/mypy.ini	/^mypy_path=pythonx\/UltiSnips$/;"	k	section:mypy
name	plugged/vim-snippets/addon-info.json	/^  "name" : "snipmate-snippets",$/;"	s
name:	plugged/nvim-treesitter/queries/python/highlights.scm	/^  name: (identifier) @parameter)$/;"	f
name_temp	plugged/ultisnips/test/vim_interface.py	/^    def name_temp(self, file_path):$/;"	m	class:TempFileManager
named	plugged/nvim-treesitter/lua/nvim-treesitter/tsrange.lua	/^function TSRange:named()$/;"	f	unknown:TSRange
named_child	plugged/nvim-treesitter/lua/nvim-treesitter/tsrange.lua	/^function TSRange:named_child(index)$/;"	f	unknown:TSRange
named_child_count	plugged/nvim-treesitter/lua/nvim-treesitter/tsrange.lua	/^function TSRange:named_child_count()$/;"	f	unknown:TSRange
namespace_modules	plugged/nvim-treesitter/lua/nvim-treesitter/info.lua	/^local function namespace_modules(modulelist)$/;"	f
needs_update	plugged/nvim-treesitter/lua/nvim-treesitter/install.lua	/^local function needs_update(lang)$/;"	f
neocomplete#sources#ultisnips#define	plugged/ultisnips/autoload/neocomplete/sources/ultisnips.vim	/^function! neocomplete#sources#ultisnips#define() abort$/;"	f
neodark#get_color	plugged/neodark.vim/plugin/neodark.vim	/^function neodark#get_color(hlgroup, fg_or_bg)$/;"	f
neodark.vim	plugged/neodark.vim/README.md	/^# neodark.vim$/;"	c
nerdcommenter#Comment	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! nerdcommenter#Comment(mode, type) range abort$/;"	f
nerdcommenter#IsCharCommented	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! nerdcommenter#IsCharCommented(line, col) abort$/;"	f
nerdcommenter#IsLineCommented	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! nerdcommenter#IsLineCommented(lineNo) abort$/;"	f
nerdcommenter#SetUp	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! nerdcommenter#SetUp() abort$/;"	f
nerdcommenter#SwitchToAlternativeDelimiters	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! nerdcommenter#SwitchToAlternativeDelimiters(printMsgs) abort$/;"	f
nerdcommenter#delimiterMap	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^let nerdcommenter#delimiterMap = s:delimiterMap$/;"	v
nerdtree#checkForBrowse	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#checkForBrowse(dir) abort$/;"	f
nerdtree#closeBookmarksOnOpen	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#closeBookmarksOnOpen() abort$/;"	f
nerdtree#closeTreeOnOpen	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#closeTreeOnOpen() abort$/;"	f
nerdtree#compareNodePaths	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#compareNodePaths(p1, p2) abort$/;"	f
nerdtree#compareNodes	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#compareNodes(n1, n2) abort$/;"	f
nerdtree#completeBookmarks	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#completeBookmarks(A,L,P) abort$/;"	f
nerdtree#deprecated	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#deprecated(func, ...) abort$/;"	f
nerdtree#echo	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echo(msg) abort$/;"	f
nerdtree#echoError	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echoError(msg) abort$/;"	f
nerdtree#echoWarning	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echoWarning(msg) abort$/;"	f
nerdtree#exec	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#exec(cmd, ignoreAll) abort$/;"	f
nerdtree#has_opt	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#has_opt(options, name) abort$/;"	f
nerdtree#loadClassFiles	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#loadClassFiles() abort$/;"	f
nerdtree#postSourceActions	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#postSourceActions() abort$/;"	f
nerdtree#renderView	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#renderView() abort$/;"	f
nerdtree#runningCygwin	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#runningCygwin() abort$/;"	f
nerdtree#runningWindows	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#runningWindows() abort$/;"	f
nerdtree#slash	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#slash() abort$/;"	f
nerdtree#ui_glue#bookmarkNode	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#bookmarkNode(...) abort$/;"	f
nerdtree#ui_glue#chRootCwd	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#chRootCwd() abort$/;"	f
nerdtree#ui_glue#clearBookmarks	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#clearBookmarks(bookmarks) abort$/;"	f
nerdtree#ui_glue#createDefaultBindings	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#createDefaultBindings() abort$/;"	f
nerdtree#ui_glue#invokeKeyMap	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#invokeKeyMap(key) abort$/;"	f
nerdtree#ui_glue#openBookmark	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#openBookmark(name) abort$/;"	f
nerdtree#ui_glue#revealBookmark	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#revealBookmark(name) abort$/;"	f
nerdtree#ui_glue#setupCommands	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#setupCommands() abort$/;"	f
nerdtree#ui_glue#upDir	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#upDir(preserveState) abort$/;"	f
nerdtree#version	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#version(...) abort$/;"	f
nerdtree-git-plugin	plugged/nerdtree-git-plugin/README.md	/^nerdtree-git-plugin$/;"	c
nerdtreegitplugin	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^augroup nerdtreegitplugin$/;"	a
nerdtreegitplugin_liveupdate	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^    augroup nerdtreegitplugin_liveupdate$/;"	a
nested_scope	plugged/nvim-treesitter/lua/nvim-treesitter/locals.lua	/^function M.nested_scope(node, cursor_pos)$/;"	f	unknown:M
new	plugged/LuaSnip/lua/luasnip/nodes/node.lua	/^function Node:new(o)$/;"	f	unknown:Node
new	plugged/LuaSnip/lua/luasnip/nodes/snippet.lua	/^function Parent_indexer:new(o)$/;"	f	unknown:Parent_indexer
new	plugged/LuaSnip/lua/luasnip/util/environ.lua	/^function Environ:new(o)$/;"	f	unknown:Environ
new	plugged/LuaSnip/lua/luasnip/util/mark.lua	/^function Mark:new(o)$/;"	f	unknown:Mark
new	plugged/cmp-nvim-lsp/lua/cmp_nvim_lsp/source.lua	/^source.new = function(client)$/;"	f	unknown:source
new	plugged/cmp_luasnip/lua/cmp_luasnip/init.lua	/^source.new = function()$/;"	f	unknown:source
new	plugged/nvim-cmp/lua/cmp/context.lua	/^context.new = function(prev_context, option)$/;"	f	unknown:context
new	plugged/nvim-cmp/lua/cmp/core.lua	/^core.new = function()$/;"	f	unknown:core
new	plugged/nvim-cmp/lua/cmp/entry.lua	/^entry.new = function(ctx, source, completion_item)$/;"	f	unknown:entry
new	plugged/nvim-cmp/lua/cmp/source.lua	/^source.new = function(name, s)$/;"	f	unknown:source
new	plugged/nvim-cmp/lua/cmp/utils/cache.lua	/^cache.new = function()$/;"	f	unknown:cache
new	plugged/nvim-cmp/lua/cmp/utils/event.lua	/^event.new = function()$/;"	f	unknown:event
new	plugged/nvim-cmp/lua/cmp/utils/window.lua	/^window.new = function()$/;"	f	unknown:window
new	plugged/nvim-cmp/lua/cmp/view.lua	/^view.new = function()$/;"	f	unknown:view
new	plugged/nvim-cmp/lua/cmp/view/custom_entries_view.lua	/^custom_entries_view.new = function()$/;"	f	unknown:custom_entries_view
new	plugged/nvim-cmp/lua/cmp/view/docs_view.lua	/^docs_view.new = function()$/;"	f	unknown:docs_view
new	plugged/nvim-cmp/lua/cmp/view/ghost_text_view.lua	/^ghost_text_view.new = function()$/;"	f	unknown:ghost_text_view
new	plugged/nvim-cmp/lua/cmp/view/native_entries_view.lua	/^native_entries_view.new = function()$/;"	f	unknown:native_entries_view
new	plugged/nvim-cmp/lua/cmp/vim_source.lua	/^vim_source.new = function(bridge_id, methods)$/;"	f	unknown:vim_source
new	plugged/nvim-lspconfig/lua/lspconfig/zk.lua	/^configs.zk.new = function(...)$/;"	f	unknown:configs.zk
new	plugged/nvim-treesitter/lua/nvim-treesitter/tsrange.lua	/^function TSRange.new(buf, start_row, start_col, end_row, end_col)$/;"	f	unknown:TSRange
new	plugged/nvim-treesitter/tests/indent/common.lua	/^function Runner:new(it, base_dir, buf_opts)$/;"	f	unknown:Runner
new_line	plugged/nvim-treesitter/tests/indent/common.lua	/^function Runner:new_line(file, spec, title)$/;"	f	unknown:Runner
new_scratch_buffer	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def new_scratch_buffer(text):$/;"	f
next_scope	plugged/nvim-treesitter/lua/nvim-treesitter/locals.lua	/^function M.next_scope(node)$/;"	f	unknown:M
nimls	plugged/nvim-lspconfig/CONFIG.md	/^## nimls$/;"	s	chapter:Configurations
nix	plugged/nvim-treesitter/lockfile.json	/^  "nix": {$/;"	o
no_region_check_wrap	plugged/LuaSnip/lua/luasnip/init.lua	/^local function no_region_check_wrap(fn, ...)$/;"	f
no_unidecode_available	plugged/ultisnips/test/util.py	/^def no_unidecode_available():$/;"	f
node	plugged/LuaSnip/lua/luasnip/util/parser.lua	/^			local node = fNode.F(functions.copy, { tab_stops[pos] })$/;"	f
node	plugged/LuaSnip/lua/luasnip/util/parser.lua	/^		local node = fNode.F(functions.copy, { tab_stops[num] })$/;"	f
node_decremental	plugged/nvim-treesitter/lua/nvim-treesitter/incremental_selection.lua	/^function M.node_decremental()$/;"	f	unknown:M
node_fmt	plugged/nvim-treesitter/lua/nvim-treesitter/indent.lua	/^local function node_fmt(node)$/;"	f
node_incremental	plugged/nvim-treesitter/lua/nvim-treesitter/incremental_selection.lua	/^M.node_incremental = select_incremental(function(node)$/;"	f	unknown:M
node_length	plugged/nvim-treesitter/lua/nvim-treesitter/ts_utils.lua	/^function M.node_length(node)$/;"	f	unknown:M
node_to_lsp_range	plugged/nvim-treesitter/lua/nvim-treesitter/ts_utils.lua	/^function M.node_to_lsp_range(node)$/;"	f	unknown:M
nodes_from_pattern	plugged/LuaSnip/lua/luasnip/nodes/snippet.lua	/^local function nodes_from_pattern(pattern)$/;"	f
nonempty	plugged/LuaSnip/lua/luasnip/extras/init.lua	/^	nonempty = function(indx, text_if, text_if_not)$/;"	f
normal_move_before	plugged/LuaSnip/lua/luasnip/util/util.lua	/^local function normal_move_before(new_cur_pos)$/;"	f
normal_move_on	plugged/LuaSnip/lua/luasnip/util/util.lua	/^local function normal_move_on(new_cur_pos)$/;"	f
normal_move_on_insert	plugged/LuaSnip/lua/luasnip/util/util.lua	/^local function normal_move_on_insert(new_cur_pos)$/;"	f
normalize_file_path	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/common.py	/^def normalize_file_path(path: str) -> str:$/;"	f	typeref:typename:str
ntabs_to_proper_indent	plugged/ultisnips/pythonx/UltiSnips/indent_util.py	/^    def ntabs_to_proper_indent(self, ntabs):$/;"	m	class:IndentUtil
number	plugged/ultisnips/pythonx/UltiSnips/text_objects/tabstop.py	/^    def number(self):$/;"	m	class:TabStop
number	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^    def number(self):  # pylint:disable=no-self-use$/;"	m	class:VimBuffer
nvim-cmp	plugged/nvim-cmp/README.md	/^# nvim-cmp$/;"	c
nvim-cmp is slow.	plugged/nvim-cmp/README.md	/^#### nvim-cmp is slow.$/;"	t	chapter:FAQ
nvim-lspconfig	plugged/nvim-lspconfig/README.md	/^# nvim-lspconfig$/;"	c
nvim_treesitter#available_modules	plugged/nvim-treesitter/autoload/nvim_treesitter.vim	/^function! nvim_treesitter#available_modules(arglead, cmdline, cursorpos) abort$/;"	f
nvim_treesitter#available_query_groups	plugged/nvim-treesitter/autoload/nvim_treesitter.vim	/^function! nvim_treesitter#available_query_groups(arglead, cmdline, cursorpos) abort$/;"	f
nvim_treesitter#foldexpr	plugged/nvim-treesitter/autoload/nvim_treesitter.vim	/^function! nvim_treesitter#foldexpr() abort$/;"	f
nvim_treesitter#indent	plugged/nvim-treesitter/autoload/nvim_treesitter.vim	/^function! nvim_treesitter#indent() abort$/;"	f
nvim_treesitter#installable_parsers	plugged/nvim-treesitter/autoload/nvim_treesitter.vim	/^function! nvim_treesitter#installable_parsers(arglead, cmdline, cursorpos) abort$/;"	f
nvim_treesitter#installed_parsers	plugged/nvim-treesitter/autoload/nvim_treesitter.vim	/^function! nvim_treesitter#installed_parsers(arglead, cmdline, cursorpos) abort$/;"	f
nvim_treesitter#statusline	plugged/nvim-treesitter/autoload/nvim_treesitter.vim	/^function! nvim_treesitter#statusline(...) abort$/;"	f
obj	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    obj = (0, 3)$/;"	v	class:MovePosition_DelSameLine1
obj	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    obj = (0, 3)$/;"	v	class:MovePosition_InsSameLine1
obj	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    obj = (0, 9)$/;"	v	class:MovePosition_DelSameLine
obj	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    obj = (0, 9)$/;"	v	class:MovePosition_InsSameLine2
obj	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    obj = (1, 0)$/;"	v	class:MovePosition_DelSecondLine
obj	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    obj = (1, 3)$/;"	v	class:MovePosition_DelSecondLine1
ocaml	plugged/nvim-treesitter/lockfile.json	/^  "ocaml": {$/;"	o
ocaml_interface	plugged/nvim-treesitter/lockfile.json	/^  "ocaml_interface": {$/;"	o
ocamllex	plugged/nvim-treesitter/lockfile.json	/^  "ocamllex": {$/;"	o
ocamlls	plugged/nvim-lspconfig/CONFIG.md	/^## ocamlls$/;"	s	chapter:Configurations
ocamllsp	plugged/nvim-lspconfig/CONFIG.md	/^## ocamllsp$/;"	s	chapter:Configurations
off	plugged/nvim-cmp/lua/cmp/utils/event.lua	/^event.off = function(self, name, callback)$/;"	f	unknown:event
offset	plugged/nvim-cmp/lua/cmp/config/compare.lua	/^compare.offset = function(entry1, entry2)$/;"	f	unknown:compare
offset	plugged/nvim-cmp/lua/cmp/utils/pattern.lua	/^pattern.offset = function(p, text)$/;"	f	unknown:pattern
omnisharp	plugged/nvim-lspconfig/CONFIG.md	/^## omnisharp$/;"	s	chapter:Configurations
on	plugged/nvim-cmp/lua/cmp/utils/event.lua	/^event.on = function(self, name, callback)$/;"	f	unknown:event
on_attach	lua/lsp.lua	/^local on_attach = function(client, bufnr)$/;"	f
on_attach	plugged/nvim-lspconfig/lua/lspconfig/configs.lua	/^      new_config.on_attach = vim.schedule_wrap(function(client, bufnr)$/;"	f	unknown:new_config
on_attach	plugged/nvim-lspconfig/test/minimal_init.lua	/^  local on_attach = function(_, bufnr)$/;"	f
on_callback	plugged/nvim-cmp/lua/cmp/vim_source.lua	/^vim_source.on_callback = function(id, args)$/;"	f	unknown:vim_source
on_change	plugged/nvim-cmp/lua/cmp/core.lua	/^core.on_change = function(self, event)$/;"	f	unknown:core
on_choice	plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^        on_choice = { on_choice, "function", false },$/;"	f
on_detach	plugged/nvim-treesitter/lua/nvim-treesitter/caching.lua	/^        on_detach = function()$/;"	f
on_exit	plugged/nvim-lspconfig/lua/lspconfig/util.lua	/^      new_config.on_exit = M.add_hook_before(new_config.on_exit, function()$/;"	f	unknown:new_config
on_init	plugged/nvim-lspconfig/lua/lspconfig/clangd.lua	/^      on_init = [[function to handle changing offsetEncoding]],$/;"	f
on_init	plugged/nvim-lspconfig/lua/lspconfig/clangd.lua	/^    on_init = function(client, result)$/;"	f
on_init	plugged/nvim-lspconfig/lua/lspconfig/configs.lua	/^      new_config.on_init = util.add_hook_after(new_config.on_init, function(client, _result)$/;"	f	unknown:new_config
on_keymap	plugged/nvim-cmp/lua/cmp/core.lua	/^core.on_keymap = function(self, keys, fallback)$/;"	f	unknown:core
on_language_status	plugged/nvim-lspconfig/lua/lspconfig/jdtls.lua	/^local function on_language_status(_, _, result)$/;"	f
on_line	plugged/nvim-cmp/lua/cmp/view/ghost_text_view.lua	/^    on_line = function(_)$/;"	f
on_moved	plugged/nvim-cmp/lua/cmp/core.lua	/^core.on_moved = function(self)$/;"	f	unknown:core
on_new_config	plugged/nvim-lspconfig/lua/lspconfig/angularls.lua	/^  on_new_config = function(new_config, new_root_dir)$/;"	f
on_new_config	plugged/nvim-lspconfig/lua/lspconfig/angularls.lua	/^  on_new_config = function(new_config,new_root_dir)$/;"	f
on_new_config	plugged/nvim-lspconfig/lua/lspconfig/codeqlls.lua	/^  on_new_config = function(config)$/;"	f
on_new_config	plugged/nvim-lspconfig/lua/lspconfig/eslint.lua	/^    on_new_config = function(config, new_root_dir)$/;"	f
on_new_config	plugged/nvim-lspconfig/lua/lspconfig/julials.lua	/^    on_new_config = function(new_config, root_dir)$/;"	f
on_new_config	plugged/nvim-lspconfig/lua/lspconfig/lean3ls.lua	/^    on_new_config = function(config, root)$/;"	f
on_new_config	plugged/nvim-lspconfig/lua/lspconfig/leanls.lua	/^    on_new_config = function(config, root)$/;"	f
on_new_config	plugged/nvim-lspconfig/lua/lspconfig/omnisharp.lua	/^    on_new_config = function(new_config, new_root_dir)$/;"	f
on_new_config	plugged/nvim-lspconfig/lua/lspconfig/powershell_es.lua	/^    on_new_config = function(new_config, _)$/;"	f
on_new_config	plugged/nvim-lspconfig/lua/lspconfig/tailwindcss.lua	/^    on_new_config = function(new_config)$/;"	f
on_new_config	plugged/nvim-lspconfig/lua/lspconfig/volar.lua	/^    on_new_config = function(new_config, new_root_dir)$/;"	f
on_stderr	plugged/nvim-lspconfig/lua/lspconfig/rust_analyzer.lua	/^        on_stderr = function(j, d, e)$/;"	f
on_stdout	plugged/nvim-lspconfig/lua/lspconfig/hls.lua	/^      local function on_stdout(_, data, _)$/;"	f
on_stdout	plugged/nvim-lspconfig/lua/lspconfig/rust_analyzer.lua	/^        on_stdout = function(j, d, e)$/;"	f
on_win	plugged/nvim-cmp/lua/cmp/view/custom_entries_view.lua	/^    on_win = function(_, win, buf, top, bot)$/;"	f
on_win	plugged/nvim-cmp/lua/cmp/view/ghost_text_view.lua	/^    on_win = function(_, win)$/;"	f
once	plugged/nvim-cmp/lua/cmp/utils/misc.lua	/^misc.once = function(callback)$/;"	f	unknown:misc
one#highlight	plugged/vim-one/colors/one.vim	/^function! one#highlight(group, fg, bg, attr)$/;"	f
oneline	plugged/nvim-cmp/lua/cmp/utils/str.lua	/^str.oneline = function(text)$/;"	f	unknown:str
onread	plugged/nvim-treesitter/lua/nvim-treesitter/install.lua	/^local function onread(handle, is_stderr)$/;"	f
open	plugged/nvim-cmp/lua/cmp/utils/window.lua	/^window.open = function(self, style)$/;"	f	unknown:window
open	plugged/nvim-cmp/lua/cmp/view.lua	/^view.open = function(self, ctx, sources)$/;"	f	unknown:view
open	plugged/nvim-cmp/lua/cmp/view/custom_entries_view.lua	/^custom_entries_view.open = function(self, offset, entries)$/;"	f	unknown:custom_entries_view
open	plugged/nvim-cmp/lua/cmp/view/docs_view.lua	/^docs_view.open = function(self, e, view)$/;"	f	unknown:docs_view
open	plugged/nvim-cmp/lua/cmp/view/native_entries_view.lua	/^native_entries_view.open = function(self, offset, entries)$/;"	f	unknown:native_entries_view
open_identifier	plugged/vim-nerdtree-syntax-highlight/after/syntax/nerdtree.vim	/^  let open_identifier = 'WebDevIconsDefaultOpenFolderSymbol'$/;"	v
opt	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def opt(self, option, default=None):  # pylint:disable=no-self-use$/;"	m	class:SnippetUtil
option	plugged/nvim-cmp/lua/cmp/utils/window.lua	/^window.option = function(self, key, value)$/;"	f	unknown:window
option_set_to	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def option_set_to(name, new_value):$/;"	f
order	plugged/nvim-cmp/lua/cmp/config/compare.lua	/^compare.order = function(entry1, entry2)$/;"	f	unknown:compare
organize_imports	plugged/nvim-lspconfig/lua/lspconfig/pyright.lua	/^local function organize_imports()$/;"	f
outdated_parsers	plugged/nvim-treesitter/lua/nvim-treesitter/install.lua	/^local function outdated_parsers()$/;"	f
output	plugged/ultisnips/test/vim_test_case.py	/^    output = ""$/;"	v	class:VimTestCase
overwrite	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def overwrite(self, buf, gtext):$/;"	m	class:TextObject
overwrite_with_initial_text	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def overwrite_with_initial_text(self, buf):$/;"	m	class:TextObject
p	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def p(self):$/;"	m	class:SnippetUtil
parent	plugged/nvim-treesitter/lua/nvim-treesitter/tsrange.lua	/^function TSRange:parent()$/;"	f	unknown:TSRange
parse_and_instantiate	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/snipmate.py	/^def parse_and_instantiate(parent_to, text, indent):$/;"	f
parse_and_instantiate	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/ulti_snips.py	/^def parse_and_instantiate(parent_to, text, indent):$/;"	f
parse_args	plugged/ultisnips/test_all.py	/^    def parse_args():$/;"	f
parse_choice	plugged/LuaSnip/lua/luasnip/util/parser.lua	/^local function parse_choice(text, tab_stops)$/;"	f
parse_placeholder	plugged/LuaSnip/lua/luasnip/util/parser.lua	/^local function parse_placeholder(text, tab_stops, brackets)$/;"	f
parse_snippet	plugged/LuaSnip/lua/luasnip/util/parser.lua	/^parse_snippet = function(context, body, tab_stops, brackets)$/;"	f
parse_text	plugged/LuaSnip/lua/luasnip/util/parser.lua	/^local function parse_text(text)$/;"	f
parse_variable	plugged/LuaSnip/lua/luasnip/util/parser.lua	/^local function parse_variable(text)$/;"	f
partial	plugged/LuaSnip/lua/luasnip/extras/init.lua	/^	partial = function(func, ...)$/;"	f
pasls	plugged/nvim-lspconfig/CONFIG.md	/^## pasls$/;"	s	chapter:Configurations
path	plugged/nvim-lspconfig/lua/lspconfig/util.lua	/^M.path = (function()$/;"	f	unknown:M
path_exists	plugged/LuaSnip/lua/luasnip/loaders/from_vscode.lua	/^local function path_exists(path)$/;"	f
path_join	plugged/LuaSnip/lua/luasnip/loaders/from_vscode.lua	/^local function path_join(a, b)$/;"	f
path_join	plugged/nvim-lspconfig/lua/lspconfig/util.lua	/^  local function path_join(...)$/;"	f
peek	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def peek(self, count=1):$/;"	m	class:_TextIterator
peek	plugged/ultisnips/pythonx/UltiSnips/text.py	/^    def peek(self):$/;"	m	class:LineIterator
percentage_range_window	plugged/nvim-lspconfig/lua/lspconfig/ui/windows.lua	/^function win_float.percentage_range_window(col_range, row_range, options)$/;"	f	unknown:win_float
perl	plugged/nvim-treesitter/lockfile.json	/^  "perl": {$/;"	o
perlls	plugged/nvim-lspconfig/CONFIG.md	/^## perlls$/;"	s	chapter:Configurations
perlpls	plugged/nvim-lspconfig/CONFIG.md	/^## perlpls$/;"	s	chapter:Configurations
php	plugged/nvim-treesitter/lockfile.json	/^  "php": {$/;"	o
phpactor	plugged/nvim-lspconfig/CONFIG.md	/^## phpactor$/;"	s	chapter:Configurations
pioasm	plugged/nvim-treesitter/lockfile.json	/^  "pioasm": {$/;"	o
placeholder	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def placeholder(self):$/;"	m	class:VisualContentPreserver
plenary	plugged/LuaSnip/Makefile	/^plenary:$/;"	t
plugin_cache_dir	plugged/ultisnips/test/vim_test_case.py	/^def plugin_cache_dir():$/;"	f
plugin_cache_dir	plugged/ultisnips/test_all.py	/^def plugin_cache_dir():$/;"	f
plugins	plugged/ultisnips/test/test_Plugin.py	/^    plugins = ["ervandew\/supertab"]$/;"	v	class:Plugin_SuperTab_SimpleTest
plugins	plugged/ultisnips/test/vim_test_case.py	/^    plugins = []$/;"	v	class:VimTestCase
populate_argnodes	plugged/LuaSnip/lua/luasnip/nodes/choiceNode.lua	/^function ChoiceNode:populate_argnodes()$/;"	f	unknown:ChoiceNode
populate_argnodes	plugged/LuaSnip/lua/luasnip/nodes/node.lua	/^function Node:populate_argnodes() end$/;"	f	unknown:Node
populate_argnodes	plugged/LuaSnip/lua/luasnip/nodes/snippet.lua	/^function Snippet:populate_argnodes()$/;"	f	unknown:Snippet
populate_args	plugged/LuaSnip/lua/luasnip/nodes/snippet.lua	/^function Snippet:populate_args(node)$/;"	f	unknown:Snippet
pos	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def pos(self):$/;"	m	class:_TextIterator
pos	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    ppos, pos = (0, 5), (0, 5)$/;"	v	class:TestGuessing_DeleteOneChar
pos	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    ppos, pos = (0, 6), (0, 7)$/;"	v	class:TestGuessing_InsertOneChar
pos	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    ppos, pos = (0, 6), (0, 7)$/;"	v	class:TestGuessing_Noop0
pos	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    ppos, pos = (0, 7), (0, 6)$/;"	v	class:TestGuessing_BackspaceOneChar
pos	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    ppos, pos = (0, 7), (0, 8)$/;"	v	class:TestGuessing_InsertOneChar1
pos	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def pos(self):$/;"	m	class:VimState
pos_begin	plugged/LuaSnip/lua/luasnip/util/mark.lua	/^function Mark:pos_begin()$/;"	f	unknown:Mark
pos_begin_end	plugged/LuaSnip/lua/luasnip/util/mark.lua	/^function Mark:pos_begin_end()$/;"	f	unknown:Mark
pos_begin_end_raw	plugged/LuaSnip/lua/luasnip/util/mark.lua	/^function Mark:pos_begin_end_raw()$/;"	f	unknown:Mark
pos_begin_raw	plugged/LuaSnip/lua/luasnip/util/mark.lua	/^function Mark:pos_begin_raw()$/;"	f	unknown:Mark
pos_end	plugged/LuaSnip/lua/luasnip/util/mark.lua	/^function Mark:pos_end()$/;"	f	unknown:Mark
pos_equal	plugged/LuaSnip/lua/luasnip/util/util.lua	/^local function pos_equal(p1, p2)$/;"	f
powershell_es	plugged/nvim-lspconfig/CONFIG.md	/^## powershell_es$/;"	s	chapter:Configurations
ppos	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    ppos, pos = (0, 5), (0, 5)$/;"	v	class:TestGuessing_DeleteOneChar
ppos	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    ppos, pos = (0, 6), (0, 7)$/;"	v	class:TestGuessing_InsertOneChar
ppos	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    ppos, pos = (0, 6), (0, 7)$/;"	v	class:TestGuessing_Noop0
ppos	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    ppos, pos = (0, 7), (0, 6)$/;"	v	class:TestGuessing_BackspaceOneChar
ppos	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    ppos, pos = (0, 7), (0, 8)$/;"	v	class:TestGuessing_InsertOneChar1
ppos	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def ppos(self):$/;"	m	class:VimState
pre-commit	plugged/nvim-cmp/Makefile	/^pre-commit:$/;"	t
prepare	plugged/nvim-cmp/lua/cmp/core.lua	/^core.prepare = function(self)$/;"	f	unknown:core
preselect	plugged/nvim-cmp/lua/cmp/view/custom_entries_view.lua	/^custom_entries_view.preselect = function(self, index)$/;"	f	unknown:custom_entries_view
preselect	plugged/nvim-cmp/lua/cmp/view/native_entries_view.lua	/^native_entries_view.preselect = function(self, index)$/;"	f	unknown:native_entries_view
preselect (type: cmp.PreselectMode)	plugged/nvim-cmp/README.md	/^#### preselect (type: cmp.PreselectMode)$/;"	t	chapter:Configuration options
preserve	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def preserve(self):$/;"	m	class:_SnippetUtilCursor
previous_scope	plugged/nvim-treesitter/lua/nvim-treesitter/locals.lua	/^function M.previous_scope(node)$/;"	f	unknown:M
print_info_modules	plugged/nvim-treesitter/lua/nvim-treesitter/info.lua	/^local function print_info_modules(parserlist, module)$/;"	f
print_stack	plugged/ultisnips/pythonx/UltiSnips/debug.py	/^def print_stack():$/;"	f
print_warning	plugged/nvim-treesitter/lua/nvim-treesitter/utils.lua	/^function M.print_warning(text)$/;"	f	unknown:M
priority	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def priority(self):$/;"	m	class:SnippetDefinition
prismals	plugged/nvim-lspconfig/CONFIG.md	/^## prismals$/;"	s	chapter:Configurations
process	plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^  print(vim.inspect(config, { process = process_function }))$/;"	f
prompt	plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^    vim.ui.select(files, { prompt = "Select a file:" }, function(file)$/;"	f
prompt	plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^    vim.ui.select({ "Yes", "No" }, { prompt = '"' .. folder .. '" does not exist. Create it?' },/;"	f
psalm	plugged/nvim-lspconfig/CONFIG.md	/^## psalm$/;"	s	chapter:Configurations
puppet	plugged/nvim-lspconfig/CONFIG.md	/^## puppet$/;"	s	chapter:Configurations
purescriptls	plugged/nvim-lspconfig/CONFIG.md	/^## purescriptls$/;"	s	chapter:Configurations
put	plugged/LuaSnip/lua/luasnip/util/util.lua	/^local function put(text, pos)$/;"	f
put_initial	plugged/LuaSnip/lua/luasnip/nodes/choiceNode.lua	/^function ChoiceNode:put_initial(pos)$/;"	f	unknown:ChoiceNode
put_initial	plugged/LuaSnip/lua/luasnip/nodes/dynamicNode.lua	/^function DynamicNode:put_initial(_) end$/;"	f	unknown:DynamicNode
put_initial	plugged/LuaSnip/lua/luasnip/nodes/functionNode.lua	/^function FunctionNode:put_initial(_) end$/;"	f	unknown:FunctionNode
put_initial	plugged/LuaSnip/lua/luasnip/nodes/node.lua	/^function Node:put_initial(pos)$/;"	f	unknown:Node
put_initial	plugged/LuaSnip/lua/luasnip/nodes/snippet.lua	/^function Snippet:put_initial(pos)$/;"	f	unknown:Snippet
put_initial	plugged/LuaSnip/lua/luasnip/nodes/textNode.lua	/^function TextNode:put_initial(pos)$/;"	f	unknown:TextNode
pylsp	plugged/nvim-lspconfig/CONFIG.md	/^## pylsp$/;"	s	chapter:Configurations
pyright	plugged/nvim-lspconfig/CONFIG.md	/^## pyright$/;"	s	chapter:Configurations
python	plugged/nvim-treesitter/lockfile.json	/^  "python": {$/;"	o
python_version	plugged/ultisnips/mypy.ini	/^python_version = 3.7$/;"	k	section:mypy
q	plugged/vim-fugitive/autoload/fugitive.vim	/^        nnoremap <buffer> <silent> q    :<C-U>echoerr "fugitive: q is removed in favor of gq (or/;"	m
q	plugged/vim-fugitive/autoload/fugitive.vim	/^      nnoremap <buffer> <silent> q :<C-U>echoerr "fugitive: q is removed in favor of gq (or :q)"/;"	m
q	plugged/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> q :<C-U>echoerr "fugitive: q removed in favor of gq (or :q)"<CR>$/;"	m
ql	plugged/nvim-treesitter/lockfile.json	/^  "ql": {$/;"	o
query	plugged/nvim-treesitter/lockfile.json	/^  "query": {$/;"	o
query_status	plugged/nvim-treesitter/lua/nvim-treesitter/health.lua	/^local function query_status(lang, query_group)$/;"	f
r	plugged/nvim-treesitter/lockfile.json	/^  "r": {$/;"	o
r_language_server	plugged/nvim-lspconfig/CONFIG.md	/^## r_language_server$/;"	s	chapter:Configurations
racket_langserver	plugged/nvim-lspconfig/CONFIG.md	/^## racket_langserver$/;"	s	chapter:Configurations
range	plugged/nvim-treesitter/lua/nvim-treesitter/tsrange.lua	/^function TSRange:range()$/;"	f	unknown:TSRange
range	plugged/nvim-treesitter/tests/unit/ts_utils_spec.lua	/^      range = function()$/;"	f
range_matches	plugged/nvim-treesitter/lua/nvim-treesitter/incremental_selection.lua	/^local function range_matches(node)$/;"	f
readfile	plugged/nvim-lspconfig/scripts/docgen.lua	/^local function readfile(path)$/;"	f
ready	plugged/nvim-cmp/lua/cmp/view.lua	/^view.ready = function(self)$/;"	f	unknown:view
ready	plugged/nvim-cmp/lua/cmp/view/custom_entries_view.lua	/^custom_entries_view.ready = function()$/;"	f	unknown:custom_entries_view
ready	plugged/nvim-cmp/lua/cmp/view/native_entries_view.lua	/^native_entries_view.ready = function(_)$/;"	f	unknown:native_entries_view
reattach_module	plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^function M.reattach_module(mod_name, bufnr, lang)$/;"	f	unknown:M
rec_ls	plugged/LuaSnip/Examples/snippets.lua	/^rec_ls = function()$/;"	f
recurse_local_nodes	plugged/nvim-treesitter/lua/nvim-treesitter/locals.lua	/^function M.recurse_local_nodes(local_def, accumulator, full_match, last_match)$/;"	f	unknown:M
recurse_modules	plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^local function recurse_modules(accumulator, root, path)$/;"	f
recursive	plugged/nvim-cmp/lua/cmp/utils/keymap.lua	/^keymap.recursive = function(mode, lhs, rhs)$/;"	f	unknown:keymap
redraw	plugged/nvim-cmp/lua/cmp/view.lua	/^view.redraw = function(self)$/;"	f	unknown:view
redraw	plugged/nvim-cmp/lua/cmp/view/custom_entries_view.lua	/^custom_entries_view.redraw = function()$/;"	f	unknown:custom_entries_view
redraw	plugged/nvim-cmp/lua/cmp/view/native_entries_view.lua	/^native_entries_view.redraw = function(self)$/;"	f	unknown:native_entries_view
refresh	plugged/cmp_luasnip/lua/cmp_luasnip/init.lua	/^source.refresh = function ()$/;"	f	unknown:source
refresh	plugged/ultisnips/pythonx/UltiSnips/snippet/source/base.py	/^    def refresh(self):$/;"	m	class:SnippetSource
refresh	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^    def refresh(self):$/;"	m	class:SnippetFileSource
regex	plugged/nvim-cmp/lua/cmp/utils/pattern.lua	/^pattern.regex = function(p)$/;"	f	unknown:pattern
regex	plugged/nvim-treesitter/lockfile.json	/^  "regex": {$/;"	o
regexp	plugged/vim-nerdtree-syntax-highlight/after/syntax/nerdtree.vim	/^  let regexp = '\\v'.s:characters.'+\\.'.substitute(key, '\\W', '\\\\\\0', 'g')$/;"	v
register	plugged/LuaSnip/lua/luasnip/extras/_lambda.lua	/^function lambda.register(fun, name)$/;"	f	unknown:lambda
register_snippet_source	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def register_snippet_source(self, name, snippet_source):$/;"	m	class:SnippetManager
register_source	plugged/nvim-cmp/lua/cmp/core.lua	/^core.register_source = function(self, s)$/;"	f	unknown:core
register_source	plugged/nvim-cmp/lua/cmp/init.lua	/^cmp.register_source = function(name, s)$/;"	f	unknown:cmp
reload_workspace	plugged/nvim-lspconfig/lua/lspconfig/rust_analyzer.lua	/^local function reload_workspace(bufnr)$/;"	f
remember_buffer	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def remember_buffer(self, to):$/;"	m	class:VimState
remember_position	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def remember_position(self):$/;"	m	class:VimState
remember_unnamed_register	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def remember_unnamed_register(self, text_to_expect):$/;"	m	class:VimState
remembered_buffer	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def remembered_buffer(self):$/;"	m	class:VimState
remove	plugged/nvim-treesitter/lua/nvim-treesitter/caching.lua	/^  function cache.remove(type_name, bufnr)$/;"	f	unknown:cache
remove_common_indent	plugged/LuaSnip/lua/luasnip/extras/fmt.lua	/^local function remove_common_indent(lines)$/;"	f
remove_from_jumplist	plugged/LuaSnip/lua/luasnip/nodes/snippet.lua	/^function Snippet:remove_from_jumplist()$/;"	f	unknown:Snippet
remove_n_before_cur	plugged/LuaSnip/lua/luasnip/util/util.lua	/^local function remove_n_before_cur(n)$/;"	f
remove_newlines	plugged/nvim-lspconfig/lua/lspconfig/ui/lspinfo.lua	/^local function remove_newlines(cmd)$/;"	f
remove_suffix	plugged/nvim-cmp/lua/cmp/utils/str.lua	/^str.remove_suffix = function(text, suffix)$/;"	f	unknown:str
rep	plugged/LuaSnip/lua/luasnip/extras/init.lua	/^	rep = function(node_indx)$/;"	f
replace	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^    def replace(self, match):$/;"	m	class:_CleverReplace
replace_initial_text	plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^    def replace_initial_text(self, buf):$/;"	m	class:SnippetInstance
replay_user_edits	plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^    def replay_user_edits(self, cmds, ctab=None):$/;"	m	class:SnippetInstance
repository	plugged/vim-snippets/addon-info.json	/^  "repository" : {"type": "git", "url": "git:\/\/github.com\/honza\/snipmate-snippets.git"},$/;"	o
repr	plugged/LuaSnip/lua/luasnip/extras/_lambda.lua	/^function repr(e, lastpred)$/;"	f
repro	plugged/ultisnips/Makefile	/^repro:$/;"	t
request	plugged/nvim-lspconfig/lua/lspconfig/eslint.lua	/^    request = function(bufnr, method, params)$/;"	f
request_id	plugged/cmp-nvim-lsp/lua/cmp_nvim_lsp/source.lua	/^  _, request_id = self.client.request(method, params, function(arg1, arg2, arg3)$/;"	f
require_all_configs	plugged/nvim-lspconfig/scripts/docgen.lua	/^local function require_all_configs()$/;"	f
rescriptls	plugged/nvim-lspconfig/CONFIG.md	/^## rescriptls$/;"	s	chapter:Configurations
reset	plugged/nvim-cmp/lua/cmp/core.lua	/^core.reset = function(self)$/;"	f	unknown:core
reset	plugged/nvim-cmp/lua/cmp/source.lua	/^source.reset = function(self)$/;"	f	unknown:source
reset	plugged/ultisnips/pythonx/UltiSnips/indent_util.py	/^    def reset(self):$/;"	m	class:IndentUtil
reset	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def reset(self):$/;"	m	class:VisualContentPreserver
reset_cache	plugged/nvim-treesitter/lua/nvim-treesitter/parsers.lua	/^function M.reset_cache()$/;"	f	unknown:M
reset_indent	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def reset_indent(self):$/;"	m	class:SnippetUtil
reset_progress_counter	plugged/nvim-treesitter/lua/nvim-treesitter/install.lua	/^local function reset_progress_counter()$/;"	f
resolve	plugged/LuaSnip/lua/luasnip/nodes/snippet.lua	/^function Parent_indexer:resolve(snippet)$/;"	f	unknown:Parent_indexer
resolve	plugged/cmp-nvim-lsp/lua/cmp_nvim_lsp/source.lua	/^source.resolve = function(self, completion_item, callback)$/;"	f	unknown:source
resolve	plugged/cmp_luasnip/lua/cmp_luasnip/init.lua	/^function source:resolve(completion_item, callback)$/;"	f	unknown:source
resolve	plugged/nvim-cmp/lua/cmp/entry.lua	/^entry.resolve = function(self, callback)$/;"	f	unknown:entry
resolve	plugged/nvim-cmp/lua/cmp/source.lua	/^source.resolve = function(self, item, callback)$/;"	f	unknown:source
resolve_ambiguity	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/base.py	/^def resolve_ambiguity(all_tokens, seen_ts):$/;"	f
resolve_module	plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^local function resolve_module(mod_name)$/;"	f
restore_unnamed_register	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def restore_unnamed_register(self):$/;"	m	class:VimState
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "02b01653c8a1c198ae7287d566efa86a135b30d5"$/;"	s	object:jsonc
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "02e6ecbe05633bc9a82c2a56a86a1c2fcb3c4725"$/;"	s	object:commonlisp
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "02fa3b79b3ff9a296066da6277adfc3f26cbc9e0"$/;"	s	object:hjson
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "04e54ab6585dfd4fee6ddfe5849af56f101b6d4f"$/;"	s	object:fish
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "05f949d3c1c15e3261473a244d3ce87777374dec"$/;"	s	object:sparql
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "0602f5b0337422a579edcfbbf24ea30f28f93383"$/;"	s	object:cuda
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "085437f5cb117703b7f520dd92161140a684f092"$/;"	s	object:turtle
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "0c1e470822e157207374ccf59eaddacee748a216"$/;"	s	object:ruby
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "0cdeb0e51411a3ba5493662952c3039de08939ca"$/;"	s	object:ledger
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "0e36bed171768908f331ff7dff9d956bae016efb"$/;"	s	object:yaml
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "12ea597262125fc22fd2e91aa953ac69b19c26ca"$/;"	s	object:julia
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "161a92474a7bb2e9e830e48e76426f38299d99d1"$/;"	s	object:html
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "189a6a4829beb9cdbe837260653b4a3dfb0cc3db"$/;"	s	object:jsdoc
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "1b7f975854222812d87fd7b1610f9c2499b6fe69"$/;"	s	object:r
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "1dfda4f3c86ea39bcd9e89b5ed21a44d0c94a5a5"$/;"	s	object:heex
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "1f27fd1dfe7f352408f01b4894c7825f3a1d6c47"$/;"	s	object:zig
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "203e239408d642be83edde8988d6e7b20a19f0e8"$/;"	s	object:json
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "21b7676859c1187645a27ff301f76738af5dfd44"$/;"	s	object:surface
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "23d419ba45789c5a47d31448061557716b02750a"$/;"	s	object:ocaml
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "23d419ba45789c5a47d31448061557716b02750a"$/;"	s	object:ocaml_interface
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "2c0d03a36ee979bc697f6a9dd119174cf0ef15e0"$/;"	s	object:latex
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "2dfd6b7d3a4cfedc52e5eaa3cc497f419e628ebb"$/;"	s	object:gomod
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "2efe37f92d2e6aeb25186e9da07455bb4a30163c"$/;"	s	object:java
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "31550c1506b2033c5631cd18886edd600b67861e"$/;"	s	object:php
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "349a5984513b4a4a9e143a6e746120c6ff6cf6ed"$/;"	s	object:svelte
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "39bf0977d223879436c1425fe6bfeb3bcfd86f92"$/;"	s	object:clojure
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "3cb7fc28247efbcb2973b97e71c78838ad98a583"$/;"	s	object:hcl
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "42b1e657c3a394c01df51dd3eadc8b214274a73c"$/;"	s	object:go
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "449b6baa6b1cd0c2403636459af1571e075dbaa8"$/;"	s	object:scala
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "52ad1d506debcd4623d641339f8f452e6ea8f10c"$/;"	s	object:c_sharp
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "59e7e41e186d3759592e9938291f69055200783f"$/;"	s	object:gdscript
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "5dd3c62f1bbe378b220fe16b317b85247898639e"$/;"	s	object:comment
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "5dd5cdc418d9659682556b6adca2dd9ace0ac6d2"$/;"	s	object:json5
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "5e66e961eee421786bdda8495ed1db045e06b5fe"$/;"	s	object:graphql
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "632596b1fe5816315cafa90cdf8f8000e30c93e4"$/;"	s	object:rst
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "67ecede8fc5f2e342a7f0516b87d0476b36035ac"$/;"	s	object:supercollider
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "6a25376685d1d47968c2cef06d4db8d84a70025e"$/;"	s	object:dart
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "6f5d40190ec8a0aa8c8410699353d820f4f7d7a6"$/;"	s	object:lua
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "78f2f772ae0a65a2a94b781ca0d16abb94e0ecd1"$/;"	s	object:tsx
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "78f2f772ae0a65a2a94b781ca0d16abb94e0ecd1"$/;"	s	object:typescript
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "79ae7c1f2654a2a6936b0f37bf754e5ff59c9186"$/;"	s	object:beancount
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "7b97502cfc3ffa7110f6b68bb39fb259c9a0500c"$/;"	s	object:regex
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "83ee5993560bf15854c69b77d92e34456f8fb655"$/;"	s	object:nix
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "8600d7fadf5a51b9396eacbc6d105d0649b4c6f6"$/;"	s	object:python
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "88408ffc5e27abcffced7010fc77396ae3636d7e"$/;"	s	object:glsl
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "8bd2056818b21860e3d756b5a58c4f6e05fb744e"$/;"	s	object:toml
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "8e7fd7e638d4a0ec7a792ee16b19dbc6407aa810"$/;"	s	object:ql
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "8e9d175982afcefa3dac8ca20d40d1643accd2bd"$/;"	s	object:yang
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "8f6b1f357d1231c420404b5f7a368a73c25adfa2"$/;"	s	object:verilog
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "91fe2754796cd8fba5f229505a23fa08f3546c06"$/;"	s	object:vue
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "924aadaf5dea2a6074d72027b064f939acf32e20"$/;"	s	object:pioasm
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "9a2ccff9f672f1f3d320cf925b8e5acc89b27055"$/;"	s	object:query
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "9d5fd0c329280a156bf7614a49dc5e8c58cc037c"$/;"	s	object:erlang
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "9da7c979c010c350c28ad2235893103db4622c10"$/;"	s	object:scss
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "a03f1d2d1dfbf6f8e0fdca5f9ff030228241eb57"$/;"	s	object:css
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "a19d309a9d109951c64db27ea093ec2ae43670af"$/;"	s	object:glimmer
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "a22fa5e19bae50098e2252ea96cba3aba43f4c58"$/;"	s	object:swift
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "a7652fce5943c9d5d9c49dd8e3256a699aa33bf5"$/;"	s	object:cpp
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "ac1d5957e719d49bd6acd27439b79843e4daf8ed"$/;"	s	object:ocamllex
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "af9646bad98087ebb722c018d16921e4452cc273"$/;"	s	object:bash
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "bf7d643b494b7c7eed909ed7fbd8447231152cb0"$/;"	s	object:haskell
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "c03173485f9a2b0337947d35181f58e8367483e6"$/;"	s	object:perl
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "c611dd49e838efe25567dece14cf6353710f6d98"$/;"	s	object:godotResource
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "c7dd61284a42399a1c986870afb38c9707dcbe96"$/;"	s	object:javascript
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "cc7bdd3e6d14677e8aa77da64f6a3f57b6f8b00a"$/;"	s	object:rust
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "ccfd77db0ed799b6c22c214fe9d2937f47bc8b34"$/;"	s	object:bibtex
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "d29c06684fd4790ba0241e852eaa7d07b3cc4388"$/;"	s	object:elm
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "d4f61bed8ecb632addcd5e088c4f4cb9c1bf1c5b"$/;"	s	object:llvm
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "d5842f7c1f5aca2ef9fdf43c2dd8c3bbd21f81d8"$/;"	s	object:dot
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "d5a0b0b99249e313a01707ad5ebd793c9b70d189"$/;"	s	object:cmake
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "e348e8ec5efd3aac020020e4af53d2ff18f393a9"$/;"	s	object:c
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "ef3e43522c29a1abbc75313e26a82705eebeef13"$/;"	s	object:kotlin
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "f0b8e6748238ac0a6ba10e360db5b712039db895"$/;"	s	object:dockerfile
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "f0f2f100952a353e64e26b0fa710b4c296d7af13"$/;"	s	object:fortran
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "f1b5eafceab0d98b389033235e3d3edcc33490ba"$/;"	s	object:tlaplus
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "fa70098cd70393f84785f85cdc6a45299b59cd5b"$/;"	s	object:devicetree
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "fcc5f6f4d194dede4e676834ff28a506e39e17b4"$/;"	s	object:teal
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "fce4331731a960077ff5f98939bc675179f1908a"$/;"	s	object:fennel
revision	plugged/nvim-treesitter/lockfile.json	/^    "revision": "fd7bc35927ab44670e02d5ad035e0363f4ffde2b"$/;"	s	object:vim
rgb	plugged/vim-one/colors/one.vim	/^  fun <SID>rgb(rgb)$/;"	f
rgb_color	plugged/vim-one/colors/one.vim	/^  fun <SID>rgb_color(x, y, z)$/;"	f
rgb_level	plugged/vim-one/colors/one.vim	/^  fun <SID>rgb_level(n)$/;"	f
rgb_number	plugged/vim-one/colors/one.vim	/^  fun <SID>rgb_number(x)$/;"	f
rls	plugged/nvim-lspconfig/CONFIG.md	/^## rls$/;"	s	chapter:Configurations
rnix	plugged/nvim-lspconfig/CONFIG.md	/^## rnix$/;"	s	chapter:Configurations
rome	plugged/nvim-lspconfig/CONFIG.md	/^## rome$/;"	s	chapter:Configurations
root_dir	plugged/nvim-lspconfig/lua/lspconfig/ansiblels.lua	/^    root_dir = function(fname)$/;"	f
root_dir	plugged/nvim-lspconfig/lua/lspconfig/arduino_language_server.lua	/^    root_dir = function(fname)$/;"	f
root_dir	plugged/nvim-lspconfig/lua/lspconfig/bashls.lua	/^    root_dir = function(fname)$/;"	f
root_dir	plugged/nvim-lspconfig/lua/lspconfig/beancount.lua	/^    root_dir = function(fname)$/;"	f
root_dir	plugged/nvim-lspconfig/lua/lspconfig/ccls.lua	/^    root_dir = function(fname)$/;"	f
root_dir	plugged/nvim-lspconfig/lua/lspconfig/clangd.lua	/^    root_dir = function(fname)$/;"	f
root_dir	plugged/nvim-lspconfig/lua/lspconfig/cmake.lua	/^    root_dir = function(fname)$/;"	f
root_dir	plugged/nvim-lspconfig/lua/lspconfig/codeqlls.lua	/^    root_dir = function(fname)$/;"	f
root_dir	plugged/nvim-lspconfig/lua/lspconfig/crystalline.lua	/^    root_dir = function(fname)$/;"	f
root_dir	plugged/nvim-lspconfig/lua/lspconfig/cssls.lua	/^    root_dir = function(fname)$/;"	f
root_dir	plugged/nvim-lspconfig/lua/lspconfig/dhall_lsp_server.lua	/^    root_dir = function(fname)$/;"	f
root_dir	plugged/nvim-lspconfig/lua/lspconfig/dotls.lua	/^    root_dir = function(fname)$/;"	f
root_dir	plugged/nvim-lspconfig/lua/lspconfig/efm.lua	/^    root_dir = function(fname)$/;"	f
root_dir	plugged/nvim-lspconfig/lua/lspconfig/elixirls.lua	/^    root_dir = function(fname)$/;"	f
root_dir	plugged/nvim-lspconfig/lua/lspconfig/elmls.lua	/^    root_dir = function(fname)$/;"	f
root_dir	plugged/nvim-lspconfig/lua/lspconfig/erlangls.lua	/^    root_dir = function(fname)$/;"	f
root_dir	plugged/nvim-lspconfig/lua/lspconfig/gopls.lua	/^    root_dir = function(fname)$/;"	f
root_dir	plugged/nvim-lspconfig/lua/lspconfig/html.lua	/^    root_dir = function(fname)$/;"	f
root_dir	plugged/nvim-lspconfig/lua/lspconfig/intelephense.lua	/^    root_dir = function(pattern)$/;"	f
root_dir	plugged/nvim-lspconfig/lua/lspconfig/jdtls.lua	/^    root_dir = function(fname)$/;"	f
root_dir	plugged/nvim-lspconfig/lua/lspconfig/jedi_language_server.lua	/^    root_dir = function(fname)$/;"	f
root_dir	plugged/nvim-lspconfig/lua/lspconfig/jsonls.lua	/^    root_dir = function(fname)$/;"	f
root_dir	plugged/nvim-lspconfig/lua/lspconfig/julials.lua	/^    root_dir = function(fname)$/;"	f
root_dir	plugged/nvim-lspconfig/lua/lspconfig/kotlin_language_server.lua	/^    root_dir = function(fname)$/;"	f
root_dir	plugged/nvim-lspconfig/lua/lspconfig/lean3ls.lua	/^    root_dir = function(fname)$/;"	f
root_dir	plugged/nvim-lspconfig/lua/lspconfig/leanls.lua	/^    root_dir = function(fname)$/;"	f
root_dir	plugged/nvim-lspconfig/lua/lspconfig/lemminx.lua	/^    root_dir = function(filename)$/;"	f
root_dir	plugged/nvim-lspconfig/lua/lspconfig/mint.lua	/^    root_dir = function(fname)$/;"	f
root_dir	plugged/nvim-lspconfig/lua/lspconfig/nimls.lua	/^    root_dir = function(fname)$/;"	f
root_dir	plugged/nvim-lspconfig/lua/lspconfig/omnisharp.lua	/^    root_dir = function(fname)$/;"	f
root_dir	plugged/nvim-lspconfig/lua/lspconfig/pasls.lua	/^    root_dir = function(fname)$/;"	f
root_dir	plugged/nvim-lspconfig/lua/lspconfig/perlls.lua	/^    root_dir = function(fname)$/;"	f
root_dir	plugged/nvim-lspconfig/lua/lspconfig/perlpls.lua	/^    root_dir = function(fname)$/;"	f
root_dir	plugged/nvim-lspconfig/lua/lspconfig/phpactor.lua	/^    root_dir = function(pattern)$/;"	f
root_dir	plugged/nvim-lspconfig/lua/lspconfig/powershell_es.lua	/^    root_dir = function(fname)$/;"	f
root_dir	plugged/nvim-lspconfig/lua/lspconfig/puppet.lua	/^    root_dir = function(fname)$/;"	f
root_dir	plugged/nvim-lspconfig/lua/lspconfig/pylsp.lua	/^    root_dir = function(fname)$/;"	f
root_dir	plugged/nvim-lspconfig/lua/lspconfig/pyright.lua	/^    root_dir = function(fname)$/;"	f
root_dir	plugged/nvim-lspconfig/lua/lspconfig/r_language_server.lua	/^    root_dir = function(fname)$/;"	f
root_dir	plugged/nvim-lspconfig/lua/lspconfig/racket_langserver.lua	/^    root_dir = function(fname)$/;"	f
root_dir	plugged/nvim-lspconfig/lua/lspconfig/rnix.lua	/^    root_dir = function(fname)$/;"	f
root_dir	plugged/nvim-lspconfig/lua/lspconfig/rome.lua	/^    root_dir = function(fname)$/;"	f
root_dir	plugged/nvim-lspconfig/lua/lspconfig/rust_analyzer.lua	/^    root_dir = function(fname)$/;"	f
root_dir	plugged/nvim-lspconfig/lua/lspconfig/scry.lua	/^    root_dir = function(fname)$/;"	f
root_dir	plugged/nvim-lspconfig/lua/lspconfig/sqlls.lua	/^    root_dir = function(fname)$/;"	f
root_dir	plugged/nvim-lspconfig/lua/lspconfig/sqls.lua	/^    root_dir = function(fname)$/;"	f
root_dir	plugged/nvim-lspconfig/lua/lspconfig/sumneko_lua.lua	/^    root_dir = function(fname)$/;"	f
root_dir	plugged/nvim-lspconfig/lua/lspconfig/tailwindcss.lua	/^    root_dir = function(fname)$/;"	f
root_dir	plugged/nvim-lspconfig/lua/lspconfig/taplo.lua	/^    root_dir = function(fname)$/;"	f
root_dir	plugged/nvim-lspconfig/lua/lspconfig/tsserver.lua	/^    root_dir = function(fname)$/;"	f
root_dir	plugged/nvim-lspconfig/lua/lspconfig/vala_ls.lua	/^    root_dir = function(fname)$/;"	f
root_dir	plugged/nvim-lspconfig/lua/lspconfig/vimls.lua	/^    root_dir = function(fname)$/;"	f
root_dir	plugged/nvim-lspconfig/lua/lspconfig/yamlls.lua	/^    root_dir = function(fname)$/;"	f
root_dir	plugged/nvim-lspconfig/lua/lspconfig/zls.lua	/^    root_dir = function(fname)$/;"	f
root_pattern	plugged/nvim-lspconfig/lua/lspconfig/util.lua	/^function M.root_pattern(...)$/;"	f	unknown:M
rst	plugged/nvim-treesitter/lockfile.json	/^  "rst": {$/;"	o
ruby	plugged/nvim-treesitter/lockfile.json	/^  "ruby": {$/;"	o
run	plugged/nvim-treesitter/scripts/run_tests.sh	/^run() {$/;"	f
runTest	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    def runTest(self):$/;"	m	class:_Base
runTest	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    def runTest(self):$/;"	m	class:_BaseGuessing
runTest	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    def runTest(self):$/;"	m	class:_MPBase
runTest	plugged/ultisnips/test/vim_test_case.py	/^    def runTest(self):$/;"	m	class:VimTestCase
run_indent_test	plugged/nvim-treesitter/tests/indent/common.lua	/^function M.run_indent_test(file, runner, opts)$/;"	f	unknown:M
run_install	plugged/nvim-treesitter/lua/nvim-treesitter/install.lua	/^local function run_install(cache_folder, install_folder, lang, repo, with_sync, generate_from_gr/;"	f
running_on_windows	plugged/ultisnips/test/util.py	/^def running_on_windows():$/;"	f
runtime_queries	plugged/nvim-treesitter/lua/nvim-treesitter/query.lua	/^local function runtime_queries(lang, query_name)$/;"	f
rust	plugged/nvim-treesitter/lockfile.json	/^  "rust": {$/;"	o
rust_analyzer	plugged/nvim-lspconfig/CONFIG.md	/^## rust_analyzer$/;"	s	chapter:Configurations
rv	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def rv(self):  # pylint:disable=invalid-name$/;"	m	class:SnippetUtil
rv	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def rv(self, value):  # pylint:disable=invalid-name$/;"	m	class:SnippetUtil
s:ANONYMOUS_FUNCTION	plugged/current-func-info.vim/ftplugin/javascript/cfi.vim	/^let s:ANONYMOUS_FUNCTION = '\\%('$/;"	v
s:ARROW_FUNCTION	plugged/current-func-info.vim/ftplugin/javascript/cfi.vim	/^let s:ARROW_FUNCTION = ''$/;"	v
s:AddHeader	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:AddHeader(key, value) abort$/;"	f
s:AddLeftDelim	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:AddLeftDelim(delim, theLine) abort$/;"	f
s:AddLeftDelimAligned	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:AddLeftDelimAligned(delim, theLine, alignIndx) abort$/;"	f
s:AddLogSection	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:AddLogSection(label, a, b) abort$/;"	f
s:AddParagraph	plugged/ctrlsf.vim/autoload/ctrlsf/db.vim	/^func! s:AddParagraph(paragraph) abort$/;"	f
s:AddRightDelim	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:AddRightDelim(delim, theLine) abort$/;"	f
s:AddRightDelimAligned	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:AddRightDelimAligned(delim, theLine, alignIndx) abort$/;"	f
s:AddSection	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:AddSection(label, lines, ...) abort$/;"	f
s:AltMultipart	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:AltMultipart() abort$/;"	f
s:AltNested	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:AltNested() abort$/;"	f
s:AppendCommentToLine	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:AppendCommentToLine() abort$/;"	f
s:ArgSplit	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ArgSplit(string) abort$/;"	f
s:AskPassArgs	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:AskPassArgs(dir) abort$/;"	f
s:Assert	plugged/vim-devicons/test/filetype.vim	/^function! s:Assert(filename, icon)$/;"	f
s:BEGIN_PATTERN	plugged/current-func-info.vim/ftplugin/elixir/cfi.vim	/^let s:BEGIN_PATTERN = '\\C'.'^\\s*'.'def\\>'.'\\s\\+'.'\\('.'[^(]\\+'.'\\)'.'\\%('.'\\s*'.'('.'\\/;"	v
s:BEGIN_PATTERN	plugged/current-func-info.vim/ftplugin/go/cfi.vim	/^let s:BEGIN_PATTERN = '\\C'.'^\\s*'.'func\\>'.'\\s\\+'.'\\((\\w\\+\\s\\+[^)]\\+)\\s\\+\\)\\='.'\\/;"	v
s:BEGIN_PATTERN	plugged/current-func-info.vim/ftplugin/javascript/cfi.vim	/^let s:BEGIN_PATTERN = '\\C'$/;"	v
s:BEGIN_PATTERN	plugged/current-func-info.vim/ftplugin/perl/cfi.vim	/^let s:BEGIN_PATTERN = '\\C'.'^\\s*'.'sub\\>'.'\\s\\+'.'\\(\\w\\+\\)'.'\\%('.'\\s*'.s:PROTOTYPE_D/;"	v
s:BEGIN_PATTERN	plugged/current-func-info.vim/ftplugin/php/cfi.vim	/^    let s:BEGIN_PATTERN = '\\C'.'^\\s*'.'\\%(public\\s\\+\\|static\\s\\+\\|abstract\\s\\+\\|prot/;"	v
s:BEGIN_PATTERN	plugged/current-func-info.vim/ftplugin/python/cfi.vim	/^let s:BEGIN_PATTERN = '\\C'.'^\\s*'.'\\(def\\|class\\|async def\\)\\>'.'\\s\\+'.'\\(\\w\\+\\)'$/;"	v
s:BEGIN_PATTERN	plugged/current-func-info.vim/ftplugin/ruby/cfi.vim	/^let s:BEGIN_PATTERN = '\\C'.'^\\s*'.'def\\>'.'\\s\\+'.'\\('.'[^(]\\+'.'\\)'.'\\%('.'\\s*'.'('.'\\/;"	v
s:BEGIN_PATTERN	plugged/current-func-info.vim/ftplugin/sh/cfi.vim	/^let s:BEGIN_PATTERN = '\\C'.'^\\s*'.'\\%(function\\s\\+\\)\\?'.'\\(\\S\\+\\)'.'\\s*()'$/;"	v
s:BEGIN_PATTERN	plugged/current-func-info.vim/ftplugin/sql/cfi.vim	/^let s:BEGIN_PATTERN = '\\c'.'^\\s*'.'function\\>'.'\\s*'.'\\(\\w\\+\\)'.'\\s*'.'('$/;"	v
s:BEGIN_PATTERN	plugged/current-func-info.vim/ftplugin/vim/cfi.vim	/^let s:BEGIN_PATTERN = '\\C'.'^\\s*'.'fu\\%[nction]\\>'.'!\\='.'\\s\\+'.'\\([^(]\\+\\)'.'('$/;"	v
s:BLOCK_FIRST_BRACE	plugged/current-func-info.vim/ftplugin/perl/cfi.vim	/^let s:BLOCK_FIRST_BRACE = '[[:space:][:return:]]*'.'\\zs{'$/;"	v
s:BSearch	plugged/ctrlsf.vim/autoload/ctrlsf/view.vim	/^func! s:BSearch(resultset, left, right, vlnum) abort$/;"	f
s:BlameBufnr	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameBufnr(...) abort$/;"	f
s:BlameCommit	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameCommit(cmd, ...) abort$/;"	f
s:BlameCommitFileLnum	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameCommitFileLnum(...) abort$/;"	f
s:BlameJump	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameJump(suffix, ...) abort$/;"	f
s:BlameLeave	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameLeave() abort$/;"	f
s:BlameQuit	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameQuit() abort$/;"	f
s:BlameRehighlight	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameRehighlight() abort$/;"	f
s:BlameSubcommand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameSubcommand(line1, count, range, bang, mods, options) abort$/;"	f
s:BlobTemp	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlobTemp(url) abort$/;"	f
s:BlurStatus	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlurStatus() abort$/;"	f
s:Bookmark	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^let s:Bookmark = {}$/;"	v
s:Bookmark.AddBookmark	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.AddBookmark(name, path)$/;"	f
s:Bookmark.BookmarkExistsFor	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkExistsFor(name)$/;"	f
s:Bookmark.BookmarkFor	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkFor(name)$/;"	f
s:Bookmark.BookmarkNames	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkNames()$/;"	f
s:Bookmark.Bookmarks	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Bookmarks()$/;"	f
s:Bookmark.CacheBookmarks	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.CacheBookmarks(silent)$/;"	f
s:Bookmark.ClearAll	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.ClearAll()$/;"	f
s:Bookmark.CompareBookmarksByName	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.CompareBookmarksByName(firstBookmark, secondBookmark)$/;"	f
s:Bookmark.Edit	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Edit()$/;"	f
s:Bookmark.GetNodeForName	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.GetNodeForName(name, searchFromAbsoluteRoot, nerdtree)$/;"	f
s:Bookmark.GetSelected	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.GetSelected()$/;"	f
s:Bookmark.InvalidBookmarks	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.InvalidBookmarks()$/;"	f
s:Bookmark.New	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.New(name, path)$/;"	f
s:Bookmark.SortBookmarksList	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.SortBookmarksList()$/;"	f
s:Bookmark.ToRoot	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.ToRoot(name, nerdtree)$/;"	f
s:Bookmark.Write	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Write()$/;"	f
s:Bookmark.activate	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.activate(nerdtree, ...)$/;"	f
s:Bookmark.delete	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.delete()$/;"	f
s:Bookmark.getNode	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.getNode(nerdtree, searchFromAbsoluteRoot)$/;"	f
s:Bookmark.mustExist	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.mustExist()$/;"	f
s:Bookmark.open	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.open(nerdtree, ...)$/;"	f
s:Bookmark.openInNewTab	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.openInNewTab(options)$/;"	f
s:Bookmark.setPath	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.setPath(path)$/;"	f
s:Bookmark.str	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.str()$/;"	f
s:Bookmark.toRoot	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.toRoot(nerdtree)$/;"	f
s:Bookmark.validate	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.validate()$/;"	f
s:BranchCfile	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BranchCfile(result) abort$/;"	f
s:BrowserOpen	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BrowserOpen(url, mods, echo_copy) abort$/;"	f
s:BufName	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BufName(var) abort$/;"	f
s:BufReadHandler	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:BufReadHandler()$/;"	f
s:BufWinEnterHandler	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:BufWinEnterHandler()$/;"	f
s:BuildCommand	plugged/ctrlsf.vim/autoload/ctrlsf/backend.vim	/^func! s:BuildCommand(args, for_shell) abort$/;"	f
s:BuildEnvPrefix	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BuildEnvPrefix(env) abort$/;"	f
s:BuildResizeCmd	plugged/ctrlsf.vim/autoload/ctrlsf/win.vim	/^func! s:BuildResizeCmd(layout, resize, vresize) abort$/;"	f
s:BuildShell	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BuildShell(dir, env, git, args) abort$/;"	f
s:CODE_ATTR	plugged/current-func-info.vim/ftplugin/perl/cfi.vim	/^let s:CODE_ATTR = '\\%('.'\\s*:\\s*\\%(.\\+\\)'.'\\)\\='$/;"	v
s:CanCommentLine	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:CanCommentLine(forceNested, lineNum) abort$/;"	f
s:CanPlaceCursor	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:CanPlaceCursor(line, col) abort$/;"	f
s:CanSexyCommentLines	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:CanSexyCommentLines(topline, bottomline) abort$/;"	f
s:CanToggleCommentLine	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:CanToggleCommentLine(forceNested, lineNum) abort$/;"	f
s:CeilingDirectories	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:CeilingDirectories() abort$/;"	f
s:CfilePorcelain	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:CfilePorcelain(...) abort$/;"	f
s:ChompDefault	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ChompDefault(default, ...) abort$/;"	f
s:ChompStderr	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ChompStderr(...) abort$/;"	f
s:CloseIfOnlyNerdTreeLeft	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:CloseIfOnlyNerdTreeLeft()$/;"	f
s:CommentBlock	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:CommentBlock(top, bottom, lSide, rSide, forceNested) abort$/;"	f
s:CommentLines	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:CommentLines(forceNested, align, firstLine, lastLine) abort$/;"	f
s:CommentLinesMinimal	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:CommentLinesMinimal(firstLine, lastLine) abort$/;"	f
s:CommentLinesSexy	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:CommentLinesSexy(topline, bottomline) abort$/;"	f
s:CommentLinesToggle	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:CommentLinesToggle(forceNested, firstLine, lastLine) abort$/;"	f
s:CommentRegion	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:CommentRegion(topLine, topCol, bottomLine, bottomCol, forceNested) abort$/;"	f
s:CommitInteractive	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:CommitInteractive(line1, line2, range, bang, mods, options, patch) abort$/;"	f
s:CommitSubcommand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:CommitSubcommand(line1, line2, range, bang, mods, options) abort$/;"	f
s:CompactView	plugged/ctrlsf.vim/autoload/ctrlsf/view.vim	/^func! s:CompactView() abort$/;"	f
s:CompactViewIncr	plugged/ctrlsf.vim/autoload/ctrlsf/view.vim	/^func! s:CompactViewIncr(base_vlnum) abort$/;"	f
s:CompletableSubcommands	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:CompletableSubcommands(dir) abort$/;"	f
s:CompleteHeads	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:CompleteHeads(dir) abort$/;"	f
s:CompletePush	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:CompletePush(A, L, P, ...) abort$/;"	f
s:CompleteRemote	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:CompleteRemote(A, L, P, ...) abort$/;"	f
s:CompleteRevision	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:CompleteRevision(A, L, P, ...) abort$/;"	f
s:CompleteSub	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:CompleteSub(subcommand, A, L, P, ...) abort$/;"	f
s:ConfigCallback	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ConfigCallback(r, into) abort$/;"	f
s:ConfigLengthSort	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ConfigLengthSort(i1, i2) abort$/;"	f
s:ConfigTimestamps	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ConfigTimestamps(dir, dict) abort$/;"	f
s:ConsumeResult	plugged/ctrlsf.vim/autoload/ctrlsf/async.vim	/^func! s:ConsumeResult(max) abort$/;"	f
s:ContainingCommit	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ContainingCommit() abort$/;"	f
s:ConvertLeadingSpacesToTabs	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:ConvertLeadingSpacesToTabs(line) abort$/;"	f
s:ConvertLeadingTabsToSpaces	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:ConvertLeadingTabsToSpaces(line) abort$/;"	f
s:ConvertLeadingWhiteSpace	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:ConvertLeadingWhiteSpace(line) abort$/;"	f
s:CountNonESCedOccurances	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:CountNonESCedOccurances(str, searchstr, escChar) abort$/;"	f
s:CreateDelimMapFromCms	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:CreateDelimMapFromCms() abort$/;"	f
s:CreateMaps	plugged/nerdcommenter/plugin/nerdcommenter.vim	/^function! s:CreateMaps(modes, target, desc, combo)$/;"	f
s:CreateTabTreeVCS	plugged/nerdtree/nerdtree_plugin/vcs.vim	/^function! s:CreateTabTreeVCS(name)$/;"	f
s:Creator	plugged/nerdtree/lib/nerdtree/creator.vim	/^let s:Creator = {}$/;"	v
s:Creator.BufNamePrefix	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.BufNamePrefix()$/;"	f
s:Creator.CreateMirror	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateMirror()$/;"	f
s:Creator.CreateTabTree	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateTabTree(name)$/;"	f
s:Creator.CreateWindowTree	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateWindowTree(dir)$/;"	f
s:Creator.New	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.New()$/;"	f
s:Creator.ToggleTabTree	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.ToggleTabTree(dir)$/;"	f
s:Creator._bindMappings	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._bindMappings()$/;"	f
s:Creator._broadcastInitEvent	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._broadcastInitEvent()$/;"	f
s:Creator._createNERDTree	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._createNERDTree(path, type)$/;"	f
s:Creator._createTreeWin	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._createTreeWin()$/;"	f
s:Creator._isBufHidden	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._isBufHidden(nr)$/;"	f
s:Creator._nextBufferName	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._nextBufferName()$/;"	f
s:Creator._nextBufferNumber	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._nextBufferNumber()$/;"	f
s:Creator._pathForString	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._pathForString(str)$/;"	f
s:Creator._removeTreeBufForTab	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._removeTreeBufForTab()$/;"	f
s:Creator._setCommonBufOptions	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._setCommonBufOptions()$/;"	f
s:Creator._setupStatusline	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._setupStatusline()$/;"	f
s:Creator._tabpagevar	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._tabpagevar(tabnr, var)$/;"	f
s:Creator._uniq	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._uniq(list)$/;"	f
s:Creator.createMirror	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createMirror()$/;"	f
s:Creator.createTabTree	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createTabTree(name)$/;"	f
s:Creator.createWindowTree	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createWindowTree(dir)$/;"	f
s:Creator.toggleTabTree	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.toggleTabTree(dir)$/;"	f
s:CurlResponse	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:CurlResponse(result) abort$/;"	f
s:CursorHoldUpdate	plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:CursorHoldUpdate()$/;"	f
s:DefactorizeLine	plugged/ctrlsf.vim/autoload/ctrlsf/db.vim	/^func! s:DefactorizeLine(line, fname_guess) abort$/;"	f
s:DefaultContext	plugged/ctrlsf.vim/autoload/ctrlsf/opt.vim	/^func! s:DefaultContext() abort$/;"	f
s:DevIconsGetArtifactFix	plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:DevIconsGetArtifactFix()$/;"	f
s:Diff	plugged/ctrlsf.vim/autoload/ctrlsf/edit.vim	/^func! s:Diff(orig, modi) abort$/;"	f
s:DiffFile	plugged/ctrlsf.vim/autoload/ctrlsf/edit.vim	/^func! s:DiffFile(orig, modi) abort$/;"	f
s:DiffModifier	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DiffModifier(count, default) abort$/;"	f
s:DifftoolSubcommand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DifftoolSubcommand(line1, line2, range, bang, mods, options) abort$/;"	f
s:Dir	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Dir(...) abort$/;"	f
s:DirCheck	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DirCheck(...) abort$/;"	f
s:DirCommitFile	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DirCommitFile(path) abort$/;"	f
s:DirRev	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DirRev(url) abort$/;"	f
s:DirUrlPrefix	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DirUrlPrefix(...) abort$/;"	f
s:DiscardResult	plugged/ctrlsf.vim/autoload/ctrlsf/async.vim	/^func! s:DiscardResult() abort$/;"	f
s:Do	plugged/nvim-cmp/autoload/vital/_cmp/VS/Vim/Buffer.vim	/^let s:Do = { -> {} }$/;"	v
s:Do	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Do(action, visual) abort$/;"	f
s:DoAutocmd	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoAutocmd(...) abort$/;"	f
s:DoAutocmdChanged	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoAutocmdChanged(dir) abort$/;"	f
s:DoSearchAsync	plugged/ctrlsf.vim/autoload/ctrlsf.vim	/^func! s:DoSearchAsync(args) abort$/;"	f
s:DoSearchSync	plugged/ctrlsf.vim/autoload/ctrlsf.vim	/^func! s:DoSearchSync(args) abort$/;"	f
s:DoStagePushHeader	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoStagePushHeader(value) abort$/;"	f
s:DoStageUnpushed	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoStageUnpushed(record) abort$/;"	f
s:DoStageUnpushedHeading	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoStageUnpushedHeading(heading) abort$/;"	f
s:DoStageUnstaged	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoStageUnstaged(record) abort$/;"	f
s:DoStageUnstagedHeading	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoStageUnstagedHeading(heading) abort$/;"	f
s:DoStageUntracked	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoStageUntracked(record) abort$/;"	f
s:DoStageUntrackedHeading	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoStageUntrackedHeading(heading) abort$/;"	f
s:DoToggleHeadHeader	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleHeadHeader(value) abort$/;"	f
s:DoToggleHelpHeader	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleHelpHeader(value) abort$/;"	f
s:DoTogglePushHeader	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoTogglePushHeader(value) abort$/;"	f
s:DoToggleStaged	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleStaged(record) abort$/;"	f
s:DoToggleStagedHeading	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleStagedHeading(...) abort$/;"	f
s:DoToggleUnpulled	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUnpulled(record) abort$/;"	f
s:DoToggleUnpulledHeading	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUnpulledHeading(heading) abort$/;"	f
s:DoToggleUnpushed	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUnpushed(record) abort$/;"	f
s:DoToggleUnpushedHeading	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUnpushedHeading(heading) abort$/;"	f
s:DoToggleUnstaged	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUnstaged(record) abort$/;"	f
s:DoToggleUnstagedHeading	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUnstagedHeading(...) abort$/;"	f
s:DoToggleUntracked	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUntracked(record) abort$/;"	f
s:DoToggleUntrackedHeading	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUntrackedHeading(...) abort$/;"	f
s:DoUnstageStaged	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoUnstageStaged(record) abort$/;"	f
s:DoUnstageStagedHeading	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoUnstageStagedHeading(heading) abort$/;"	f
s:DoUnstageUnpulled	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoUnstageUnpulled(record) abort$/;"	f
s:DoUnstageUnpulledHeading	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoUnstageUnpulledHeading(heading) abort$/;"	f
s:DoUnstageUnpushed	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoUnstageUnpushed(record) abort$/;"	f
s:DoUnstageUnstaged	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoUnstageUnstaged(record) abort$/;"	f
s:DoesBlockHaveDelim	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:DoesBlockHaveDelim(delim, top, bottom) abort$/;"	f
s:DoesBlockHaveMultipartDelim	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:DoesBlockHaveMultipartDelim(top, bottom) abort$/;"	f
s:DotRelative	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DotRelative(path, ...) abort$/;"	f
s:END_PATTERN	plugged/current-func-info.vim/ftplugin/vim/cfi.vim	/^let s:END_PATTERN   = '\\C'.'^\\s*'.'endf\\%[unction]\\>'$/;"	v
s:Echo	plugged/ctrlsf.vim/autoload/ctrlsf/log.vim	/^func! s:Echo(format, argv, hlgroup, save) abort$/;"	f
s:Ellipsis	plugged/ctrlsf.vim/autoload/ctrlsf/view.vim	/^func! s:Ellipsis() abort$/;"	f
s:Esc	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:Esc(str) abort$/;"	f
s:Escape	plugged/ctrlsf.vim/autoload/ctrlsf/backend.vim	/^func! s:Escape(for_shell, str)$/;"	f
s:Event	plugged/nerdtree/lib/nerdtree/event.vim	/^let s:Event = {}$/;"	v
s:Event.New	plugged/nerdtree/lib/nerdtree/event.vim	/^function! s:Event.New(nerdtree, subject, action, params) abort$/;"	f
s:ExecPath	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ExecPath() abort$/;"	f
s:ExecSearch	plugged/ctrlsf.vim/autoload/ctrlsf.vim	/^func! s:ExecSearch(args) abort$/;"	f
s:Expand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Expand(rev, ...) abort$/;"	f
s:ExpandMap	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! s:ExpandMap(map)$/;"	f
s:ExpandVar	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ExpandVar(other, var, flags, esc, ...) abort$/;"	f
s:ExpandVarLegacy	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ExpandVarLegacy(str) abort$/;"	f
s:ExpireStatus	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ExpireStatus(bufnr) abort$/;"	f
s:FUNCTION_ARGUMENTS	plugged/current-func-info.vim/ftplugin/javascript/cfi.vim	/^let s:FUNCTION_ARGUMENTS  = '\\(' . '([^)]*)' . '\\)'$/;"	v
s:FUNCTION_NAME	plugged/current-func-info.vim/ftplugin/javascript/cfi.vim	/^let s:FUNCTION_NAME       = '\\(\\%([^[:blank:]()*]\\)\\+\\)'$/;"	v
s:FUNCTION_PATTERN	plugged/current-func-info.vim/ftplugin/c/cfi.vim	/^let s:FUNCTION_PATTERN = '\\C'.'\\(\\w\\+\\)\\s*('$/;"	v
s:FUNCTION_TYPE	plugged/current-func-info.vim/ftplugin/javascript/cfi.vim	/^let s:FUNCTION_TYPE       = '\\('$/;"	v
s:FetchSubcommand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:FetchSubcommand(...) abort$/;"	f
s:FileIgnoreCase	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:FileIgnoreCase(for_completion) abort$/;"	f
s:Filename	plugged/ctrlsf.vim/autoload/ctrlsf/view.vim	/^func! s:Filename(paragraph) abort$/;"	f
s:FilterEscape	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:FilterEscape(items, ...) abort$/;"	f
s:FindBoundingLinesOfSexyCom	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:FindBoundingLinesOfSexyCom(lineNum) abort$/;"	f
s:FindDelimiterIndex	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:FindDelimiterIndex(delimiter, line) abort$/;"	f
s:FindMarker	plugged/ctrlsf.vim/autoload/ctrlsf/fs.vim	/^func! s:FindMarker(dir, markers) abort$/;"	f
s:FindNextFile	plugged/ctrlsf.vim/autoload/ctrlsf/view.vim	/^func! s:FindNextFile(forward) abort$/;"	f
s:FindParentVCSRoot	plugged/nerdtree/nerdtree_plugin/vcs.vim	/^function! s:FindParentVCSRoot(path)$/;"	f
s:FlagSet	plugged/nerdtree/lib/nerdtree/flag_set.vim	/^let s:FlagSet = {}$/;"	v
s:FlagSet.New	plugged/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.New()$/;"	f
s:FlagSet._flagsForScope	plugged/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet._flagsForScope(scope)$/;"	f
s:FlagSet.addFlag	plugged/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.addFlag(scope, flag)$/;"	f
s:FlagSet.clearFlags	plugged/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.clearFlags(scope)$/;"	f
s:FlagSet.removeFlag	plugged/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.removeFlag(scope, flag)$/;"	f
s:FlagSet.renderToString	plugged/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.renderToString()$/;"	f
s:FocusMatch	plugged/ctrlsf.vim/autoload/ctrlsf/utils.vim	/^func! s:FocusMatch(lines) abort$/;"	f
s:Format	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Format(val) abort$/;"	f
s:FormatFile	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:FormatFile(dict) abort$/;"	f
s:FormatLog	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:FormatLog(dict) abort$/;"	f
s:FormatRebase	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:FormatRebase(dict) abort$/;"	f
s:GF	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:GF(mode) abort$/;"	f
s:Generate	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Generate(object, ...) abort$/;"	f
s:GetSexyComLeft	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:GetSexyComLeft(space, esc) abort$/;"	f
s:GetSexyComMarker	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:GetSexyComMarker(space, esc) abort$/;"	f
s:GetSexyComRight	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:GetSexyComRight(space, esc) abort$/;"	f
s:GitCmd	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:GitCmd() abort$/;"	f
s:GitDir	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:GitDir(...) abort$/;"	f
s:GitShellCmd	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:GitShellCmd() abort$/;"	f
s:GlobComplete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:GlobComplete(lead, pattern, ...) abort$/;"	f
s:Go	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let s:Go = ""$/;"	v
s:Go	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let s:Go = "\\<C-G>U"$/;"	v
s:GrepCfile	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:GrepCfile(result) abort$/;"	f
s:GrepOptions	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:GrepOptions(args, dir) abort$/;"	f
s:GrepParseLine	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:GrepParseLine(options, quiet, dir, line) abort$/;"	f
s:GrepSubcommand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:GrepSubcommand(line1, line2, range, bang, mods, options) abort$/;"	f
s:HSL2RGB	plugged/neodark.vim/colors/neodark.vim	/^function! s:HSL2RGB(HSL)$/;"	f
s:HasCStyleComments	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:HasCStyleComments() abort$/;"	f
s:HasLeadingTabs	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:HasLeadingTabs(...) abort$/;"	f
s:HasMultipartDelims	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:HasMultipartDelims() abort$/;"	f
s:HasOpt	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:HasOpt(args, ...) abort$/;"	f
s:IfFocusOnStartup	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:IfFocusOnStartup()$/;"	f
s:InitMainWindow	plugged/ctrlsf.vim/autoload/ctrlsf/win.vim	/^func! s:InitMainWindow() abort$/;"	f
s:InitPreviewWindow	plugged/ctrlsf.vim/autoload/ctrlsf/preview.vim	/^func! s:InitPreviewWindow() abort$/;"	f
s:InitVariable	plugged/nerdcommenter/plugin/nerdcommenter.vim	/^function s:InitVariable(var, value)$/;"	f
s:InitViewMode	plugged/ctrlsf.vim/autoload/ctrlsf.vim	/^func! s:InitViewMode() abort$/;"	f
s:InvertComment	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:InvertComment(firstLine, lastLine) abort$/;"	f
s:IsAllConsumed	plugged/ctrlsf.vim/autoload/ctrlsf/async.vim	/^func! s:IsAllConsumed() abort$/;"	f
s:IsCommented	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:IsCommented(left, right, line) abort$/;"	f
s:IsCommentedFromStartOfLine	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:IsCommentedFromStartOfLine(left, line) abort$/;"	f
s:IsCommentedNormOrSexy	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:IsCommentedNormOrSexy(lineNum) abort$/;"	f
s:IsCommentedOutermost	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:IsCommentedOutermost(left, right, leftAlt, rightAlt, line) abort$/;"	f
s:IsConflicted	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:IsConflicted() abort$/;"	f
s:IsCurrentWindowNERDTree	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:IsCurrentWindowNERDTree()$/;"	f
s:IsDelimValid	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:IsDelimValid(delimiter, delIndx, line) abort$/;"	f
s:IsEscaped	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:IsEscaped(str, indx, escChar) abort$/;"	f
s:IsInSexyComment	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:IsInSexyComment(line) abort$/;"	f
s:IsNERDTreeOpenInCurrentTab	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:IsNERDTreeOpenInCurrentTab()$/;"	f
s:IsNERDTreePresentInCurrentTab	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:IsNERDTreePresentInCurrentTab()$/;"	f
s:IsNumEven	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:IsNumEven(num) abort$/;"	f
s:IsSexyComment	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:IsSexyComment(topline, bottomline) abort$/;"	f
s:Job	plugged/nerdtree-git-plugin/autoload/gitstatus/job.vim	/^let s:Job = {$/;"	v
s:Job.onExitCB	plugged/nerdtree-git-plugin/autoload/gitstatus/job.vim	/^function! s:Job.onExitCB() abort$/;"	f
s:Job.onFailed	plugged/nerdtree-git-plugin/autoload/gitstatus/job.vim	/^function! s:Job.onFailed() abort$/;"	f
s:Job.onStderrCB	plugged/nerdtree-git-plugin/autoload/gitstatus/job.vim	/^function! s:Job.onStderrCB(data) abort$/;"	f
s:Job.onStdoutCB	plugged/nerdtree-git-plugin/autoload/gitstatus/job.vim	/^function! s:Job.onStdoutCB(data) abort$/;"	f
s:Job.onSuccess	plugged/nerdtree-git-plugin/autoload/gitstatus/job.vim	/^function! s:Job.onSuccess() abort$/;"	f
s:Job.run	plugged/nerdtree-git-plugin/autoload/gitstatus/job.vim	/^    function! s:Job.run(cmd) abort$/;"	f
s:JobExecute	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:JobExecute(argv, jopts, stdin, callback, ...) abort$/;"	f
s:JobNvimCallback	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:JobNvimCallback(lines, job, data, type) abort$/;"	f
s:JobNvimExit	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:JobNvimExit(dict, callback, job, data, type) dict abort$/;"	f
s:JobOpts	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:JobOpts(cmd, env) abort$/;"	f
s:JobVimExit	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:JobVimExit(dict, callback, temp, job, status) abort$/;"	f
s:JoinChomp	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:JoinChomp(list) abort$/;"	f
s:KeyMap	plugged/nerdtree/lib/nerdtree/key_map.vim	/^let s:KeyMap = {}$/;"	v
s:KeyMap.Add	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Add(keymap)$/;"	f
s:KeyMap.All	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.All()$/;"	f
s:KeyMap.BindAll	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.BindAll()$/;"	f
s:KeyMap.Compare	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Compare(keyMap1, keyMap2)$/;"	f
s:KeyMap.Create	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Create(options)$/;"	f
s:KeyMap.FindFor	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.FindFor(key, scope)$/;"	f
s:KeyMap.Invoke	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Invoke(key)$/;"	f
s:KeyMap.Remove	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Remove(key, scope)$/;"	f
s:KeyMap.bind	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.bind()$/;"	f
s:KeyMap.invoke	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.invoke(...)$/;"	f
s:Keywordprg	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Keywordprg() abort$/;"	f
s:LastIndexOfDelim	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:LastIndexOfDelim(delim, str) abort$/;"	f
s:Left	plugged/auto-pairs/plugin/auto-pairs.vim	/^let s:Left = s:Go."\\<LEFT>"$/;"	v
s:Left	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:Left(...) abort$/;"	f
s:LeftMostIndx	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:LeftMostIndx(countCommentedLines, countEmptyLines, topline, bottomline) abort$/;"	f
s:Line	plugged/ctrlsf.vim/autoload/ctrlsf/view.vim	/^func! s:Line(line) abort$/;"	f
s:LineCompact	plugged/ctrlsf.vim/autoload/ctrlsf/view.vim	/^func! s:LineCompact(match) abort$/;"	f
s:LinesError	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:LinesError(...) abort$/;"	f
s:Listener	plugged/nerdtree-git-plugin/autoload/gitstatus/listener.vim	/^let s:Listener = {$/;"	v
s:Listener.HasPath	plugged/nerdtree-git-plugin/autoload/gitstatus/listener.vim	/^function! s:Listener.HasPath(path_str) abort$/;"	f
s:Listener.OnInit	plugged/nerdtree-git-plugin/autoload/gitstatus/listener.vim	/^function! s:Listener.OnInit(event) abort$/;"	f
s:Listener.OnRefresh	plugged/nerdtree-git-plugin/autoload/gitstatus/listener.vim	/^function! s:Listener.OnRefresh(event) abort$/;"	f
s:Listener.OnRefreshFlags	plugged/nerdtree-git-plugin/autoload/gitstatus/listener.vim	/^function! s:Listener.OnRefreshFlags(event) abort$/;"	f
s:Listener.SetNext	plugged/nerdtree-git-plugin/autoload/gitstatus/listener.vim	/^function! s:Listener.SetNext(cache) abort$/;"	f
s:Listener.TryUpdateNERDTreeUI	plugged/nerdtree-git-plugin/autoload/gitstatus/listener.vim	/^function! s:Listener.TryUpdateNERDTreeUI() abort$/;"	f
s:Listener.callback	plugged/nerdtree-git-plugin/autoload/gitstatus/listener.vim	/^function! s:Listener.callback(event) abort$/;"	f
s:Listener.changed	plugged/nerdtree-git-plugin/autoload/gitstatus/listener.vim	/^function! s:Listener.changed() abort$/;"	f
s:Listener.getOption	plugged/nerdtree-git-plugin/autoload/gitstatus/listener.vim	/^function! s:Listener.getOption(name, default) abort$/;"	f
s:Listener.update	plugged/nerdtree-git-plugin/autoload/gitstatus/listener.vim	/^function! s:Listener.update() abort$/;"	f
s:LoadPlugin	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:LoadPlugin()$/;"	f
s:LocateCompactView	plugged/ctrlsf.vim/autoload/ctrlsf/view.vim	/^func! s:LocateCompactView(vlnum) abort$/;"	f
s:LocateNormalView	plugged/ctrlsf.vim/autoload/ctrlsf/view.vim	/^func! s:LocateNormalView(vlnum) abort$/;"	f
s:LogFlushQueue	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:LogFlushQueue(state, dir) abort$/;"	f
s:LogParse	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:LogParse(state, dir, prefix, line) abort$/;"	f
s:Logger	plugged/nerdtree-git-plugin/autoload/gitstatus/log.vim	/^let s:Logger = {}$/;"	v
s:Logger.debug	plugged/nerdtree-git-plugin/autoload/gitstatus/log.vim	/^function! s:Logger.debug(msg) abort$/;"	f
s:Logger.error	plugged/nerdtree-git-plugin/autoload/gitstatus/log.vim	/^function! s:Logger.error(msg) abort$/;"	f
s:Logger.info	plugged/nerdtree-git-plugin/autoload/gitstatus/log.vim	/^function! s:Logger.info(msg) abort$/;"	f
s:Logger.output	plugged/nerdtree-git-plugin/autoload/gitstatus/log.vim	/^function! s:Logger.output(level, msg) abort$/;"	f
s:Logger.warning	plugged/nerdtree-git-plugin/autoload/gitstatus/log.vim	/^function! s:Logger.warning(msg) abort$/;"	f
s:MAIN_BUF_NAME	plugged/ctrlsf.vim/autoload/ctrlsf/win.vim	/^let s:MAIN_BUF_NAME = "__CtrlSF__"$/;"	v
s:MakeParagraph	plugged/ctrlsf.vim/autoload/ctrlsf/db.vim	/^func! s:MakeParagraph() abort$/;"	f
s:Map	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Map(mode, lhs, rhs, ...) abort$/;"	f
s:Map	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:Map(mode, lhs, rhs, flags) abort$/;"	f
s:MapMotion	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:MapMotion(lhs, rhs) abort$/;"	f
s:MenuController	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^let s:MenuController = {}$/;"	v
s:MenuController.New	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController.New(menuItems)$/;"	f
s:MenuController._allIndexesFor	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._allIndexesFor(shortcut)$/;"	f
s:MenuController._current	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._current()$/;"	f
s:MenuController._cursorDown	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._cursorDown()$/;"	f
s:MenuController._cursorUp	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._cursorUp()$/;"	f
s:MenuController._echoPrompt	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._echoPrompt()$/;"	f
s:MenuController._handleKeypress	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._handleKeypress(key)$/;"	f
s:MenuController._nextIndexFor	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._nextIndexFor(shortcut)$/;"	f
s:MenuController._restoreOptions	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._restoreOptions()$/;"	f
s:MenuController._saveOptions	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._saveOptions()$/;"	f
s:MenuController._setCmdheight	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._setCmdheight()$/;"	f
s:MenuController.isMinimal	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController.isMinimal()$/;"	f
s:MenuController.showMenu	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController.showMenu()$/;"	f
s:MenuItem	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^let s:MenuItem = {}$/;"	v
s:MenuItem.All	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.All()$/;"	f
s:MenuItem.AllEnabled	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.AllEnabled()$/;"	f
s:MenuItem.Create	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.Create(options)$/;"	f
s:MenuItem.CreateSeparator	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.CreateSeparator(options)$/;"	f
s:MenuItem.CreateSubmenu	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.CreateSubmenu(options)$/;"	f
s:MenuItem.enabled	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.enabled()$/;"	f
s:MenuItem.execute	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.execute()$/;"	f
s:MenuItem.isSeparator	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.isSeparator()$/;"	f
s:MenuItem.isSubmenu	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.isSubmenu()$/;"	f
s:MergeHead	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:MergeHead(dir) abort$/;"	f
s:MergeSubcommand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:MergeSubcommand(line1, line2, range, bang, mods, options) abort$/;"	f
s:MergetoolSubcommand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:MergetoolSubcommand(line1, line2, range, bang, mods, options) abort$/;"	f
s:ModifyFileName	plugged/ctrlsf.vim/autoload/ctrlsf/class/paragraph.vim	/^func! s:ModifyFileName(filename) abort$/;"	f
s:Mods	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Mods(mods, ...) abort$/;"	f
s:Move	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Move(force, rename, destination) abort$/;"	f
s:Multipart	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:Multipart() abort$/;"	f
s:NAMED_FUNCTION	plugged/current-func-info.vim/ftplugin/javascript/cfi.vim	/^let s:NAMED_FUNCTION = '\\%('$/;"	v
s:NERDFileNameEscape	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^let s:NERDFileNameEscape="[]#*$%'\\" ?`!&();<>\\\\"$/;"	v
s:NERDTree	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^let s:NERDTree = {}$/;"	v
s:NERDTree.AddPathFilter	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.AddPathFilter(callback)$/;"	f
s:NERDTree.Close	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.Close()$/;"	f
s:NERDTree.CursorToBookmarkTable	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.CursorToBookmarkTable()$/;"	f
s:NERDTree.CursorToTreeWin	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.CursorToTreeWin(...)$/;"	f
s:NERDTree.ExistsForBuf	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ExistsForBuf()$/;"	f
s:NERDTree.ExistsForTab	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ExistsForTab()$/;"	f
s:NERDTree.ForCurrentBuf	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ForCurrentBuf()$/;"	f
s:NERDTree.ForCurrentTab	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ForCurrentTab()$/;"	f
s:NERDTree.GetWinNum	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.GetWinNum()$/;"	f
s:NERDTree.IsOpen	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.IsOpen()$/;"	f
s:NERDTree.MustBeOpen	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.MustBeOpen()$/;"	f
s:NERDTree.New	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.New(path, type)$/;"	f
s:NERDTree.PathFilters	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.PathFilters()$/;"	f
s:NERDTree.changeRoot	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.changeRoot(node)$/;"	f
s:NERDTree.getRoot	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.getRoot()$/;"	f
s:NERDTree.isTabTree	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.isTabTree()$/;"	f
s:NERDTree.isWinTree	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.isWinTree()$/;"	f
s:NERDTree.previousBuf	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.previousBuf()$/;"	f
s:NERDTree.render	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.render()$/;"	f
s:NERDTree.setPreviousBuf	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.setPreviousBuf(bnum)$/;"	f
s:NERDTreeCloseAllTabs	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NERDTreeCloseAllTabs()$/;"	f
s:NERDTreeFindFile	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NERDTreeFindFile()$/;"	f
s:NERDTreeFocus	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NERDTreeFocus()$/;"	f
s:NERDTreeFocusToggle	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NERDTreeFocusToggle()$/;"	f
s:NERDTreeMirrorOrCreate	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NERDTreeMirrorOrCreate()$/;"	f
s:NERDTreeMirrorToggle	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NERDTreeMirrorToggle()$/;"	f
s:NERDTreeOpenAllTabs	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NERDTreeOpenAllTabs()$/;"	f
s:NERDTreeRestoreFocus	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NERDTreeRestoreFocus()$/;"	f
s:NERDTreeSteppedClose	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NERDTreeSteppedClose()$/;"	f
s:NERDTreeSteppedOpen	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NERDTreeSteppedOpen()$/;"	f
s:NERDTreeToggleAllTabs	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NERDTreeToggleAllTabs()$/;"	f
s:NERDTreeUnfocus	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NERDTreeUnfocus()$/;"	f
s:NavigateUp	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:NavigateUp(count) abort$/;"	f
s:NerdEcho	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:NerdEcho(msg, typeOfMsg) abort$/;"	f
s:Nested	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:Nested() abort$/;"	f
s:NewTabCreated	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^let s:NewTabCreated = 0$/;"	v
s:NextExpandedHunk	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:NextExpandedHunk(count) abort$/;"	f
s:NextFile	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:NextFile(count) abort$/;"	f
s:NextHunk	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:NextHunk(count) abort$/;"	f
s:NextItem	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:NextItem(count) abort$/;"	f
s:NextNormalWindow	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NextNormalWindow()$/;"	f
s:NextSection	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:NextSection(count) abort$/;"	f
s:NextSectionEnd	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:NextSectionEnd(count) abort$/;"	f
s:NextToken	plugged/ctrlsf.vim/autoload/ctrlsf/lex.vim	/^func! s:NextToken(chars, start) abort$/;"	f
s:NormalView	plugged/ctrlsf.vim/autoload/ctrlsf/view.vim	/^func! s:NormalView() abort$/;"	f
s:NormalViewIncr	plugged/ctrlsf.vim/autoload/ctrlsf/view.vim	/^func! s:NormalViewIncr(base_vlnum) abort$/;"	f
s:Notifier	plugged/nerdtree/lib/nerdtree/notifier.vim	/^let s:Notifier = {}$/;"	v
s:Notifier.AddListener	plugged/nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.AddListener(event, funcname)$/;"	f
s:Notifier.GetListenersForEvent	plugged/nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.GetListenersForEvent(name)$/;"	f
s:Notifier.GetListenersMap	plugged/nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.GetListenersMap()$/;"	f
s:Notifier.NotifyListeners	plugged/nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.NotifyListeners(event, path, nerdtree, params)$/;"	f
s:NullError	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:NullError(cmd) abort$/;"	f
s:NumLinesInBuf	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:NumLinesInBuf() abort$/;"	f
s:NumberOfLeadingTabs	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:NumberOfLeadingTabs(s) abort$/;"	f
s:Open	plugged/ctrlsf.vim/autoload/ctrlsf.vim	/^func! s:Open() abort$/;"	f
s:OpenAndDraw	plugged/ctrlsf.vim/autoload/ctrlsf.vim	/^func! s:OpenAndDraw() abort$/;"	f
s:OpenFileInTab	plugged/ctrlsf.vim/autoload/ctrlsf.vim	/^func! s:OpenFileInTab(file, lnum, col, mode) abort$/;"	f
s:OpenFileInWindow	plugged/ctrlsf.vim/autoload/ctrlsf.vim	/^func! s:OpenFileInWindow(file, lnum, col, mode, split) abort$/;"	f
s:OpenMatch	plugged/ctrlsf.vim/autoload/ctrlsf/utils.vim	/^func! s:OpenMatch(lines) abort$/;"	f
s:OpenParse	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:OpenParse(string, wants_cmd) abort$/;"	f
s:Opener	plugged/nerdtree/lib/nerdtree/opener.vim	/^let s:Opener = {}$/;"	v
s:Opener.New	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener.New(path, opts)$/;"	f
s:Opener._bufInWindows	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._bufInWindows(bnum)$/;"	f
s:Opener._checkToCloseTree	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._checkToCloseTree(newtab)$/;"	f
s:Opener._firstUsableWindow	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._firstUsableWindow()$/;"	f
s:Opener._gotoTargetWin	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._gotoTargetWin()$/;"	f
s:Opener._isWindowUsable	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._isWindowUsable(winnumber)$/;"	f
s:Opener._newSplit	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._newSplit()$/;"	f
s:Opener._newVSplit	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._newVSplit()$/;"	f
s:Opener._openDirectory	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._openDirectory(node)$/;"	f
s:Opener._openFile	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._openFile()$/;"	f
s:Opener._previousWindow	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._previousWindow()$/;"	f
s:Opener._restoreCursorPos	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._restoreCursorPos()$/;"	f
s:Opener._reuseWindow	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._reuseWindow()$/;"	f
s:Opener._saveCursorPos	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._saveCursorPos()$/;"	f
s:Opener.open	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener.open(target)$/;"	f
s:OptionComp	plugged/ctrlsf.vim/autoload/ctrlsf/comp.vim	/^func! s:OptionComp(arglead, cmdline, cursorpos)$/;"	f
s:Owner	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Owner(path, ...) abort$/;"	f
s:PREVIEW_BUF_NAME	plugged/ctrlsf.vim/autoload/ctrlsf/preview.vim	/^let s:PREVIEW_BUF_NAME = "__CtrlSFPreview__"$/;"	v
s:PROTOTYPE_DEF	plugged/current-func-info.vim/ftplugin/perl/cfi.vim	/^let s:PROTOTYPE_DEF = '([^()]*)'$/;"	v
s:ParseOneLine	plugged/ctrlsf.vim/autoload/ctrlsf/db.vim	/^func! s:ParseOneLine(line) abort$/;"	f
s:ParseOptions	plugged/ctrlsf.vim/autoload/ctrlsf/opt.vim	/^func! s:ParseOptions(options_str) abort$/;"	f
s:PatchSearchExpr	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:PatchSearchExpr(reverse) abort$/;"	f
s:Path	plugged/nerdtree/lib/nerdtree/path.vim	/^let s:Path = {}$/;"	v
s:Path.AbsolutePathFor	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.AbsolutePathFor(pathStr)$/;"	f
s:Path.CopyingSupported	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.CopyingSupported()$/;"	f
s:Path.Create	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Create(fullpath)$/;"	f
s:Path.JoinPathStrings	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.JoinPathStrings(...)$/;"	f
s:Path.New	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.New(pathStr)$/;"	f
s:Path.Resolve	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Resolve(path)$/;"	f
s:Path.WinToUnixPath	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.WinToUnixPath(pathstr)$/;"	f
s:Path._escChars	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._escChars()$/;"	f
s:Path._ignorePatternMatches	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._ignorePatternMatches(pattern)$/;"	f
s:Path._splitChunks	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._splitChunks(path)$/;"	f
s:Path._str	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._str()$/;"	f
s:Path._strForCd	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForCd()$/;"	f
s:Path._strForEdit	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForEdit()$/;"	f
s:Path._strForGlob	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForGlob()$/;"	f
s:Path._strForUI	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForUI()$/;"	f
s:Path.addDelimiter	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.addDelimiter(line)$/;"	f
s:Path.bookmarkNames	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.bookmarkNames()$/;"	f
s:Path.cacheDisplayString	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.cacheDisplayString() abort$/;"	f
s:Path.changeToDir	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.changeToDir()$/;"	f
s:Path.copy	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.copy(dest)$/;"	f
s:Path.copyingWillOverwrite	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.copyingWillOverwrite(dest)$/;"	f
s:Path.createParentDirectories	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.createParentDirectories(path)$/;"	f
s:Path.delete	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.delete()$/;"	f
s:Path.displayString	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.displayString()$/;"	f
s:Path.edit	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.edit()$/;"	f
s:Path.equals	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.equals(path)$/;"	f
s:Path.exists	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.exists()$/;"	f
s:Path.extractDriveLetter	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.extractDriveLetter(fullpath)$/;"	f
s:Path.getDir	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getDir()$/;"	f
s:Path.getLastPathComponent	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getLastPathComponent(dirSlash)$/;"	f
s:Path.getParent	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getParent()$/;"	f
s:Path.getSortKey	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getSortKey()$/;"	f
s:Path.getSortOrderIndex	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getSortOrderIndex()$/;"	f
s:Path.ignore	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.ignore(nerdtree)$/;"	f
s:Path.isAncestor	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isAncestor(child)$/;"	f
s:Path.isHiddenUnder	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isHiddenUnder(path)$/;"	f
s:Path.isUnder	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnder(parent)$/;"	f
s:Path.isUnixHiddenFile	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnixHiddenFile()$/;"	f
s:Path.isUnixHiddenPath	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnixHiddenPath()$/;"	f
s:Path.readInfoFromDisk	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.readInfoFromDisk(fullpath)$/;"	f
s:Path.refresh	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.refresh(nerdtree)$/;"	f
s:Path.refreshFlags	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.refreshFlags(nerdtree)$/;"	f
s:Path.rename	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.rename(newPath)$/;"	f
s:Path.str	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.str(...)$/;"	f
s:Path.strTrunk	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.strTrunk()$/;"	f
s:Path.tabnr	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.tabnr()$/;"	f
s:PathComp	plugged/ctrlsf.vim/autoload/ctrlsf/comp.vim	/^func! s:PathComp(arglead, cmdline, cursorpos)$/;"	f
s:PathInfo	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:PathInfo(url) abort$/;"	f
s:PlaceDelimitersAndInsBetween	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:PlaceDelimitersAndInsBetween() abort$/;"	f
s:PrepareEnv	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:PrepareEnv(env, dir) abort$/;"	f
s:PrepareJob	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:PrepareJob(opts) abort$/;"	f
s:PreparePathArgs	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:PreparePathArgs(cmd, dir, literal, explicit) abort$/;"	f
s:PreviewFile	plugged/ctrlsf.vim/autoload/ctrlsf.vim	/^func! s:PreviewFile(file, lnum, col, follow) abort$/;"	f
s:PreviousFile	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:PreviousFile(count) abort$/;"	f
s:PreviousHunk	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:PreviousHunk(count) abort$/;"	f
s:PreviousItem	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:PreviousItem(count) abort$/;"	f
s:PreviousSection	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:PreviousSection(count) abort$/;"	f
s:PreviousSectionEnd	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:PreviousSectionEnd(count) abort$/;"	f
s:Printf	plugged/ctrlsf.vim/autoload/ctrlsf/log.vim	/^func! s:Printf(format, argv) abort$/;"	f
s:ProjectionistDetect	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:ProjectionistDetect() abort$/;"	f
s:PushSubcommand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:PushSubcommand(...) abort$/;"	f
s:QueryLog	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:QueryLog(refspec, limit) abort$/;"	f
s:QuickfixCreate	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:QuickfixCreate(nr, opts) abort$/;"	f
s:QuickfixGet	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:QuickfixGet(nr, ...) abort$/;"	f
s:QuickfixOpen	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:QuickfixOpen(nr, mods) abort$/;"	f
s:QuickfixSet	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:QuickfixSet(nr, ...) abort$/;"	f
s:QuickfixStream	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:QuickfixStream(nr, event, title, cmd, first, mods, callback, ...) abort$/;"	f
s:Quit	plugged/ctrlsf.vim/autoload/ctrlsf.vim	/^func! s:Quit() abort$/;"	f
s:RGB2HSL	plugged/neodark.vim/colors/neodark.vim	/^function! s:RGB2HSL(RGB)$/;"	f
s:RGB2hex	plugged/neodark.vim/colors/neodark.vim	/^function! s:RGB2hex(RGB)$/;"	f
s:ReadPrepare	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ReadPrepare(line1, count, range, mods) abort$/;"	f
s:RebaseArgument	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RebaseArgument() abort$/;"	f
s:RebaseSubcommand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RebaseSubcommand(line1, line2, range, bang, mods, options) abort$/;"	f
s:RecoverStateAfterLineComment	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:RecoverStateAfterLineComment(state) abort$/;"	f
s:Refresh	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! s:Refresh()$/;"	f
s:Relative	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Relative(...) abort$/;"	f
s:ReloadStatus	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ReloadStatus(...) abort$/;"	f
s:ReloadStatusBuffer	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ReloadStatusBuffer(...) abort$/;"	f
s:ReloadTabStatus	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ReloadTabStatus(...) abort$/;"	f
s:ReloadWinStatus	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ReloadWinStatus(...) abort$/;"	f
s:Remote	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Remote(dir, remote, flags, cb) abort$/;"	f
s:RemoteCallback	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RemoteCallback(config, into, flags, cb) abort$/;"	f
s:RemoteDefault	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RemoteDefault(dir) abort$/;"	f
s:RemoteParseArgs	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RemoteParseArgs(args) abort$/;"	f
s:RemoteResolve	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RemoteResolve(url, flags) abort$/;"	f
s:RemoteUrlCallback	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RemoteUrlCallback(remote, callback) abort$/;"	f
s:Remove	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Remove(after, force) abort$/;"	f
s:RemoveDelimiters	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:RemoveDelimiters(left, right, line) abort$/;"	f
s:ReplaceCmd	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ReplaceCmd(cmd) abort$/;"	f
s:ReplaceDelims	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:ReplaceDelims(toReplace1, toReplace2, replacor1, replacor2, str) abort$/;"	f
s:ReplaceLeftMostDelim	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:ReplaceLeftMostDelim(toReplace, replacor, str) abort$/;"	f
s:ReplaceRightMostDelim	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:ReplaceRightMostDelim(toReplace, replacor, str) abort$/;"	f
s:Reset	plugged/ctrlsf.vim/autoload/ctrlsf.vim	/^func! s:Reset() abort$/;"	f
s:ResizeNeighborWins	plugged/ctrlsf.vim/autoload/ctrlsf/win.vim	/^func! s:ResizeNeighborWins() abort$/;"	f
s:Resolve	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Resolve(path) abort$/;"	f
s:RestoreNERDTreeViewIfPossible	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:RestoreNERDTreeViewIfPossible()$/;"	f
s:RevertSubcommand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RevertSubcommand(line1, line2, range, bang, mods, options) abort$/;"	f
s:Right	plugged/auto-pairs/plugin/auto-pairs.vim	/^let s:Right = s:Go."\\<RIGHT>"$/;"	v
s:Right	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:Right(...) abort$/;"	f
s:RightMostIndx	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:RightMostIndx(countCommentedLines, countEmptyLines, topline, bottomline) abort$/;"	f
s:RunBufDelete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RunBufDelete(bufnr) abort$/;"	f
s:RunClose	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RunClose(state, tmp, job, ...) abort$/;"	f
s:RunCloseIn	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RunCloseIn(job) abort$/;"	f
s:RunEcho	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RunEcho(tmp) abort$/;"	f
s:RunEdit	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RunEdit(state, tmp, job) abort$/;"	f
s:RunExit	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RunExit(state, tmp, job, exit_status) abort$/;"	f
s:RunFinished	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RunFinished(state, ...) abort$/;"	f
s:RunReceive	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RunReceive(state, tmp, type, job, data, ...) abort$/;"	f
s:RunSave	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RunSave(state) abort$/;"	f
s:RunSend	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RunSend(job, str) abort$/;"	f
s:RunTick	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RunTick(job) abort$/;"	f
s:RunWait	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RunWait(state, tmp, job, ...) abort$/;"	f
s:SID	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function s:SID()$/;"	f
s:SID	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:SID() abort$/;"	f
s:SNR	plugged/nvim-cmp/autoload/vital/cmp.vim	/^let s:SNR = join(map(range(len("\\<SNR>")), '"[\\\\x" . printf("%0x", char2nr("\\<SNR>"[v:val]))/;"	v
s:SaveFile	plugged/ctrlsf.vim/autoload/ctrlsf/edit.vim	/^func! s:SaveFile(orig, modi) abort$/;"	f
s:SaveGlobalFocus	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:SaveGlobalFocus()$/;"	f
s:SaveNERDTreeViewIfPossible	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:SaveNERDTreeViewIfPossible()$/;"	f
s:SearchCwordCmd	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^func! s:SearchCwordCmd(type, word_boundary, to_exec)$/;"	f
s:SearchDone	plugged/ctrlsf.vim/autoload/ctrlsf/async.vim	/^func! s:SearchDone() abort$/;"	f
s:SearchPwordCmd	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^func! s:SearchPwordCmd(type, to_exec)$/;"	f
s:SearchVwordCmd	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^func! s:SearchVwordCmd(type, to_exec)$/;"	f
s:Selection	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Selection(arg1, ...) abort$/;"	f
s:SetupListeners	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! s:SetupListeners()$/;"	f
s:SetupStateBeforeLineComment	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:SetupStateBeforeLineComment(topLine, bottomLine) abort$/;"	f
s:SexyNested	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:SexyNested() abort$/;"	f
s:Slash	plugged/vim-fugitive/autoload/fugitive.vim	/^  function! s:Slash(path) abort$/;"	f
s:Slash	plugged/vim-fugitive/plugin/fugitive.vim	/^  function! s:Slash(path) abort$/;"	f
s:SourcedFile	plugged/vim-snippets/plugin/vimsnippets.vim	/^let s:SourcedFile=expand("<sfile>")$/;"	v
s:SplitExpandChain	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:SplitExpandChain(string, ...) abort$/;"	f
s:SquashArgument	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:SquashArgument(...) abort$/;"	f
s:SshParseConfig	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:SshParseConfig(into, root, file, ...) abort$/;"	f
s:SshParseHost	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:SshParseHost(value) abort$/;"	f
s:SshParseInclude	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:SshParseInclude(into, root, host, value) abort$/;"	f
s:StageApply	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageApply(info, reverse, extra) abort$/;"	f
s:StageArgs	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageArgs(visual) abort$/;"	f
s:StageDelete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageDelete(lnum1, lnum2, count) abort$/;"	f
s:StageDiff	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageDiff(diff) abort$/;"	f
s:StageDiffEdit	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageDiffEdit() abort$/;"	f
s:StageIgnore	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageIgnore(lnum1, lnum2, count) abort$/;"	f
s:StageInfo	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageInfo(...) abort$/;"	f
s:StageInline	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageInline(mode, ...) abort$/;"	f
s:StageJump	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageJump(offset, section, ...) abort$/;"	f
s:StagePatch	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StagePatch(lnum1,lnum2) abort$/;"	f
s:StageReveal	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageReveal() abort$/;"	f
s:StageSeek	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageSeek(info, fallback) abort$/;"	f
s:StatusCfile	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StatusCfile(...) abort$/;"	f
s:StatusCommand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StatusCommand(line1, line2, range, count, bang, mods, reg, arg, args, ...) abort$/;"	f
s:StdoutToFile	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StdoutToFile(out, cmd, ...) abort$/;"	f
s:StopJob	plugged/ctrlsf.vim/autoload/ctrlsf/async.vim	/^func! s:StopJob() abort$/;"	f
s:StopTimer	plugged/ctrlsf.vim/autoload/ctrlsf/async.vim	/^func! s:StopTimer() abort$/;"	f
s:Summary	plugged/ctrlsf.vim/autoload/ctrlsf/view.vim	/^func! s:Summary(procbar) abort$/;"	f
s:SwapOuterMultiPartDelimsForPlaceHolders	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:SwapOuterMultiPartDelimsForPlaceHolders(line) abort$/;"	f
s:SwapOuterPlaceHoldersForMultiPartDelims	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:SwapOuterPlaceHoldersForMultiPartDelims(line) abort$/;"	f
s:SystemError	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:SystemError(cmd, ...) abort$/;"	f
s:SystemList	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:SystemList(cmd) abort$/;"	f
s:TYPE_DICT	plugged/current-func-info.vim/autoload/cfi.vim	/^let s:TYPE_DICT = type({})$/;"	v
s:TYPE_NUMBER	plugged/current-func-info.vim/autoload/cfi.vim	/^let s:TYPE_NUMBER = type(0)$/;"	v
s:TYPE_STRING	plugged/current-func-info.vim/autoload/cfi.vim	/^let s:TYPE_STRING = type("")$/;"	v
s:TabEnterHandler	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:TabEnterHandler()$/;"	f
s:TabLeaveHandler	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:TabLeaveHandler()$/;"	f
s:TabSpace	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:TabSpace() abort$/;"	f
s:TabbedCol	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:TabbedCol(line, col) abort$/;"	f
s:TempDelete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:TempDelete(file) abort$/;"	f
s:TempDotMap	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:TempDotMap() abort$/;"	f
s:TempReadPost	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:TempReadPost(file) abort$/;"	f
s:TempReadPre	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:TempReadPre(file) abort$/;"	f
s:TempScript	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:TempScript(...) abort$/;"	f
s:TempState	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:TempState(...) abort$/;"	f
s:ToggleTabTreeVCS	plugged/nerdtree/nerdtree_plugin/vcs.vim	/^function! s:ToggleTabTreeVCS(name)$/;"	f
s:ToolItems	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ToolItems(state, from, to, offsets, text, ...) abort$/;"	f
s:ToolParse	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ToolParse(state, line) abort$/;"	f
s:ToolStream	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ToolStream(line1, line2, range, bang, mods, options, args, state) abort$/;"	f
s:ToolToFrom	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ToolToFrom(str) abort$/;"	f
s:TranslateRegex	plugged/ctrlsf.vim/autoload/ctrlsf/pat.vim	/^func! s:TranslateRegex(pattern) abort$/;"	f
s:Tree	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Tree(...) abort$/;"	f
s:Tree	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:Tree(path) abort$/;"	f
s:TreeChomp	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:TreeChomp(...) abort$/;"	f
s:TreeDirNode	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^let s:TreeDirNode = copy(g:NERDTreeFileNode)$/;"	v
s:TreeDirNode.AbsoluteTreeRoot	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.AbsoluteTreeRoot()$/;"	f
s:TreeDirNode.GetSelected	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.GetSelected()$/;"	f
s:TreeDirNode.New	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.New(path, nerdtree)$/;"	f
s:TreeDirNode._glob	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._glob(pattern, all)$/;"	f
s:TreeDirNode._initChildren	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._initChildren(silent)$/;"	f
s:TreeDirNode._openInNewTab	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._openInNewTab()$/;"	f
s:TreeDirNode.activate	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.activate(...)$/;"	f
s:TreeDirNode.addChild	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.addChild(treenode, inOrder)$/;"	f
s:TreeDirNode.close	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.close()$/;"	f
s:TreeDirNode.closeChildren	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.closeChildren()$/;"	f
s:TreeDirNode.createChild	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.createChild(path, inOrder)$/;"	f
s:TreeDirNode.displayString	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.displayString()$/;"	f
s:TreeDirNode.findNode	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.findNode(path)$/;"	f
s:TreeDirNode.getCascade	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getCascade()$/;"	f
s:TreeDirNode.getCascadeRoot	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getCascadeRoot()$/;"	f
s:TreeDirNode.getChild	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChild(path)$/;"	f
s:TreeDirNode.getChildByIndex	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildByIndex(indx, visible)$/;"	f
s:TreeDirNode.getChildCount	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildCount()$/;"	f
s:TreeDirNode.getChildIndex	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildIndex(path)$/;"	f
s:TreeDirNode.getDirChildren	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getDirChildren()$/;"	f
s:TreeDirNode.getVisibleChildCount	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getVisibleChildCount()$/;"	f
s:TreeDirNode.getVisibleChildren	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getVisibleChildren()$/;"	f
s:TreeDirNode.hasVisibleChildren	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.hasVisibleChildren()$/;"	f
s:TreeDirNode.isCascadable	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.isCascadable()$/;"	f
s:TreeDirNode.open	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.open(...)$/;"	f
s:TreeDirNode.openAlong	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openAlong(...)$/;"	f
s:TreeDirNode.openExplorer	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openExplorer()$/;"	f
s:TreeDirNode.openInNewTab	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openInNewTab(options)$/;"	f
s:TreeDirNode.openRecursively	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openRecursively()$/;"	f
s:TreeDirNode.refresh	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refresh()$/;"	f
s:TreeDirNode.refreshDirFlags	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refreshDirFlags()$/;"	f
s:TreeDirNode.refreshFlags	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refreshFlags()$/;"	f
s:TreeDirNode.removeChild	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.removeChild(treenode)$/;"	f
s:TreeDirNode.reveal	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.reveal(path, ...)$/;"	f
s:TreeDirNode.sortChildren	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.sortChildren()$/;"	f
s:TreeDirNode.toggleOpen	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.toggleOpen(...)$/;"	f
s:TreeDirNode.transplantChild	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.transplantChild(newNode)$/;"	f
s:TreeFileNode	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^let s:TreeFileNode = {}$/;"	v
s:TreeFileNode.GetRootForTab	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.GetRootForTab()$/;"	f
s:TreeFileNode.GetSelected	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.GetSelected()$/;"	f
s:TreeFileNode.New	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.New(path, nerdtree)$/;"	f
s:TreeFileNode._renderToString	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode._renderToString(depth, drawText)$/;"	f
s:TreeFileNode.activate	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.activate(...)$/;"	f
s:TreeFileNode.bookmark	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.bookmark(name)$/;"	f
s:TreeFileNode.cacheParent	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.cacheParent()$/;"	f
s:TreeFileNode.clearBookmarks	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.clearBookmarks()$/;"	f
s:TreeFileNode.copy	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.copy(dest)$/;"	f
s:TreeFileNode.delete	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.delete()$/;"	f
s:TreeFileNode.displayString	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.displayString()$/;"	f
s:TreeFileNode.equals	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.equals(treenode)$/;"	f
s:TreeFileNode.findNode	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findNode(path)$/;"	f
s:TreeFileNode.findSibling	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findSibling(direction)$/;"	f
s:TreeFileNode.getNerdtree	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.getNerdtree()$/;"	f
s:TreeFileNode.isRoot	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.isRoot()$/;"	f
s:TreeFileNode.isVisible	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.isVisible()$/;"	f
s:TreeFileNode.open	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.open(...)$/;"	f
s:TreeFileNode.openExplorer	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openExplorer()$/;"	f
s:TreeFileNode.openInNewTab	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openInNewTab(options)$/;"	f
s:TreeFileNode.openSplit	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openSplit()$/;"	f
s:TreeFileNode.openVSplit	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openVSplit()$/;"	f
s:TreeFileNode.putCursorHere	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.putCursorHere(isJump, recurseUpward)$/;"	f
s:TreeFileNode.refresh	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.refresh()$/;"	f
s:TreeFileNode.refreshFlags	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.refreshFlags()$/;"	f
s:TreeFileNode.rename	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.rename(newName)$/;"	f
s:TreeFileNode.renderToString	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.renderToString()$/;"	f
s:TreeInfo	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:TreeInfo(dir, commit) abort$/;"	f
s:TrimPhantomLine	plugged/ctrlsf.vim/autoload/ctrlsf/edit.vim	/^func! s:TrimPhantomLine(buffer, orig) abort$/;"	f
s:TrimTrailingWhitespace	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:TrimTrailingWhitespace(line) abort$/;"	f
s:UI	plugged/nerdtree/lib/nerdtree/ui.vim	/^let s:UI = {}$/;"	v
s:UI.IndentWid	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.IndentWid()$/;"	f
s:UI.MarkupReg	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.MarkupReg()$/;"	f
s:UI.New	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.New(nerdtree)$/;"	f
s:UI.UpDirLine	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.UpDirLine()$/;"	f
s:UI._dumpHelp	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._dumpHelp()$/;"	f
s:UI._indentLevelFor	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._indentLevelFor(line)$/;"	f
s:UI._renderBookmarks	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._renderBookmarks()$/;"	f
s:UI._stripMarkup	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._stripMarkup(line)$/;"	f
s:UI.centerView	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.centerView()$/;"	f
s:UI.getLineNum	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getLineNum(node)$/;"	f
s:UI.getPath	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getPath(ln)$/;"	f
s:UI.getRootLineNum	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getRootLineNum()$/;"	f
s:UI.getShowBookmarks	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowBookmarks()$/;"	f
s:UI.getShowFiles	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowFiles()$/;"	f
s:UI.getShowHelp	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowHelp()$/;"	f
s:UI.getShowHidden	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowHidden()$/;"	f
s:UI.isIgnoreFilterEnabled	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.isIgnoreFilterEnabled()$/;"	f
s:UI.isMinimal	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.isMinimal()$/;"	f
s:UI.render	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.render()$/;"	f
s:UI.renderViewSavingPosition	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.renderViewSavingPosition()$/;"	f
s:UI.restoreScreenState	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.restoreScreenState()$/;"	f
s:UI.saveScreenState	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.saveScreenState()$/;"	f
s:UI.setShowHidden	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.setShowHidden(val)$/;"	f
s:UI.toggleHelp	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleHelp()$/;"	f
s:UI.toggleIgnoreFilter	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleIgnoreFilter()$/;"	f
s:UI.toggleShowBookmarks	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleShowBookmarks()$/;"	f
s:UI.toggleShowFiles	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleShowFiles()$/;"	f
s:UI.toggleShowHidden	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleShowHidden()$/;"	f
s:UI.toggleZoom	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleZoom()$/;"	f
s:UltiSnippetTextObj	plugged/ultisnips/ftplugin/snippets.vim	/^fun! s:UltiSnippetTextObj(inner) abort$/;"	f
s:UnEsc	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:UnEsc(str, escChar) abort$/;"	f
s:UncommentLineNormal	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:UncommentLineNormal(line) abort$/;"	f
s:UncommentLines	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:UncommentLines(topLine, bottomLine) abort$/;"	f
s:UncommentLinesNormal	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:UncommentLinesNormal(topline, bottomline) abort$/;"	f
s:UncommentLinesSexy	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:UncommentLinesSexy(topline, bottomline) abort$/;"	f
s:UndoAllChanges	plugged/ctrlsf.vim/autoload/ctrlsf/win.vim	/^func! s:UndoAllChanges() abort$/;"	f
s:Uniq	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Uniq(list) abort$/;"	f
s:UntabbedCol	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^function! s:UntabbedCol(line, col) abort$/;"	f
s:UpdateIndex	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:UpdateIndex(dir, info) abort$/;"	f
s:UrlParse	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:UrlParse(url) abort$/;"	f
s:UsableWin	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:UsableWin(nr) abort$/;"	f
s:UserCommandCwd	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:UserCommandCwd(dir) abort$/;"	f
s:UserCommandList	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:UserCommandList(...) abort$/;"	f
s:VARIABLE	plugged/current-func-info.vim/ftplugin/javascript/cfi.vim	/^let s:VARIABLE = '\\%('$/;"	v
s:VARIABLE_NAME	plugged/current-func-info.vim/ftplugin/javascript/cfi.vim	/^let s:VARIABLE_NAME       = '\\([^[:blank:]*]\\+\\)'$/;"	v
s:VerifyConsistent	plugged/ctrlsf.vim/autoload/ctrlsf/edit.vim	/^func! s:VerifyConsistent(on_disk, on_mem) abort$/;"	f
s:VersionCheck	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:VersionCheck() abort$/;"	f
s:VimEnterHandler	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:VimEnterHandler()$/;"	f
s:VisualSelection	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^func! s:VisualSelection() abort$/;"	f
s:Vital	plugged/nvim-cmp/autoload/vital/cmp.vim	/^  let s:Vital._get_module = function('s:_get_builtin_module')$/;"	v
s:Vital	plugged/nvim-cmp/autoload/vital/cmp.vim	/^  let s:Vital._get_module = function('s:_get_module')$/;"	v
s:Vital	plugged/nvim-cmp/autoload/vital/cmp.vim	/^let s:Vital = {}$/;"	v
s:Vital	plugged/nvim-cmp/autoload/vital/cmp.vim	/^let s:Vital._import = function('s:_import')$/;"	v
s:Vital	plugged/nvim-cmp/autoload/vital/cmp.vim	/^let s:Vital.exists = function('s:exists')$/;"	v
s:Vital	plugged/nvim-cmp/autoload/vital/cmp.vim	/^let s:Vital.import = function('s:import')$/;"	v
s:Vital	plugged/nvim-cmp/autoload/vital/cmp.vim	/^let s:Vital.load = function('s:load')$/;"	v
s:Vital	plugged/nvim-cmp/autoload/vital/cmp.vim	/^let s:Vital.plugin_name = function('s:plugin_name')$/;"	v
s:Vital	plugged/nvim-cmp/autoload/vital/cmp.vim	/^let s:Vital.search = function('s:search')$/;"	v
s:Vital	plugged/nvim-cmp/autoload/vital/cmp.vim	/^let s:Vital.unload = function('s:unload')$/;"	v
s:Vital	plugged/nvim-cmp/autoload/vital/cmp.vim	/^let s:Vital.vital_files = function('s:vital_files')$/;"	v
s:WinEnterHandler	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:WinEnterHandler()$/;"	f
s:WinLeaveHandler	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:WinLeaveHandler()$/;"	f
s:WinShellEsc	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:WinShellEsc(arg) abort$/;"	f
s:WriteParagraph	plugged/ctrlsf.vim/autoload/ctrlsf/edit.vim	/^func! s:WriteParagraph(buffer, orig, modi) abort$/;"	f
s:X	plugged/vim-nerdtree-syntax-highlight/after/syntax/nerdtree.vim	/^fun! s:X(group, fg, bg, attr)$/;"	f
s:_SID	plugged/nvim-cmp/autoload/vital/_cmp/VS/LSP/Position.vim	/^function! s:_SID() abort$/;"	f
s:_SID	plugged/nvim-cmp/autoload/vital/_cmp/VS/LSP/Text.vim	/^function! s:_SID() abort$/;"	f
s:_SID	plugged/nvim-cmp/autoload/vital/_cmp/VS/LSP/TextEdit.vim	/^function! s:_SID() abort$/;"	f
s:_SID	plugged/nvim-cmp/autoload/vital/_cmp/VS/Vim/Buffer.vim	/^function! s:_SID() abort$/;"	f
s:_SID	plugged/nvim-cmp/autoload/vital/_cmp/VS/Vim/Option.vim	/^function! s:_SID() abort$/;"	f
s:_compare	plugged/nvim-cmp/autoload/vital/_cmp/VS/LSP/TextEdit.vim	/^function! s:_compare(text_edit1, text_edit2) abort$/;"	f
s:_dot_to_sharp	plugged/nvim-cmp/autoload/vital/cmp.vim	/^function! s:_dot_to_sharp(name) abort$/;"	f
s:_extract_files	plugged/nvim-cmp/autoload/vital/cmp.vim	/^function! s:_extract_files(pattern, files) abort$/;"	f
s:_file2module	plugged/nvim-cmp/autoload/vital/cmp.vim	/^function! s:_file2module(file) abort$/;"	f
s:_fix_cursor_position	plugged/nvim-cmp/autoload/vital/_cmp/VS/LSP/TextEdit.vim	/^function! s:_fix_cursor_position(position, text_edit, lines) abort$/;"	f
s:_fix_text_edits	plugged/nvim-cmp/autoload/vital/_cmp/VS/LSP/TextEdit.vim	/^function! s:_fix_text_edits(bufnr, text_edits) abort$/;"	f
s:_format_throwpoint	plugged/nvim-cmp/autoload/vital/cmp.vim	/^function! s:_format_throwpoint(throwpoint) abort$/;"	f
s:_get_buffer_line	plugged/nvim-cmp/autoload/vital/_cmp/VS/LSP/Position.vim	/^function! s:_get_buffer_line(expr, lnum) abort$/;"	f
s:_get_builtin_module	plugged/nvim-cmp/autoload/vital/cmp.vim	/^function! s:_get_builtin_module(name) abort$/;"	f
s:_get_func_info	plugged/nvim-cmp/autoload/vital/cmp.vim	/^function! s:_get_func_info(name) abort$/;"	f
s:_get_module	plugged/nvim-cmp/autoload/vital/cmp.vim	/^function! s:_get_module(name) abort dict$/;"	f
s:_global_vital_files	plugged/nvim-cmp/autoload/vital/cmp.vim	/^function! s:_global_vital_files() abort$/;"	f
s:_handleOldOptions	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^function! s:_handleOldOptions() abort$/;"	f
s:_import	plugged/nvim-cmp/autoload/vital/cmp.vim	/^function! s:_import(name) abort dict$/;"	f
s:_import_func_name	plugged/nvim-cmp/autoload/vital/cmp.vim	/^function! s:_import_func_name(plugin_name, module_name) abort$/;"	f
s:_module_path	plugged/nvim-cmp/autoload/vital/cmp.vim	/^function! s:_module_path(name) abort$/;"	f
s:_module_sid	plugged/nvim-cmp/autoload/vital/cmp.vim	/^function! s:_module_sid(name) abort$/;"	f
s:_module_sid_base_dir	plugged/nvim-cmp/autoload/vital/cmp.vim	/^function! s:_module_sid_base_dir() abort$/;"	f
s:_normalize	plugged/nvim-cmp/autoload/vital/_cmp/VS/LSP/TextEdit.vim	/^function! s:_normalize(bufnr, text_edits) abort$/;"	f
s:_plugin_name	plugged/nvim-cmp/autoload/vital/_cmp.vim	/^let s:_plugin_name = expand('<sfile>:t:r')$/;"	v
s:_range	plugged/nvim-cmp/autoload/vital/_cmp/VS/LSP/TextEdit.vim	/^function! s:_range(text_edits) abort$/;"	f
s:_self_vital_files	plugged/nvim-cmp/autoload/vital/cmp.vim	/^function! s:_self_vital_files() abort$/;"	f
s:_sfuncname	plugged/nvim-cmp/autoload/vital/cmp.vim	/^function! s:_sfuncname(sid, funcname) abort$/;"	f
s:_sid	plugged/nvim-cmp/autoload/vital/cmp.vim	/^function! s:_sid(path, filter_pattern) abort$/;"	f
s:_source	plugged/nvim-cmp/autoload/vital/cmp.vim	/^function! s:_source(path) abort$/;"	f
s:_substitute	plugged/nvim-cmp/autoload/vital/_cmp/VS/LSP/TextEdit.vim	/^function! s:_substitute(bufnr, text_edits, current_position) abort$/;"	f
s:_switch	plugged/nvim-cmp/autoload/vital/_cmp/VS/LSP/TextEdit.vim	/^function! s:_switch(path) abort$/;"	f
s:_unify_path	plugged/nvim-cmp/autoload/vital/cmp.vim	/^  function! s:_unify_path(path) abort$/;"	f
s:_unify_path_cache	plugged/nvim-cmp/autoload/vital/cmp.vim	/^  let s:_unify_path_cache = {}$/;"	v
s:_vital_depends	plugged/nvim-cmp/autoload/vital/_cmp/VS/LSP/TextEdit.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_loaded	plugged/nvim-cmp/autoload/vital/_cmp/VS/LSP/TextEdit.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:abs	plugged/vim-easy-align/plugin/easy_align.vim	/^function! s:abs(v)$/;"	f
s:activateAll	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateAll() abort$/;"	f
s:activateBookmark	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateBookmark(bm) abort$/;"	f
s:activateDirNode	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateDirNode(directoryNode, ...) abort$/;"	f
s:activateFileNode	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateFileNode(node) abort$/;"	f
s:add_db	plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! s:add_db(db_file) abort$/;"	f
s:add_methods	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:add_methods(namespace, method_names) abort$/;"	f
s:addbg	plugged/vim-monokai/colors/monokai.vim	/^let s:addbg       = { "gui": "#5f875f", "cterm": "65" }$/;"	v
s:added_db_files	plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^let s:added_db_files = {}$/;"	v
s:added_dbs	plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^let s:added_dbs = []$/;"	v
s:addfg	plugged/vim-monokai/colors/monokai.vim	/^let s:addfg       = { "gui": "#d7ffaf", "cterm": "193" }$/;"	v
s:addr_other	plugged/vim-fugitive/plugin/fugitive.vim	/^let s:addr_other = has('patch-8.1.560') || has('nvim-0.5.0') ? '-addr=other' : ''$/;"	v
s:addr_tabs	plugged/vim-fugitive/plugin/fugitive.vim	/^let s:addr_tabs  = has('patch-7.4.542') ? '-addr=tabs' : ''$/;"	v
s:addr_wins	plugged/vim-fugitive/plugin/fugitive.vim	/^let s:addr_wins  = has('patch-7.4.542') ? '-addr=windows' : ''$/;"	v
s:align	plugged/vim-easy-align/autoload/easy_align.vim	/^function! s:align(bang, live, visualmode, first_line, last_line, expr)$/;"	f
s:alternating_modes	plugged/vim-easy-align/autoload/easy_align.vim	/^function! s:alternating_modes(mode)$/;"	f
s:apply	plugged/nvim-cmp/autoload/vital/_cmp/VS/LSP/TextEdit.vim	/^function! s:apply(path, text_edits) abort$/;"	f
s:aqua	plugged/vim-monokai/colors/monokai.vim	/^let s:aqua        = { "gui": "#66d9ef", "cterm": "81" }$/;"	v
s:aqua	plugged/vim-nerdtree-syntax-highlight/after/syntax/nerdtree.vim	/^let s:aqua =  "3AFFDB"$/;"	v
s:assert	plugged/nerdtree-git-plugin/tests/test_all.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/vim-devicons/test/default_setting.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/vim-devicons/test/fileformat.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/vim-devicons/test/filetype.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:atoi	plugged/vim-easy-align/autoload/easy_align.vim	/^function! s:atoi(str)$/;"	f
s:b64_table	plugged/vim-oscyank/plugin/oscyank.vim	/^let s:b64_table = [$/;"	v
s:b64encode	plugged/vim-oscyank/plugin/oscyank.vim	/^function! s:b64encode(str, size)$/;"	f
s:backend_args_map	plugged/ctrlsf.vim/autoload/ctrlsf/backend.vim	/^let s:backend_args_map = {$/;"	v
s:backend_error_log_file	plugged/ctrlsf.vim/autoload/ctrlsf/backend.vim	/^let s:backend_error_log_file = tempname()$/;"	v
s:backspace	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! s:backspace(s)$/;"	f
s:bad_git_dir	plugged/vim-fugitive/plugin/fugitive.vim	/^let s:bad_git_dir = '\/$\\|^fugitive:'$/;"	v
s:bang_edits	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:bang_edits = {'split': 'Git', 'vsplit': 'vertical Git', 'tabedit': 'tab Git', 'pedit': 'Gi/;"	v
s:base1	plugged/neodark.vim/autoload/lightline/colorscheme/neodark.vim	/^let s:base1 = neodark#get_color('Normal',     'bg')$/;"	v
s:base1	plugged/neodark.vim/colors/neodark.vim	/^  let s:base1 = ['#1F2F38', 236]$/;"	v
s:base1	plugged/neodark.vim/colors/neodark.vim	/^  let s:base1 = [bases[0], 236]$/;"	v
s:base1	plugged/neodark.vim/colors/neodark.vim	/^  let s:base1[0] = '#303030'$/;"	v
s:base1	plugged/neodark.vim/colors/neodark.vim	/^  let s:base1[1] = 'none' " This doesn't work well for airline$/;"	v
s:base1	plugged/neodark.vim/colors/neodark.vim	/^  let s:base1[1] = 0$/;"	v
s:base2	plugged/neodark.vim/autoload/lightline/colorscheme/neodark.vim	/^let s:base2 = neodark#get_color('CursorLine', 'bg')$/;"	v
s:base2	plugged/neodark.vim/colors/neodark.vim	/^  let s:base2 = ['#263A45', 237]$/;"	v
s:base2	plugged/neodark.vim/colors/neodark.vim	/^  let s:base2 = [bases[1], 237]$/;"	v
s:base2	plugged/neodark.vim/colors/neodark.vim	/^  let s:base2[0] = '#3a3a3a'$/;"	v
s:base2	plugged/neodark.vim/colors/neodark.vim	/^  let s:base2[1] = 8$/;"	v
s:base3	plugged/neodark.vim/autoload/lightline/colorscheme/neodark.vim	/^let s:base3 = neodark#get_color('Visual',     'bg')$/;"	v
s:base3	plugged/neodark.vim/colors/neodark.vim	/^  let s:base3 = ['#475C69', 59]$/;"	v
s:base3	plugged/neodark.vim/colors/neodark.vim	/^  let s:base3 = [bases[2], 59]$/;"	v
s:base3	plugged/neodark.vim/colors/neodark.vim	/^  let s:base3[0] = '#5f5f5f'$/;"	v
s:base3	plugged/neodark.vim/colors/neodark.vim	/^  let s:base3[1] = 13$/;"	v
s:base4	plugged/neodark.vim/autoload/lightline/colorscheme/neodark.vim	/^let s:base4 = neodark#get_color('Comment',    'fg')$/;"	v
s:base4	plugged/neodark.vim/colors/neodark.vim	/^  let s:base4 = ['#658595', 245]$/;"	v
s:base4	plugged/neodark.vim/colors/neodark.vim	/^  let s:base4 = [bases[3], 245]$/;"	v
s:base4	plugged/neodark.vim/colors/neodark.vim	/^  let s:base4[0] = '#8a8a8a'$/;"	v
s:base4	plugged/neodark.vim/colors/neodark.vim	/^  let s:base4[1] = 7$/;"	v
s:base5	plugged/neodark.vim/autoload/lightline/colorscheme/neodark.vim	/^let s:base5 = neodark#get_color('Normal',     'fg')$/;"	v
s:base5	plugged/neodark.vim/colors/neodark.vim	/^  let s:base5 = ['#AABBC4', 250]$/;"	v
s:base5	plugged/neodark.vim/colors/neodark.vim	/^  let s:base5 = [bases[4], 250]$/;"	v
s:base5	plugged/neodark.vim/colors/neodark.vim	/^  let s:base5[0] = '#bcbcbc'$/;"	v
s:base5	plugged/neodark.vim/colors/neodark.vim	/^  let s:base5[1] = 15$/;"	v
s:base_finder	plugged/current-func-info.vim/autoload/cfi.vim	/^let s:base_finder = {}$/;"	v
s:base_finder.find	plugged/current-func-info.vim/autoload/cfi.vim	/^function! s:base_finder.find(ctx) "{{{$/;"	f
s:base_finder.get_begin_pos	plugged/current-func-info.vim/autoload/cfi.vim	/^function! s:base_finder.get_begin_pos() "{{{$/;"	f
s:base_finder.get_end_pos	plugged/current-func-info.vim/autoload/cfi.vim	/^function! s:base_finder.get_end_pos() "{{{$/;"	f
s:base_finder.in_function	plugged/current-func-info.vim/autoload/cfi.vim	/^function! s:base_finder.in_function(pos) "{{{$/;"	f
s:base_finder.pos_between	plugged/current-func-info.vim/autoload/cfi.vim	/^function! s:base_finder.pos_between(pos1, pos2, pos3) "{{{$/;"	f
s:beige	plugged/neodark.vim/colors/neodark.vim	/^  let s:beige[0]      = '#d7af87'$/;"	v
s:beige	plugged/neodark.vim/colors/neodark.vim	/^  let s:beige[1]      = 11$/;"	v
s:beige	plugged/neodark.vim/colors/neodark.vim	/^let s:beige      = ['#C7C18B', 180]$/;"	v
s:beige	plugged/vim-nerdtree-syntax-highlight/after/syntax/nerdtree.vim	/^let s:beige = "F5C06F"$/;"	v
s:black	plugged/vim-monokai/colors/monokai.vim	/^let s:black       = { "gui": "#272822", "cterm": "234" }$/;"	v
s:blobdirs	plugged/vim-fugitive/autoload/fugitive.vim	/^  let s:blobdirs = {}$/;"	v
s:blue	plugged/neodark.vim/autoload/lightline/colorscheme/neodark.vim	/^let s:blue   = neodark#get_color('Function',  'fg')$/;"	v
s:blue	plugged/neodark.vim/colors/neodark.vim	/^  let s:blue[0]       = '#5fafd7'$/;"	v
s:blue	plugged/neodark.vim/colors/neodark.vim	/^  let s:blue[1]       = 4$/;"	v
s:blue	plugged/neodark.vim/colors/neodark.vim	/^let s:blue       = ['#639EE4', 74]$/;"	v
s:blue	plugged/vim-nerdtree-syntax-highlight/after/syntax/nerdtree.vim	/^let s:blue = "689FB6"$/;"	v
s:br_blue	plugged/vim-monokai/colors/monokai.vim	/^let s:br_blue     = { "gui": "#7AA6DA" }$/;"	v
s:br_cyan	plugged/vim-monokai/colors/monokai.vim	/^let s:br_cyan     = { "gui": "#54CED6" }$/;"	v
s:br_green	plugged/vim-monokai/colors/monokai.vim	/^let s:br_green    = { "gui": "#9EC400" }$/;"	v
s:br_purple	plugged/vim-monokai/colors/monokai.vim	/^let s:br_purple   = { "gui": "#B77EE0" }$/;"	v
s:br_white	plugged/vim-monokai/colors/monokai.vim	/^let s:br_white    = { "gui": "#FFFFFF" }$/;"	v
s:br_yellow	plugged/vim-monokai/colors/monokai.vim	/^let s:br_yellow   = { "gui": "#E7C547" }$/;"	v
s:bridge_id	plugged/nvim-cmp/autoload/cmp.vim	/^let s:bridge_id = 0$/;"	v
s:brown	plugged/neodark.vim/colors/neodark.vim	/^  let s:brown[0]      = '#af8787'$/;"	v
s:brown	plugged/neodark.vim/colors/neodark.vim	/^  let s:brown[1]      = 14$/;"	v
s:brown	plugged/neodark.vim/colors/neodark.vim	/^let s:brown      = ['#AE8785', 138]$/;"	v
s:brown	plugged/vim-nerdtree-syntax-highlight/after/syntax/nerdtree.vim	/^let s:brown = "905532"$/;"	v
s:bsearch_nearest_index	plugged/current-func-info.vim/autoload/cfi.vim	/^function! s:bsearch_nearest_index(list, ctx) "{{{$/;"	f
s:buffer	plugged/ctrlsf.vim/autoload/ctrlsf/async.vim	/^let s:buffer = []$/;"	v
s:buffer	plugged/ctrlsf.vim/autoload/ctrlsf/db.vim	/^let s:buffer = []$/;"	v
s:buffer_prototype	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:buffer_prototype = {}$/;"	v
s:buffer_repo	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:buffer_repo() dict abort$/;"	f
s:buffer_type	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:buffer_type(...) dict abort$/;"	f
s:buildGitStatusCommand	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:buildGitStatusCommand(workdir) abort$/;"	f
s:buildGitWorkdirCommand	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:buildGitWorkdirCommand(root) abort$/;"	f
s:build_dict	plugged/vim-easy-align/autoload/easy_align.vim	/^function! s:build_dict(delimiters, ch, regexp, opts)$/;"	f
s:build_mode_sequence	plugged/vim-easy-align/autoload/easy_align.vim	/^function! s:build_mode_sequence(expr, recur)$/;"	f
s:cache_project_root	plugged/vim-gutentags/autoload/gutentags.vim	/^function! s:cache_project_root(path) abort$/;"	f
s:cache_sid	plugged/nvim-cmp/autoload/vital/cmp.vim	/^let s:cache_sid = {}$/;"	v
s:calculate_screen_lines	plugged/vim-smoothie/autoload/smoothie.vim	/^function s:calculate_screen_lines(from, to)$/;"	f
s:callback	plugged/nvim-cmp/autoload/cmp.vim	/^function! s:callback(id) abort$/;"	f
s:caller_win	plugged/ctrlsf.vim/autoload/ctrlsf/win.vim	/^let s:caller_win = {$/;"	v
s:can_diffoff	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:can_diffoff(buf) abort$/;"	f
s:cancelled	plugged/ctrlsf.vim/autoload/ctrlsf/async.vim	/^let s:cancelled = 0$/;"	v
s:ceil2	plugged/vim-easy-align/autoload/easy_align.vim	/^function! s:ceil2(v)$/;"	f
s:cfile	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:cfile() abort$/;"	f
s:chCwd	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:chCwd(node) abort$/;"	f
s:chRoot	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:chRoot(node) abort$/;"	f
s:changebg	plugged/vim-monokai/colors/monokai.vim	/^let s:changebg    = { "gui": "#5f5f87", "cterm": "60" }$/;"	v
s:changefg	plugged/vim-monokai/colors/monokai.vim	/^let s:changefg    = { "gui": "#d7d7ff", "cterm": "189" }$/;"	v
s:characters	plugged/vim-nerdtree-syntax-highlight/after/syntax/nerdtree.vim	/^let s:characters = '[ a-zA-Z0-9_\\#\\-\\+\\*\\%\\!\\~\\(\\)\\{\\}\\&\\.\\$\\@]'$/;"	v
s:chars_double_lashes	plugged/vim-nerdtree-syntax-highlight/after/syntax/nerdtree.vim	/^let s:chars_double_lashes = substitute(s:characters, '\\\\', '\\\\\\\\', 'g')$/;"	v
s:checkwith	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^  function! s:checkwith(left, right, line, col) abort$/;"	f
s:closeChildren	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:closeChildren(node) abort$/;"	f
s:closeCurrentDir	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:closeCurrentDir(node) abort$/;"	f
s:closeTreeWindow	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:closeTreeWindow() abort$/;"	f
s:colour	plugged/vim-nerdtree-syntax-highlight/after/syntax/nerdtree.vim	/^fun! s:colour(r, g, b)$/;"	f
s:column	plugged/vim-devicons/autoload/vimfiler/columns/devicons.vim	/^let s:column = {$/;"	v
s:column.define_syntax	plugged/vim-devicons/autoload/vimfiler/columns/devicons.vim	/^function! s:column.define_syntax(context) abort "{{{$/;"	f
s:column.get	plugged/vim-devicons/autoload/vimfiler/columns/devicons.vim	/^function! s:column.get(file, context) abort$/;"	f
s:column.length	plugged/vim-devicons/autoload/vimfiler/columns/devicons.vim	/^function! s:column.length(files, context) abort$/;"	f
s:commondirs	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:commondirs = {}$/;"	v
s:compact_options	plugged/vim-easy-align/autoload/easy_align.vim	/^function! s:compact_options(opts)$/;"	f
s:compare_pos_to_range	plugged/current-func-info.vim/autoload/cfi.vim	/^function! s:compare_pos_to_range(pos, range) "{{{$/;"	f
s:compensate_for_pum	plugged/ultisnips/autoload/UltiSnips.vim	/^function! s:compensate_for_pum() abort$/;"	f
s:compute_velocity	plugged/vim-smoothie/autoload/smoothie.vim	/^function s:compute_velocity()$/;"	f
s:config	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:config = {}$/;"	v
s:config_Get	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:config_Get(name, ...) dict abort$/;"	f
s:config_GetAll	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:config_GetAll(name) dict abort$/;"	f
s:config_GetRegexp	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:config_GetRegexp(pattern) dict abort$/;"	f
s:config_prototype	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:config_prototype = {}$/;"	v
s:consumed	plugged/ctrlsf.vim/autoload/ctrlsf/async.vim	/^let s:consumed = 0$/;"	v
s:count_to_scroll	plugged/vim-smoothie/autoload/smoothie.vim	/^function s:count_to_scroll()$/;"	f
s:cpath	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:cpath(path, ...) abort$/;"	f
s:cpo_save	plugged/vim-easy-align/autoload/easy_align.vim	/^let s:cpo_save = &cpo$/;"	v
s:create	plugged/nvim-cmp/autoload/vital/_cmp/VS/Vim/Buffer.vim	/^function! s:create(...) abort$/;"	f
s:ctrl_f_invoked	plugged/vim-smoothie/autoload/smoothie.vim	/^let s:ctrl_f_invoked = v:false$/;"	v
s:cur_file	plugged/ctrlsf.vim/autoload/ctrlsf/view.vim	/^let s:cur_file = ''$/;"	v
s:current_file	plugged/ctrlsf.vim/autoload/ctrlsf/db.vim	/^let s:current_file = ''$/;"	v
s:current_mode	plugged/ctrlsf.vim/autoload/ctrlsf.vim	/^let s:current_mode = ''$/;"	v
s:current_query	plugged/ctrlsf.vim/autoload/ctrlsf.vim	/^let s:current_query = ''$/;"	v
s:cursor	plugged/nvim-cmp/autoload/vital/_cmp/VS/LSP/Position.vim	/^function! s:cursor() abort$/;"	f
s:cursor_movement	plugged/vim-smoothie/autoload/smoothie.vim	/^let s:cursor_movement = v:false$/;"	v
s:customOpenBookmark	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:customOpenBookmark(node) abort$/;"	f
s:customOpenDir	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:customOpenDir(node) abort$/;"	f
s:customOpenFile	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:customOpenFile(node) abort$/;"	f
s:cyan	plugged/vim-monokai/colors/monokai.vim	/^let s:cyan        = { "gui": "#A1EFE4" }$/;"	v
s:dark	plugged/vim-one/colors/one.vim	/^    let s:dark = 1$/;"	v
s:dark	plugged/vim-one/colors/one.vim	/^  let s:dark = 0$/;"	v
s:darkBlue	plugged/vim-nerdtree-syntax-highlight/after/syntax/nerdtree.vim	/^let s:darkBlue = "44788E"$/;"	v
s:darkOrange	plugged/vim-nerdtree-syntax-highlight/after/syntax/nerdtree.vim	/^let s:darkOrange = "F16529"$/;"	v
s:darkblack	plugged/vim-monokai/colors/monokai.vim	/^let s:darkblack   = { "gui": "#211F1C", "cterm": "233" }$/;"	v
s:darkgrey	plugged/vim-monokai/colors/monokai.vim	/^let s:darkgrey    = { "gui": "#64645e", "cterm": "239" }$/;"	v
s:darkred	plugged/vim-monokai/colors/monokai.vim	/^let s:darkred     = { "gui": "#5f0000", "cterm": "52" }$/;"	v
s:debug	plugged/nerdtree-git-plugin/autoload/gitstatus/log.vim	/^let s:debug   = 0 | :lockvar s:debug$/;"	v
s:default	plugged/ctrlsf.vim/autoload/ctrlsf/opt.vim	/^let s:default = {$/;"	v
s:default_context	plugged/ctrlsf.vim/autoload/ctrlsf/opt.vim	/^let s:default_context = { 'conf': '', 'ctx': {} }$/;"	v
s:default_mapping	plugged/ctrlsf.vim/plugin/ctrlsf.vim	/^let s:default_mapping = {$/;"	v
s:default_vals	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^let s:default_vals = {$/;"	v
s:define	plugged/nvim-cmp/autoload/vital/_cmp/VS/Vim/Option.vim	/^function! s:define(map) abort$/;"	f
s:delbg	plugged/vim-monokai/colors/monokai.vim	/^let s:delbg       = { "gui": "#f75f5f", "cterm": "124" }$/;"	v
s:delete	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! s:delete(s)$/;"	f
s:deleteBookmark	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:deleteBookmark(bookmark) abort$/;"	f
s:delfg	plugged/vim-monokai/colors/monokai.vim	/^let s:delfg       = { "gui": "#ff8b8b", "cterm": "210" }$/;"	v
s:delimiterMap	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^let s:delimiterMap = {$/;"	v
s:deprecated	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:deprecated(oldv, newv) abort$/;"	f
s:did_check_exe	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let s:did_check_exe = 0$/;"	v
s:diff_restore	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:diff_restore() abort$/;"	f
s:diff_window_count	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:diff_window_count() abort$/;"	f
s:diffoff	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:diffoff() abort$/;"	f
s:diffoff_all	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:diffoff_all(dir) abort$/;"	f
s:diffthis	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:diffthis() abort$/;"	f
s:dirArrows	plugged/nerdtree/syntax/nerdtree.vim	/^    let s:dirArrows = escape(g:NERDTreeDirArrowCollapsible, '~]\\-').escape(g:NERDTreeDirArrowEx/;"	v
s:dir_for_worktree	plugged/vim-fugitive/plugin/fugitive.vim	/^let s:dir_for_worktree = {}$/;"	v
s:disableLiveUpdate	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:disableLiveUpdate() abort$/;"	f
s:disable_colors	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:disable_colors = []$/;"	v
s:displayHelp	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:displayHelp() abort$/;"	f
s:do	plugged/nvim-cmp/autoload/vital/_cmp/VS/Vim/Buffer.vim	/^function! s:do(bufnr, func) abort$/;"	f
s:do_align	plugged/vim-easy-align/autoload/easy_align.vim	/^function! s:do_align(todo, modes, all_tokens, all_delims, fl, ll, fc, lc, nth, recur, dict)$/;"	f
s:do_vertical_cursor_movement	plugged/vim-smoothie/autoload/smoothie.vim	/^function s:do_vertical_cursor_movement(movement, properties)$/;"	f
s:done	plugged/ctrlsf.vim/autoload/ctrlsf/async.vim	/^let s:done = -1$/;"	v
s:drawn_lines	plugged/ctrlsf.vim/autoload/ctrlsf/win.vim	/^let s:drawn_lines = 0$/;"	v
s:easy_align_delimiters_default	plugged/vim-easy-align/autoload/easy_align.vim	/^let s:easy_align_delimiters_default = {$/;"	v
s:easy_align_op	plugged/vim-easy-align/plugin/easy_align.vim	/^function! s:easy_align_op(type, ...)$/;"	f
s:easy_align_repeat	plugged/vim-easy-align/plugin/easy_align.vim	/^function! s:easy_align_repeat()$/;"	f
s:echomsg	plugged/current-func-info.vim/autoload/cfi.vim	/^function! s:echomsg(hl, msg) "{{{$/;"	f
s:echon	plugged/vim-easy-align/autoload/easy_align.vim	/^function! s:echon(l, n, r, d, o, warn)$/;"	f
s:echon_	plugged/vim-easy-align/autoload/easy_align.vim	/^function! s:echon_(tokens)$/;"	f
s:edit_jobs	plugged/vim-fugitive/autoload/fugitive.vim	/^  let s:edit_jobs = {}$/;"	v
s:enableLiveUpdate	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:enableLiveUpdate() abort$/;"	f
s:enabled_extensions	plugged/vim-nerdtree-syntax-highlight/after/syntax/nerdtree.vim	/^let s:enabled_extensions = [$/;"	v
s:ensure	plugged/nvim-cmp/autoload/vital/_cmp/VS/Vim/Buffer.vim	/^function! s:ensure(expr) abort$/;"	f
s:error	plugged/current-func-info.vim/autoload/cfi.vim	/^function! s:error(msg) "{{{$/;"	f
s:error	plugged/nerdtree-git-plugin/autoload/gitstatus/log.vim	/^let s:error   = 3 | :lockvar s:error$/;"	v
s:exec_paths	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:exec_paths = {}$/;"	v
s:executable	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:executable(binary) abort$/;"	f
s:executables	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:executables = {}$/;"	v
s:execute_preserving_scroll	plugged/vim-smoothie/autoload/smoothie.vim	/^function s:execute_preserving_scroll(command)$/;"	f
s:exists	plugged/nvim-cmp/autoload/vital/cmp.vim	/^function! s:exists(name) abort dict$/;"	f
s:exit	plugged/vim-easy-align/autoload/easy_align.vim	/^function! s:exit(msg)$/;"	f
s:expand	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:expand = '\\%(\\(' . s:var . '\\)\\(' . s:flag . '*\\)\\(:S\\)\\=\\)'$/;"	v
s:file_commit_pattern	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:file_commit_pattern = s:file_pattern . '\\|^\\%(\\l\\{3,\\} \\)\\=[0-9a-f]\\{4,\\} '$/;"	v
s:file_extension_colors	plugged/vim-nerdtree-syntax-highlight/after/syntax/nerdtree.vim	/^let s:file_extension_colors = {$/;"	v
s:file_node_exact_matches	plugged/vim-nerdtree-syntax-highlight/after/syntax/nerdtree.vim	/^let s:file_node_exact_matches = {$/;"	v
s:file_node_pattern_matches	plugged/vim-nerdtree-syntax-highlight/after/syntax/nerdtree.vim	/^let s:file_node_pattern_matches = {$/;"	v
s:file_pattern	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:file_pattern = '^[A-Z?] .\\|^diff --'$/;"	v
s:fileset	plugged/ctrlsf.vim/autoload/ctrlsf/db.vim	/^let s:fileset = []$/;"	v
s:filters.filter	plugged/vim-devicons/autoload/devicons/plugins/unite.vim	/^  function! s:filters.filter(candidates, context) abort$/;"	f
s:findAndRevealPath	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:findAndRevealPath(pathStr) abort$/;"	f
s:findHunk	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:findHunk(node, direction) abort$/;"	f
s:finder	plugged/current-func-info.vim/autoload/cfi.vim	/^let s:finder = {}$/;"	v
s:finder	plugged/current-func-info.vim/ftplugin/c/cfi.vim	/^let s:finder = cfi#create_finder('c')$/;"	v
s:finder	plugged/current-func-info.vim/ftplugin/elixir/cfi.vim	/^let s:finder = cfi#create_finder('elixir')$/;"	v
s:finder	plugged/current-func-info.vim/ftplugin/go/cfi.vim	/^let s:finder = cfi#create_finder('go')$/;"	v
s:finder	plugged/current-func-info.vim/ftplugin/javascript/cfi.vim	/^let s:finder = cfi#create_finder('javascript')$/;"	v
s:finder	plugged/current-func-info.vim/ftplugin/perl/cfi.vim	/^let s:finder = cfi#create_finder('perl')$/;"	v
s:finder	plugged/current-func-info.vim/ftplugin/php/cfi.vim	/^let s:finder = cfi#create_finder('php')$/;"	v
s:finder	plugged/current-func-info.vim/ftplugin/python/cfi.vim	/^let s:finder = cfi#create_finder('python')$/;"	v
s:finder	plugged/current-func-info.vim/ftplugin/ruby/cfi.vim	/^let s:finder = cfi#create_finder('ruby')$/;"	v
s:finder	plugged/current-func-info.vim/ftplugin/sh/cfi.vim	/^let s:finder = cfi#create_finder('sh')$/;"	v
s:finder	plugged/current-func-info.vim/ftplugin/sql/cfi.vim	/^let s:finder = cfi#create_finder('sql')$/;"	v
s:finder	plugged/current-func-info.vim/ftplugin/vim/cfi.vim	/^let s:finder = cfi#create_finder('vim')$/;"	v
s:finder.find	plugged/current-func-info.vim/ftplugin/elixir/cfi.vim	/^function! s:finder.find(ctx) "{{{$/;"	f
s:finder.find	plugged/current-func-info.vim/ftplugin/go/cfi.vim	/^function! s:finder.find(ctx) "{{{$/;"	f
s:finder.find	plugged/current-func-info.vim/ftplugin/python/cfi.vim	/^function! s:finder.find(ctx) "{{{$/;"	f
s:finder.find	plugged/current-func-info.vim/ftplugin/ruby/cfi.vim	/^function! s:finder.find(ctx) "{{{$/;"	f
s:finder.find	plugged/current-func-info.vim/ftplugin/sh/cfi.vim	/^function! s:finder.find(ctx) "{{{$/;"	f
s:finder.find	plugged/current-func-info.vim/ftplugin/sql/cfi.vim	/^function! s:finder.find(ctx) "{{{$/;"	f
s:finder.find_begin	plugged/current-func-info.vim/ftplugin/c/cfi.vim	/^function! s:finder.find_begin() "{{{$/;"	f
s:finder.find_begin	plugged/current-func-info.vim/ftplugin/javascript/cfi.vim	/^function! s:finder.find_begin() "{{{$/;"	f
s:finder.find_begin	plugged/current-func-info.vim/ftplugin/perl/cfi.vim	/^function! s:finder.find_begin() "{{{$/;"	f
s:finder.find_begin	plugged/current-func-info.vim/ftplugin/php/cfi.vim	/^function! s:finder.find_begin() "{{{$/;"	f
s:finder.find_begin	plugged/current-func-info.vim/ftplugin/vim/cfi.vim	/^function! s:finder.find_begin() "{{{$/;"	f
s:finder.find_end	plugged/current-func-info.vim/ftplugin/c/cfi.vim	/^function! s:finder.find_end() "{{{$/;"	f
s:finder.find_end	plugged/current-func-info.vim/ftplugin/javascript/cfi.vim	/^function! s:finder.find_end() "{{{$/;"	f
s:finder.find_end	plugged/current-func-info.vim/ftplugin/perl/cfi.vim	/^function! s:finder.find_end() "{{{$/;"	f
s:finder.find_end	plugged/current-func-info.vim/ftplugin/php/cfi.vim	/^function! s:finder.find_end() "{{{$/;"	f
s:finder.find_end	plugged/current-func-info.vim/ftplugin/vim/cfi.vim	/^function! s:finder.find_end() "{{{$/;"	f
s:finder.get_func_name	plugged/current-func-info.vim/ftplugin/c/cfi.vim	/^function! s:finder.get_func_name() "{{{$/;"	f
s:finder.get_func_name	plugged/current-func-info.vim/ftplugin/javascript/cfi.vim	/^function! s:finder.get_func_name() "{{{$/;"	f
s:finder.get_func_name	plugged/current-func-info.vim/ftplugin/perl/cfi.vim	/^function! s:finder.get_func_name() "{{{$/;"	f
s:finder.get_func_name	plugged/current-func-info.vim/ftplugin/php/cfi.vim	/^function! s:finder.get_func_name() "{{{$/;"	f
s:finder.get_func_name	plugged/current-func-info.vim/ftplugin/vim/cfi.vim	/^function! s:finder.get_func_name() "{{{$/;"	f
s:flag	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:flag = '\\%(:[p8~.htre]\\|:g\\=s\\(.\\).\\{-\\}\\1.\\{-\\}\\1\\)'$/;"	v
s:floor2	plugged/vim-easy-align/autoload/easy_align.vim	/^function! s:floor2(v)$/;"	f
s:fnameescape	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:fnameescape(file) abort$/;"	f
s:fnameescape	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:fnameescape = " \\t\\n*?[{`$\\\\%#'\\"|!<"$/;"	v
s:function	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:function(name) abort$/;"	f
s:fuzzy_lu	plugged/vim-easy-align/autoload/easy_align.vim	/^function! s:fuzzy_lu(key)$/;"	f
s:generate_base_colors	plugged/neodark.vim/colors/neodark.vim	/^function! s:generate_base_colors(base1)$/;"	f
s:generate_wildignore_options	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^function! s:generate_wildignore_options() abort$/;"	f
s:generic_easy_align_op	plugged/vim-easy-align/plugin/easy_align.vim	/^function! s:generic_easy_align_op(type, vmode, live)$/;"	f
s:getDistro	plugged/vim-devicons/plugin/webdevicons.vim	/^function s:getDistro()$/;"	f
s:getGitWorkdir	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:getGitWorkdir(ntRoot) abort$/;"	f
s:getIndicator	plugged/nerdtree-git-plugin/after/syntax/nerdtree.vim	/^function! s:getIndicator(status) abort$/;"	f
s:getStatusKey	plugged/nerdtree-git-plugin/autoload/gitstatus/util.vim	/^function! s:getStatusKey(x, y) abort$/;"	f
s:get_OSC52	plugged/vim-oscyank/plugin/oscyank.vim	/^function! s:get_OSC52(str)$/;"	f
s:get_OSC52_DCS	plugged/vim-oscyank/plugin/oscyank.vim	/^function! s:get_OSC52_DCS(str)$/;"	f
s:get_OSC52_kitty	plugged/vim-oscyank/plugin/oscyank.vim	/^function! s:get_OSC52_kitty(str)$/;"	f
s:get_OSC52_tmux	plugged/vim-oscyank/plugin/oscyank.vim	/^function! s:get_OSC52_tmux(str)$/;"	f
s:get_cache	plugged/current-func-info.vim/autoload/cfi.vim	/^function! s:get_cache(ctx, else) "{{{$/;"	f
s:get_ctags_executable	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^function! s:get_ctags_executable(proj_dir) abort$/;"	f
s:get_current_version	plugged/current-func-info.vim/autoload/cfi.vim	/^    function! s:get_current_version() "{{{$/;"	f
s:get_git_status_output	plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^function! s:get_git_status_output(workdir) abort$/;"	f
s:get_git_version	plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^function! s:get_git_version() abort$/;"	f
s:get_line_count	plugged/nvim-cmp/autoload/vital/_cmp/VS/Vim/Buffer.vim	/^  function! s:get_line_count(bufnr) abort$/;"	f
s:getline	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! s:getline()$/;"	f
s:git_versions	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:git_versions = {}$/;"	v
s:globsubs	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:globsubs = {$/;"	v
s:green	plugged/neodark.vim/autoload/lightline/colorscheme/neodark.vim	/^let s:green  = neodark#get_color('Statement', 'fg')$/;"	v
s:green	plugged/neodark.vim/colors/neodark.vim	/^  let s:green[0]      = '#87af87'$/;"	v
s:green	plugged/neodark.vim/colors/neodark.vim	/^  let s:green[1]      = 2$/;"	v
s:green	plugged/neodark.vim/colors/neodark.vim	/^let s:green      = ['#84B97C', 108]$/;"	v
s:green	plugged/vim-monokai/colors/monokai.vim	/^let s:green       = { "gui": "#A6E22D", "cterm": "148" }$/;"	v
s:green	plugged/vim-nerdtree-syntax-highlight/after/syntax/nerdtree.vim	/^let s:green = "8FAA54"$/;"	v
s:grep_combine_flags	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:grep_combine_flags = '[aiIrhHEGPFnlLzocpWq]\\{-\\}'$/;"	v
s:grey	plugged/vim-monokai/colors/monokai.vim	/^let s:grey        = { "gui": "#8F908A", "cterm": "243" }$/;"	v
s:grey_colour	plugged/vim-nerdtree-syntax-highlight/after/syntax/nerdtree.vim	/^fun! s:grey_colour(n)$/;"	f
s:grey_level	plugged/vim-nerdtree-syntax-highlight/after/syntax/nerdtree.vim	/^fun! s:grey_level(n)$/;"	f
s:grey_number	plugged/vim-nerdtree-syntax-highlight/after/syntax/nerdtree.vim	/^fun! s:grey_number(x)$/;"	f
s:gsub	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:gsub(str,pat,rep) abort$/;"	f
s:h	plugged/vim-monokai/colors/monokai.vim	/^function! s:h(group, style)$/;"	f
s:handleLeftClick	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:handleLeftClick() abort$/;"	f
s:handleMiddleMouse	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:handleMiddleMouse() abort$/;"	f
s:hardRefreshNerdTree	plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:hardRefreshNerdTree()$/;"	f
s:hasPrefix	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:hasPrefix(text, prefix) abort$/;"	f
s:has_attr	plugged/nvim-treesitter/plugin/nvim-treesitter.vim	/^function s:has_attr(attr, mode)$/;"	f
s:hash_colors	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:hash_colors = {}$/;"	v
s:head_cache	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:head_cache = {}$/;"	v
s:hex2RGB	plugged/neodark.vim/colors/neodark.vim	/^function! s:hex2RGB(hex)$/;"	f
s:hi	plugged/neodark.vim/colors/neodark.vim	/^function! s:hi(group, fg, bg, attr)$/;"	f
s:highlightFromGroup	plugged/nerdtree-git-plugin/after/syntax/nerdtree.vim	/^function! s:highlightFromGroup(group) abort$/;"	f
s:highlighted_as	plugged/vim-easy-align/autoload/easy_align.vim	/^function! s:highlighted_as(line, col, groups)$/;"	f
s:hue_1	plugged/vim-one/colors/one.vim	/^    let s:hue_1  = ['#0184bc', '31'] " cyan$/;"	v
s:hue_1	plugged/vim-one/colors/one.vim	/^    let s:hue_1  = ['#56b6c2', '73'] " cyan$/;"	v
s:hue_2	plugged/vim-one/colors/one.vim	/^    let s:hue_2  = ['#4078f2', '33'] " blue$/;"	v
s:hue_2	plugged/vim-one/colors/one.vim	/^    let s:hue_2  = ['#61afef', '75'] " blue$/;"	v
s:hue_3	plugged/vim-one/colors/one.vim	/^    let s:hue_3  = ['#a626a4', '127'] " purple$/;"	v
s:hue_3	plugged/vim-one/colors/one.vim	/^    let s:hue_3  = ['#c678dd', '176'] " purple$/;"	v
s:hue_4	plugged/vim-one/colors/one.vim	/^    let s:hue_4  = ['#50a14f', '71'] " green$/;"	v
s:hue_4	plugged/vim-one/colors/one.vim	/^    let s:hue_4  = ['#98c379', '114'] " green$/;"	v
s:hue_5	plugged/vim-one/colors/one.vim	/^    let s:hue_5   = ['#e06c75', '168'] " red 1$/;"	v
s:hue_5	plugged/vim-one/colors/one.vim	/^    let s:hue_5   = ['#e45649', '166'] " red 1$/;"	v
s:hue_5_2	plugged/vim-one/colors/one.vim	/^    let s:hue_5_2 = ['#be5046', '130'] " red 2$/;"	v
s:hue_5_2	plugged/vim-one/colors/one.vim	/^    let s:hue_5_2 = ['#ca1243', '160'] " red 2$/;"	v
s:hue_6	plugged/vim-one/colors/one.vim	/^    let s:hue_6   = ['#986801', '94'] " orange 1$/;"	v
s:hue_6	plugged/vim-one/colors/one.vim	/^    let s:hue_6   = ['#d19a66', '173'] " orange 1$/;"	v
s:hue_6_2	plugged/vim-one/colors/one.vim	/^    let s:hue_6_2 = ['#c18401', '136'] " orange 2$/;"	v
s:hue_6_2	plugged/vim-one/colors/one.vim	/^    let s:hue_6_2 = ['#e5c07b', '180'] " orange 2$/;"	v
s:ignored_syntax	plugged/vim-easy-align/autoload/easy_align.vim	/^function! s:ignored_syntax()$/;"	f
s:import	plugged/nvim-cmp/autoload/vital/cmp.vim	/^function! s:import(name, ...) abort dict$/;"	f
s:indexes	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:indexes = {}$/;"	v
s:indicatorMap	plugged/nerdtree-git-plugin/autoload/gitstatus.vim	/^    let s:indicatorMap = {$/;"	v
s:info	plugged/nerdtree-git-plugin/autoload/gitstatus/log.vim	/^let s:info    = 1 | :lockvar s:info$/;"	v
s:initCustomOpenArgs	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:initCustomOpenArgs() abort$/;"	f
s:initVariable	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:initVariable(var, value) abort$/;"	f
s:initialize	plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:initialize()$/;"	f
s:input	plugged/vim-easy-align/autoload/easy_align.vim	/^function! s:input(str, default, vis)$/;"	f
s:inputPrompt	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:inputPrompt(action)$/;"	f
s:interactive	plugged/vim-easy-align/autoload/easy_align.vim	/^function! s:interactive(range, modes, n, d, opts, rules, vis, bvis)$/;"	f
s:interactive_modes	plugged/vim-easy-align/autoload/easy_align.vim	/^function! s:interactive_modes(bang)$/;"	f
s:isDarwin	plugged/vim-devicons/plugin/webdevicons.vim	/^function s:isDarwin()$/;"	f
s:isEOF	plugged/nerdtree-git-plugin/autoload/gitstatus/job.vim	/^function! s:isEOF(data) abort$/;"	f
s:is_vital_vim	plugged/nvim-cmp/autoload/vital/cmp.vim	/^let s:is_vital_vim = s:plugin_name is# 'vital'$/;"	v
s:is_win	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^let s:is_win = gitstatus#isWin()$/;"	v
s:italic	plugged/vim-one/colors/one.vim	/^  let s:italic = 'italic'$/;"	v
s:italic	plugged/vim-one/colors/one.vim	/^let s:italic = ''$/;"	v
s:item_pattern	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:item_pattern = s:file_commit_pattern . '\\|^@@'$/;"	v
s:job_id	plugged/ctrlsf.vim/autoload/ctrlsf/async.vim	/^let s:job_id = -1$/;"	v
s:juliaPurple	plugged/vim-nerdtree-syntax-highlight/after/syntax/nerdtree.vim	/^let s:juliaPurple = "9558B2"$/;"	v
s:jumpToChild	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToChild(node, last) abort$/;"	f
s:jumpToFirstChild	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToFirstChild(node) abort$/;"	f
s:jumpToLastChild	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToLastChild(node) abort$/;"	f
s:jumpToNextHunk	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:jumpToNextHunk(node)$/;"	f
s:jumpToNextSibling	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToNextSibling(node) abort$/;"	f
s:jumpToParent	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToParent(node) abort$/;"	f
s:jumpToPrevHunk	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:jumpToPrevHunk(node)$/;"	f
s:jumpToPrevSibling	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToPrevSibling(node) abort$/;"	f
s:jumpToRoot	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToRoot() abort$/;"	f
s:jumpToSibling	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToSibling(node, forward) abort$/;"	f
s:keyMaps	plugged/nerdtree/lib/nerdtree/key_map.vim	/^let s:keyMaps = {}$/;"	v
s:known_files	plugged/vim-gutentags/autoload/gutentags.vim	/^let s:known_files = []$/;"	v
s:known_options	plugged/vim-easy-align/autoload/easy_align.vim	/^let s:known_options = {$/;"	v
s:known_projects	plugged/vim-gutentags/autoload/gutentags.vim	/^let s:known_projects = {}$/;"	v
s:last_command	plugged/vim-easy-align/plugin/easy_align.vim	/^let s:last_command = 'EasyAlign'$/;"	v
s:last_time	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:last_time = reltime()$/;"	v
s:last_times	plugged/vim-fugitive/autoload/fugitive.vim	/^  let s:last_times = {}$/;"	v
s:last_wildignores	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let s:last_wildignores = ''$/;"	v
s:left	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! s:left(s)$/;"	f
s:lenSpaceStr	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^let s:lenSpaceStr = strlen(s:spaceStr)$/;"	v
s:lightGreen	plugged/vim-nerdtree-syntax-highlight/after/syntax/nerdtree.vim	/^let s:lightGreen = "31B53E"$/;"	v
s:lightPurple	plugged/vim-nerdtree-syntax-highlight/after/syntax/nerdtree.vim	/^let s:lightPurple = "834F79"$/;"	v
s:light_blue	plugged/neodark.vim/colors/neodark.vim	/^  let s:light_blue[0] = '#5fd7d7'$/;"	v
s:light_blue	plugged/neodark.vim/colors/neodark.vim	/^  let s:light_blue[1] = 12$/;"	v
s:light_blue	plugged/neodark.vim/colors/neodark.vim	/^let s:light_blue = ['#72C7D1', 80]$/;"	v
s:lightblack	plugged/vim-monokai/colors/monokai.vim	/^let s:lightblack  = { "gui": "#2D2E27", "cterm": "235" }$/;"	v
s:lightblack2	plugged/vim-monokai/colors/monokai.vim	/^let s:lightblack2 = { "gui": "#383a3e", "cterm": "236" }$/;"	v
s:lightblack3	plugged/vim-monokai/colors/monokai.vim	/^let s:lightblack3 = { "gui": "#3f4145", "cterm": "237" }$/;"	v
s:lightgrey	plugged/vim-monokai/colors/monokai.vim	/^let s:lightgrey   = { "gui": "#575b61", "cterm": "237" }$/;"	v
s:linechars	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:linechars(pattern) abort$/;"	f
s:listener	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^let s:listener = gitstatus#listener#New(g:)$/;"	v
s:live_easy_align_op	plugged/vim-easy-align/plugin/easy_align.vim	/^function! s:live_easy_align_op(type, ...)$/;"	f
s:load	plugged/nvim-cmp/autoload/vital/_cmp/VS/Vim/Buffer.vim	/^  function! s:load(expr) abort$/;"	f
s:load	plugged/nvim-cmp/autoload/vital/cmp.vim	/^function! s:load(...) abort dict$/;"	f
s:loaded	plugged/nvim-cmp/autoload/vital/cmp.vim	/^let s:loaded = {}$/;"	v
s:loaded_vim_devicons	plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^function! s:loaded_vim_devicons() abort$/;"	f
s:loaded_vim_nerdtree_syntax_highlight	plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^function! s:loaded_vim_nerdtree_syntax_highlight() abort$/;"	f
s:loaded_vim_nerdtree_tabs	plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^function! s:loaded_vim_nerdtree_tabs() abort$/;"	f
s:log_diff_context	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:log_diff_context = '{"filename": fugitive#Find(v:val . from, a:dir), "lnum": get(offsets, /;"	v
s:logger	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^let s:logger = gitstatus#log#NewLogger(g:NERDTreeGitStatusLogLevel)$/;"	v
s:lsp_to_vim	plugged/nvim-cmp/autoload/vital/_cmp/VS/LSP/Position.vim	/^function! s:lsp_to_vim(expr, position) abort$/;"	f
s:ltrim	plugged/vim-easy-align/autoload/easy_align.vim	/^function! s:ltrim(str)$/;"	f
s:manual_update_tags	plugged/vim-gutentags/autoload/gutentags.vim	/^function! s:manual_update_tags(bang) abort$/;"	f
s:matchbegin	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! s:matchbegin(text, close)$/;"	f
s:matchend	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! s:matchend(text, open)$/;"	f
s:matchlist	plugged/ctrlsf.vim/autoload/ctrlsf/db.vim	/^let s:matchlist = []$/;"	v
s:max_lnum	plugged/ctrlsf.vim/autoload/ctrlsf/db.vim	/^let s:max_lnum = 0$/;"	v
s:merge_heads	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:merge_heads = ['MERGE_HEAD', 'REBASE_HEAD', 'CHERRY_PICK_HEAD', 'REVERT_HEAD']$/;"	v
s:migrateVariable	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:migrateVariable(oldv, newv) abort$/;"	f
s:mode_labels	plugged/vim-easy-align/autoload/easy_align.vim	/^let s:mode_labels = { 'l': '', 'r': '[R]', 'c': '[C]' }$/;"	v
s:mono_1	plugged/vim-one/colors/one.vim	/^    let s:mono_1 = ['#494b53', '23']$/;"	v
s:mono_1	plugged/vim-one/colors/one.vim	/^    let s:mono_1 = ['#abb2bf', '145']$/;"	v
s:mono_2	plugged/vim-one/colors/one.vim	/^    let s:mono_2 = ['#696c77', '60']$/;"	v
s:mono_2	plugged/vim-one/colors/one.vim	/^    let s:mono_2 = ['#828997', '102']$/;"	v
s:mono_3	plugged/vim-one/colors/one.vim	/^    let s:mono_3 = ['#5c6370', '59']$/;"	v
s:mono_3	plugged/vim-one/colors/one.vim	/^    let s:mono_3 = ['#a0a1a7', '145']$/;"	v
s:mono_4	plugged/vim-one/colors/one.vim	/^    let s:mono_4 = ['#4b5263', '59']$/;"	v
s:mono_4	plugged/vim-one/colors/one.vim	/^    let s:mono_4 = ['#c2c2c3', '250']$/;"	v
s:movement_tick	plugged/vim-smoothie/autoload/smoothie.vim	/^function s:movement_tick(_)$/;"	f
s:need_migrate_vals	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^let s:need_migrate_vals = {$/;"	v
s:new	plugged/nvim-cmp/autoload/vital/cmp.vim	/^function! s:new(plugin_name) abort$/;"	f
s:newJob	plugged/nerdtree-git-plugin/autoload/gitstatus/job.vim	/^function! s:newJob(name, opts) abort$/;"	f
s:next_file	plugged/ctrlsf.vim/autoload/ctrlsf/db.vim	/^let s:next_file = ''$/;"	v
s:normalize_eol	plugged/nvim-cmp/autoload/vital/_cmp/VS/LSP/Text.vim	/^function! s:normalize_eol(text) abort$/;"	f
s:normalize_options	plugged/vim-easy-align/autoload/easy_align.vim	/^function! s:normalize_options(opts)$/;"	f
s:nowait	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:nowait = v:version >= 704 ? '<nowait>' : ''$/;"	v
s:nowait	plugged/vim-fugitive/plugin/fugitive.vim	/^let s:nowait = v:version >= 704 ? '<nowait>' : ''$/;"	v
s:nvim	plugged/nerdtree-git-plugin/autoload/gitstatus/job.vim	/^let s:nvim = has('nvim-0.2') || (has('nvim') && exists('*jobwait'))$/;"	v
s:nvim_job_exit_wrapper	plugged/vim-gutentags/autoload/gutentags.vim	/^    function! s:nvim_job_exit_wrapper(real_cb, job, exit_code, event_type) abort$/;"	f
s:nvim_job_out_wrapper	plugged/vim-gutentags/autoload/gutentags.vim	/^    function! s:nvim_job_out_wrapper(real_cb, job, lines, event_type) abort$/;"	f
s:old_cpo	plugged/nerdtree/plugin/NERD_tree.vim	/^let s:old_cpo = &cpoptions$/;"	v
s:onCursorHold	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:onCursorHold(fname)$/;"	f
s:onFileUpdate	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:onFileUpdate(fname)$/;"	f
s:onGitStatusFailedCB	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:onGitStatusFailedCB(job) abort$/;"	f
s:onGitStatusSuccessCB	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:onGitStatusSuccessCB(job) abort$/;"	f
s:onGitWorkdirFailedCB	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:onGitWorkdirFailedCB(job) abort$/;"	f
s:onGitWorkdirSuccessCB	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:onGitWorkdirSuccessCB(job) abort$/;"	f
s:onNERDTreeDirChanged	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:onNERDTreeDirChanged(path) abort$/;"	f
s:onNERDTreeInit	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:onNERDTreeInit(path) abort$/;"	f
s:openExplorer	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openExplorer(node) abort$/;"	f
s:openHSplit	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openHSplit(target) abort$/;"	f
s:openHSplitBookmark	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openHSplitBookmark(bm) abort$/;"	f
s:openInNewTab	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openInNewTab(target) abort$/;"	f
s:openInNewTabSilent	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openInNewTabSilent(target) abort$/;"	f
s:openNodeRecursively	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openNodeRecursively(node) abort$/;"	f
s:openVSplit	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openVSplit(target) abort$/;"	f
s:openVSplitBookmark	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openVSplitBookmark(bm) abort$/;"	f
s:option_list	plugged/ctrlsf.vim/autoload/ctrlsf/opt.vim	/^let s:option_list = {$/;"	v
s:option_values	plugged/vim-easy-align/autoload/easy_align.vim	/^let s:option_values = {$/;"	v
s:options	plugged/ctrlsf.vim/autoload/ctrlsf/opt.vim	/^let s:options = {}$/;"	v
s:orange	plugged/neodark.vim/autoload/lightline/colorscheme/neodark.vim	/^let s:orange = neodark#get_color('String',    'fg')$/;"	v
s:orange	plugged/neodark.vim/colors/neodark.vim	/^  let s:orange[0]     = '#d7875f'$/;"	v
s:orange	plugged/neodark.vim/colors/neodark.vim	/^  let s:orange[1]     = 6$/;"	v
s:orange	plugged/neodark.vim/colors/neodark.vim	/^let s:orange     = ['#E18254', 173]$/;"	v
s:orange	plugged/vim-monokai/colors/monokai.vim	/^let s:orange      = { "gui": "#FD9720", "cterm": "208" }$/;"	v
s:orange	plugged/vim-nerdtree-syntax-highlight/after/syntax/nerdtree.vim	/^let s:orange = "D4843E"$/;"	v
s:osc52_table	plugged/vim-oscyank/plugin/oscyank.vim	/^let s:osc52_table = {$/;"	v
s:p	plugged/neodark.vim/autoload/lightline/colorscheme/neodark.vim	/^let s:p = {$/;"	v
s:p	plugged/neodark.vim/autoload/lightline/colorscheme/neodark.vim	/^let s:p.inactive.left = [$/;"	v
s:p	plugged/neodark.vim/autoload/lightline/colorscheme/neodark.vim	/^let s:p.inactive.middle = [$/;"	v
s:p	plugged/neodark.vim/autoload/lightline/colorscheme/neodark.vim	/^let s:p.inactive.right = [$/;"	v
s:p	plugged/neodark.vim/autoload/lightline/colorscheme/neodark.vim	/^let s:p.insert.left = [$/;"	v
s:p	plugged/neodark.vim/autoload/lightline/colorscheme/neodark.vim	/^let s:p.normal.error = [$/;"	v
s:p	plugged/neodark.vim/autoload/lightline/colorscheme/neodark.vim	/^let s:p.normal.left = [$/;"	v
s:p	plugged/neodark.vim/autoload/lightline/colorscheme/neodark.vim	/^let s:p.normal.middle = [$/;"	v
s:p	plugged/neodark.vim/autoload/lightline/colorscheme/neodark.vim	/^let s:p.normal.right = [$/;"	v
s:p	plugged/neodark.vim/autoload/lightline/colorscheme/neodark.vim	/^let s:p.normal.warning = [$/;"	v
s:p	plugged/neodark.vim/autoload/lightline/colorscheme/neodark.vim	/^let s:p.replace.left = [$/;"	v
s:p	plugged/neodark.vim/autoload/lightline/colorscheme/neodark.vim	/^let s:p.tabline.left = [$/;"	v
s:p	plugged/neodark.vim/autoload/lightline/colorscheme/neodark.vim	/^let s:p.tabline.middle = [$/;"	v
s:p	plugged/neodark.vim/autoload/lightline/colorscheme/neodark.vim	/^let s:p.tabline.right = [$/;"	v
s:p	plugged/neodark.vim/autoload/lightline/colorscheme/neodark.vim	/^let s:p.tabline.tabsel = [$/;"	v
s:p	plugged/neodark.vim/autoload/lightline/colorscheme/neodark.vim	/^let s:p.visual.left = [$/;"	v
s:parse_args	plugged/vim-easy-align/autoload/easy_align.vim	/^function! s:parse_args(args)$/;"	f
s:parse_filter	plugged/vim-easy-align/autoload/easy_align.vim	/^function! s:parse_filter(f)$/;"	f
s:parse_nth	plugged/vim-easy-align/autoload/easy_align.vim	/^function! s:parse_nth(n)$/;"	f
s:parse_shorthand_opts	plugged/vim-easy-align/autoload/easy_align.vim	/^function! s:parse_shorthand_opts(expr)$/;"	f
s:path2str	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:path2str(path) abort$/;"	f
s:path_subcommands	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:path_subcommands = {}$/;"	v
s:pink	plugged/neodark.vim/colors/neodark.vim	/^  let s:pink[0]       = '#d7afaf'$/;"	v
s:pink	plugged/neodark.vim/colors/neodark.vim	/^  let s:pink[1]       = 9$/;"	v
s:pink	plugged/neodark.vim/colors/neodark.vim	/^let s:pink       = ['#E69CA0', 181]$/;"	v
s:pink	plugged/vim-monokai/colors/monokai.vim	/^let s:pink        = { "gui": "#F92772", "cterm": "197" }$/;"	v
s:pink	plugged/vim-nerdtree-syntax-highlight/after/syntax/nerdtree.vim	/^let s:pink = "CB6F6F"$/;"	v
s:plug_dir	plugged/nvim-cmp/utils/vimrc.vim	/^let s:plug_dir = expand('\/tmp\/plugged\/vim-plug')$/;"	v
s:plugin_home	plugged/vim-devicons/plugin/webdevicons.vim	/^let s:plugin_home = expand('<sfile>:p:h:h')$/;"	v
s:plugin_name	plugged/nvim-cmp/autoload/vital/cmp.vim	/^function! s:plugin_name() abort dict$/;"	f
s:plugin_name	plugged/nvim-cmp/autoload/vital/cmp.vim	/^let s:plugin_name = expand('<sfile>:t:r')$/;"	v
s:pmenu	plugged/vim-one/colors/one.vim	/^    let s:pmenu        = ['#333841', '16']$/;"	v
s:pmenu	plugged/vim-one/colors/one.vim	/^    let s:pmenu        = ['#dfdfdf', '253']$/;"	v
s:pos_is_less_than	plugged/current-func-info.vim/autoload/cfi.vim	/^function! s:pos_is_less_than(pos1, pos2) "{{{$/;"	f
s:pre_ln	plugged/ctrlsf.vim/autoload/ctrlsf/db.vim	/^let s:pre_ln = -1$/;"	v
s:prepare_env	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:prepare_env = {$/;"	v
s:prettify	plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^function! s:prettify(obj) abort$/;"	f
s:prettifyDict	plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^function! s:prettifyDict(obj, prefix, level, indent) abort$/;"	f
s:prettifyList	plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^function! s:prettifyList(obj, prefix, level, indent) abort$/;"	f
s:previewBookmark	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewBookmark(bookmark) abort$/;"	f
s:previewNodeCurrent	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeCurrent(node) abort$/;"	f
s:previewNodeHSplit	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeHSplit(node) abort$/;"	f
s:previewNodeHSplitBookmark	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeHSplitBookmark(bookmark) abort$/;"	f
s:previewNodeVSplit	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeVSplit(node) abort$/;"	f
s:previewNodeVSplitBookmark	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeVSplitBookmark(bookmark) abort$/;"	f
s:procbar_dots	plugged/ctrlsf.vim/autoload/ctrlsf/view.vim	/^let s:procbar_dots = 0$/;"	v
s:process	plugged/vim-easy-align/autoload/easy_align.vim	/^function! s:process(range, mode, n, ch, opts, regexp, rules, bvis)$/;"	f
s:process_options_file	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^function! s:process_options_file(proj_dir, path) abort$/;"	f
s:project_root	plugged/nvim-cmp/autoload/vital/cmp.vim	/^let s:project_root = expand('<sfile>:h:h:h')$/;"	v
s:promptToDelBuffer	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:promptToDelBuffer(bufnum, msg)$/;"	f
s:pseudo	plugged/nvim-cmp/autoload/vital/_cmp/VS/Vim/Buffer.vim	/^function! s:pseudo(filepath) abort$/;"	f
s:purered	plugged/vim-monokai/colors/monokai.vim	/^let s:purered     = { "gui": "#ff0000", "cterm": "52" }$/;"	v
s:purple	plugged/neodark.vim/colors/neodark.vim	/^  let s:purple[0]     = '#af87d7'$/;"	v
s:purple	plugged/neodark.vim/colors/neodark.vim	/^  let s:purple[1]     = 5$/;"	v
s:purple	plugged/neodark.vim/colors/neodark.vim	/^let s:purple     = ['#B888E2', 140]$/;"	v
s:purple	plugged/vim-monokai/colors/monokai.vim	/^let s:purple      = { "gui": "#ae81ff", "cterm": "141" }$/;"	v
s:purple	plugged/vim-nerdtree-syntax-highlight/after/syntax/nerdtree.vim	/^let s:purple = "834F79"$/;"	v
s:raw_echo	plugged/vim-oscyank/plugin/oscyank.vim	/^function! s:raw_echo(str)$/;"	f
s:rebase_abbrevs	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:rebase_abbrevs = {$/;"	v
s:red	plugged/neodark.vim/autoload/lightline/colorscheme/neodark.vim	/^let s:red    = neodark#get_color('ErrorMsg',  'fg')$/;"	v
s:red	plugged/neodark.vim/colors/neodark.vim	/^  let s:red[0]        = '#d75f87'$/;"	v
s:red	plugged/neodark.vim/colors/neodark.vim	/^  let s:red[1]        = 1$/;"	v
s:red	plugged/neodark.vim/colors/neodark.vim	/^let s:red        = ['#DC657D', 168]$/;"	v
s:red	plugged/vim-monokai/colors/monokai.vim	/^let s:red         = { "gui": "#e73c50", "cterm": "196" }$/;"	v
s:red	plugged/vim-nerdtree-syntax-highlight/after/syntax/nerdtree.vim	/^let s:red = "AE403F"$/;"	v
s:ref_header	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:ref_header = '\\%(Merge\\|Rebase\\|Upstream\\|Pull\\|Push\\)'$/;"	v
s:refreshCurrent	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:refreshCurrent(node) abort$/;"	f
s:refreshGitStatus	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:refreshGitStatus(name, workdir) abort$/;"	f
s:refreshRoot	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:refreshRoot() abort$/;"	f
s:remember_visual	plugged/vim-easy-align/plugin/easy_align.vim	/^function! s:remember_visual(mode)$/;"	f
s:remote_headers	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:remote_headers = {}$/;"	v
s:renameBuffer	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:renameBuffer(bufNum, newNodeName, isDirectory)$/;"	f
s:rendered_match	plugged/ctrlsf.vim/autoload/ctrlsf/view.vim	/^let s:rendered_match = 0$/;"	v
s:rendered_par	plugged/ctrlsf.vim/autoload/ctrlsf/view.vim	/^let s:rendered_par = 0$/;"	v
s:repeat_in_visual	plugged/vim-easy-align/plugin/easy_align.vim	/^function! s:repeat_in_visual()$/;"	f
s:repeat_visual	plugged/vim-easy-align/plugin/easy_align.vim	/^function! s:repeat_visual()$/;"	f
s:repo_bare	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_bare() dict abort$/;"	f
s:repo_config	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_config(name) dict abort$/;"	f
s:repo_dir	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_dir(...) dict abort$/;"	f
s:repo_find	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_find(object) dict abort$/;"	f
s:repo_git_chomp	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_git_chomp(...) dict abort$/;"	f
s:repo_git_chomp_in_tree	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_git_chomp_in_tree(...) dict abort$/;"	f
s:repo_git_command	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_git_command(...) dict abort$/;"	f
s:repo_head	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_head(...) dict abort$/;"	f
s:repo_prototype	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:repo_prototype = {}$/;"	v
s:repo_rev_parse	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_rev_parse(rev) dict abort$/;"	f
s:repo_superglob	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_superglob(base) dict abort$/;"	f
s:repo_translate	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_translate(rev) dict abort$/;"	f
s:repo_tree	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_tree(...) dict abort$/;"	f
s:repo_user	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_user() dict abort$/;"	f
s:repos	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:repos = {}$/;"	v
s:resultset	plugged/ctrlsf.vim/autoload/ctrlsf/db.vim	/^let s:resultset = []$/;"	v
s:resume_queue	plugged/vim-fugitive/autoload/fugitive.vim	/^  let s:resume_queue = []$/;"	v
s:reuseWin	plugged/nerdtree/autoload/nerdtree.vim	/^function! s:reuseWin(dir) abort$/;"	f
s:rgb	plugged/vim-nerdtree-syntax-highlight/after/syntax/nerdtree.vim	/^fun! s:rgb(rgb)$/;"	f
s:rgb_colour	plugged/vim-nerdtree-syntax-highlight/after/syntax/nerdtree.vim	/^fun! s:rgb_colour(x, y, z)$/;"	f
s:rgb_level	plugged/vim-nerdtree-syntax-highlight/after/syntax/nerdtree.vim	/^fun! s:rgb_level(n)$/;"	f
s:rgb_number	plugged/vim-nerdtree-syntax-highlight/after/syntax/nerdtree.vim	/^fun! s:rgb_number(x)$/;"	f
s:right	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! s:right(s)$/;"	f
s:ring_bell	plugged/vim-smoothie/autoload/smoothie.vim	/^function s:ring_bell()$/;"	f
s:rootNERDTreePath	plugged/nerdtree/autoload/nerdtree.vim	/^let s:rootNERDTreePath = resolve(expand('<sfile>:p:h:h'))$/;"	v
s:rtrim	plugged/vim-easy-align/autoload/easy_align.vim	/^function! s:rtrim(str)$/;"	f
s:run_jobs	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:run_jobs = (exists('*job_start') || exists('*jobstart')) && exists('*bufwinid')$/;"	v
s:runner_exe	plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^let s:runner_exe = gutentags#get_plat_file('update_scopedb')$/;"	v
s:runner_exe	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let s:runner_exe = '"' . gutentags#get_plat_file('update_tags') . '"'$/;"	v
s:salmon	plugged/vim-nerdtree-syntax-highlight/after/syntax/nerdtree.vim	/^let s:salmon = "EE6E73"$/;"	v
s:samples	plugged/ctrlsf.vim/autoload/ctrlsf/profile.vim	/^let s:samples = []$/;"	v
s:save_cache	plugged/current-func-info.vim/autoload/cfi.vim	/^function! s:save_cache(ctx, val) "{{{$/;"	f
s:save_cache_list	plugged/current-func-info.vim/autoload/cfi.vim	/^function! s:save_cache_list(ctx, val) "{{{$/;"	f
s:save_cpo	plugged/current-func-info.vim/autoload/cfi.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/current-func-info.vim/ftplugin/c/cfi.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/current-func-info.vim/ftplugin/elixir/cfi.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/current-func-info.vim/ftplugin/go/cfi.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/current-func-info.vim/ftplugin/javascript/cfi.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/current-func-info.vim/ftplugin/perl/cfi.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/current-func-info.vim/ftplugin/php/cfi.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/current-func-info.vim/ftplugin/python/cfi.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/current-func-info.vim/ftplugin/ruby/cfi.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/current-func-info.vim/ftplugin/sh/cfi.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/current-func-info.vim/ftplugin/sql/cfi.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/current-func-info.vim/ftplugin/vim/cfi.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/current-func-info.vim/plugin/cfi.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/neodark.vim/plugin/neodark.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/ultisnips/autoload/neocomplete/sources/ultisnips.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/ultisnips/ftplugin/snippets.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-devicons/autoload/vimfiler/columns/devicons.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-devicons/plugin/webdevicons.vim	/^let s:save_cpo = &cpo$/;"	v
s:search	plugged/nvim-cmp/autoload/vital/cmp.vim	/^function! s:search(pattern) abort dict$/;"	f
s:searchfor	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^  function! s:searchfor(str, line, col, direction, ...) abort$/;"	f
s:section_commit_pattern	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:section_commit_pattern = s:section_pattern . '\\|^commit '$/;"	v
s:section_pattern	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:section_pattern = '^[A-Z][a-z][^:]*$'$/;"	v
s:set	plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:set(var, default) abort$/;"	f
s:setCursorHold	plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:setCursorHold()$/;"	f
s:setDictionaries	plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:setDictionaries()$/;"	f
s:setHightlighting	plugged/nerdtree-git-plugin/after/syntax/nerdtree.vim	/^function! s:setHightlighting() abort$/;"	f
s:setSyntax	plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:setSyntax()$/;"	f
s:set_match_words	plugged/ultisnips/ftplugin/snippets.vim	/^  function! s:set_match_words() abort$/;"	f
s:set_match_words	plugged/ultisnips/ftplugin/snippets.vim	/^  let s:set_match_words = 1$/;"	v
s:set_repeat	plugged/vim-easy-align/plugin/easy_align.vim	/^function! s:set_repeat()$/;"	f
s:setbufline	plugged/ctrlsf.vim/autoload/ctrlsf/buf.vim	/^func! s:setbufline(buf_name, lnum, content) abort$/;"	f
s:setupNERDTreeKeyMappings	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:setupNERDTreeKeyMappings()$/;"	f
s:setupNERDTreeListeners	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:setupNERDTreeListeners(listener) abort$/;"	f
s:shellesc	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:shellesc(arg) abort$/;"	f
s:shift	plugged/vim-easy-align/autoload/easy_align.vim	/^function! s:shift(modes, cycle)$/;"	f
s:shift_opts	plugged/vim-easy-align/autoload/easy_align.vim	/^function! s:shift_opts(opts, key, vals)$/;"	f
s:shorthand	plugged/vim-easy-align/autoload/easy_align.vim	/^let s:shorthand = {$/;"	v
s:shorthand_regex	plugged/vim-easy-align/autoload/easy_align.vim	/^let s:shorthand_regex =$/;"	v
s:shouldFt	plugged/nvim-treesitter/ftdetect/query.vim	/^function! s:shouldFt(path)$/;"	f
s:showMenu	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:showMenu(node) abort$/;"	f
s:show_defaults	plugged/current-func-info.vim/ftplugin/javascript/cfi.vim	/^let s:show_defaults = {$/;"	v
s:sid2sfuncs	plugged/nvim-cmp/autoload/vital/cmp.vim	/^function! s:sid2sfuncs(sid) abort$/;"	f
s:softRefreshNerdTree	plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:softRefreshNerdTree()$/;"	f
s:sortByLength	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! s:sortByLength(i1, i2)$/;"	f
s:source	plugged/ultisnips/autoload/neocomplete/sources/ultisnips.vim	/^let s:source = {$/;"	v
s:source.gather_candidates	plugged/ultisnips/autoload/neocomplete/sources/ultisnips.vim	/^function! s:source.gather_candidates(context) abort$/;"	f
s:sources	plugged/nvim-cmp/autoload/cmp.vim	/^let s:sources = {}$/;"	v
s:spaceStr	plugged/nerdcommenter/autoload/nerdcommenter.vim	/^let s:spaceStr = ' '$/;"	v
s:special_grey	plugged/vim-one/colors/one.vim	/^    let s:special_grey = ['#3b4048', '16']$/;"	v
s:special_grey	plugged/vim-one/colors/one.vim	/^    let s:special_grey = ['#d3d3d3', '251']$/;"	v
s:split_by_eol	plugged/nvim-cmp/autoload/vital/_cmp/VS/LSP/Text.vim	/^function! s:split_by_eol(text) abort$/;"	f
s:split_line	plugged/vim-easy-align/autoload/easy_align.vim	/^function! s:split_line(line, nth, modes, cycle, fc, lc, pattern, stick_to_left, ignore_unmatched/;"	f
s:start_moving	plugged/vim-smoothie/autoload/smoothie.vim	/^function s:start_moving()$/;"	f
s:start_render	plugged/ctrlsf.vim/autoload/ctrlsf/async.vim	/^let s:start_render = 0$/;"	v
s:start_ts	plugged/ctrlsf.vim/autoload/ctrlsf/async.vim	/^let s:start_ts = -1$/;"	v
s:step_down	plugged/vim-smoothie/autoload/smoothie.vim	/^function s:step_down()$/;"	f
s:step_many	plugged/vim-smoothie/autoload/smoothie.vim	/^function s:step_many(lines)$/;"	f
s:step_up	plugged/vim-smoothie/autoload/smoothie.vim	/^function s:step_up()$/;"	f
s:stop_moving	plugged/vim-smoothie/autoload/smoothie.vim	/^function s:stop_moving()$/;"	f
s:str2bytes	plugged/vim-oscyank/plugin/oscyank.vim	/^function! s:str2bytes(str)$/;"	f
s:strip	plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:strip(input)$/;"	f
s:strwidth	plugged/vim-easy-align/autoload/easy_align.vim	/^  function! s:strwidth(str)$/;"	f
s:sub	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:sub(str,pat,rep) abort$/;"	f
s:subcommands_before_2_5	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:subcommands_before_2_5 = [$/;"	v
s:subline_position	plugged/vim-smoothie/autoload/smoothie.vim	/^let s:subline_position = 0.0$/;"	v
s:suite	plugged/nerdtree-git-plugin/tests/test_all.vim	/^let s:suite = themis#suite('Test for nerdtree-git-plugin')$/;"	v
s:suite	plugged/vim-devicons/test/default_setting.vim	/^let s:suite = themis#suite('Webdevicons-default-value')$/;"	v
s:suite	plugged/vim-devicons/test/fileformat.vim	/^let s:suite = themis#suite('WebDevIconsGetFileFormatSymbol')$/;"	v
s:suite	plugged/vim-devicons/test/filetype.vim	/^let s:suite = themis#suite('WebDevIconsGetFileTypeSymbol')$/;"	v
s:suite.BuildGitStatusCommand	plugged/nerdtree-git-plugin/tests/test_all.vim	/^function! s:suite.BuildGitStatusCommand() abort$/;"	f
s:suite.BuildGitWorkdirCommand	plugged/nerdtree-git-plugin/tests/test_all.vim	/^function! s:suite.BuildGitWorkdirCommand() abort$/;"	f
s:suite.ConfigOptions	plugged/vim-devicons/test/default_setting.vim	/^function! s:suite.ConfigOptions()$/;"	f
s:suite.CustomIndicator	plugged/nerdtree-git-plugin/tests/test_all.vim	/^function! s:suite.CustomIndicator() abort$/;"	f
s:suite.DefaultIcon	plugged/vim-devicons/test/fileformat.vim	/^function! s:suite.DefaultIcon()$/;"	f
s:suite.ExtensionConfig	plugged/vim-devicons/test/default_setting.vim	/^function! s:suite.ExtensionConfig()$/;"	f
s:suite.Initializing	plugged/nerdtree-git-plugin/tests/test_all.vim	/^function! s:suite.Initializing() abort$/;"	f
s:suite.Logger	plugged/nerdtree-git-plugin/tests/test_all.vim	/^function! s:suite.Logger() abort$/;"	f
s:suite.MacIcon	plugged/vim-devicons/test/fileformat.vim	/^function! s:suite.MacIcon()$/;"	f
s:suite.NoArgument_EditMKFile_GetGearIcon	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.NoArgument_EditMKFile_GetGearIcon()$/;"	f
s:suite.NoArgument_EditPythonFile_GetPythonIcon	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.NoArgument_EditPythonFile_GetPythonIcon()$/;"	f
s:suite.NoArgument_EditRustFile_GetRustIcon	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.NoArgument_EditRustFile_GetRustIcon()$/;"	f
s:suite.NoArgument_EditVimFile_GetVimIcon	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.NoArgument_EditVimFile_GetVimIcon()$/;"	f
s:suite.NoArgument_EditjavaScriptFile_GetjavaScriptIcon	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.NoArgument_EditjavaScriptFile_GetjavaScriptIcon()$/;"	f
s:suite.NoArgument_Editvimrc_GetVimIcon	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.NoArgument_Editvimrc_GetVimIcon()$/;"	f
s:suite.NoArgument_OverWriteFileType_GetVimIcon	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.NoArgument_OverWriteFileType_GetVimIcon()$/;"	f
s:suite.OneArgument_EditPythonFile_GetRubyIcon	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.OneArgument_EditPythonFile_GetRubyIcon()$/;"	f
s:suite.OneArgument_GetCIcon	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.OneArgument_GetCIcon()$/;"	f
s:suite.OneArgument_GetCSSIcon	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.OneArgument_GetCSSIcon()$/;"	f
s:suite.OneArgument_GetCSharpIcon	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.OneArgument_GetCSharpIcon()$/;"	f
s:suite.OneArgument_GetDartIcon	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.OneArgument_GetDartIcon()$/;"	f
s:suite.OneArgument_GetDropboxIcon	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.OneArgument_GetDropboxIcon()$/;"	f
s:suite.OneArgument_GetElmIcon	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.OneArgument_GetElmIcon()$/;"	f
s:suite.OneArgument_GetGoIcon	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.OneArgument_GetGoIcon()$/;"	f
s:suite.OneArgument_GetJavaIcon	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.OneArgument_GetJavaIcon()$/;"	f
s:suite.OneArgument_GetLicenseIcon	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.OneArgument_GetLicenseIcon()$/;"	f
s:suite.OneArgument_GetLuaIcon	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.OneArgument_GetLuaIcon()$/;"	f
s:suite.OneArgument_GetNodeModuleIcon	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.OneArgument_GetNodeModuleIcon()$/;"	f
s:suite.OneArgument_GetPhpIcon	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.OneArgument_GetPhpIcon()$/;"	f
s:suite.OneArgument_GetRIcon	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.OneArgument_GetRIcon()$/;"	f
s:suite.OneArgument_GetRssIcon	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.OneArgument_GetRssIcon()$/;"	f
s:suite.OneArgument_GetScalaIcon	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.OneArgument_GetScalaIcon()$/;"	f
s:suite.OneArgument_GetSolidityIcon	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.OneArgument_GetSolidityIcon()$/;"	f
s:suite.OneArgument_GetTexIcon	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.OneArgument_GetTexIcon()$/;"	f
s:suite.OneArgument_GetTypeScriptIcon	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.OneArgument_GetTypeScriptIcon()$/;"	f
s:suite.OneArgument_GetVueIcon	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.OneArgument_GetVueIcon()$/;"	f
s:suite.UpdateParentDirsStatus	plugged/nerdtree-git-plugin/tests/test_all.vim	/^function! s:suite.UpdateParentDirsStatus() abort$/;"	f
s:suite.WindowsIcon	plugged/vim-devicons/test/fileformat.vim	/^function! s:suite.WindowsIcon()$/;"	f
s:suite.__OneArgument_CppIcon__	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.__OneArgument_CppIcon__()$/;"	f
s:suite.__OneArgument_DBIcon__	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.__OneArgument_DBIcon__()$/;"	f
s:suite.__OneArgument_DockerIcon__	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.__OneArgument_DockerIcon__()$/;"	f
s:suite.__OneArgument_ElixirIcon__	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.__OneArgument_ElixirIcon__()$/;"	f
s:suite.__OneArgument_ErlangIcon__	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.__OneArgument_ErlangIcon__()$/;"	f
s:suite.__OneArgument_FSharpIcon__	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.__OneArgument_FSharpIcon__()$/;"	f
s:suite.__OneArgument_GearIcon__	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.__OneArgument_GearIcon__()$/;"	f
s:suite.__OneArgument_HaskellIcon__	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.__OneArgument_HaskellIcon__()$/;"	f
s:suite.__OneArgument_JavaScriptIcon__	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.__OneArgument_JavaScriptIcon__()$/;"	f
s:suite.__OneArgument_JsonIcon__	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.__OneArgument_JsonIcon__()$/;"	f
s:suite.__OneArgument_MarkDownIcon__	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.__OneArgument_MarkDownIcon__()$/;"	f
s:suite.__OneArgument_PerlIcon__	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.__OneArgument_PerlIcon__()$/;"	f
s:suite.__OneArgument_PythonIcon__	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.__OneArgument_PythonIcon__()$/;"	f
s:suite.__OneArgument_ReactIcon__	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.__OneArgument_ReactIcon__()$/;"	f
s:suite.__OneArgument_RubyIcon__	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.__OneArgument_RubyIcon__()$/;"	f
s:suite.__OneArgument_RustIcon__	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.__OneArgument_RustIcon__()$/;"	f
s:suite.__OneArgument_ShellIcon__	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.__OneArgument_ShellIcon__()$/;"	f
s:suite.__OneArgument_SwiftIcon__	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.__OneArgument_SwiftIcon__()$/;"	f
s:suite.__OneArgument_VimIcon__	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.__OneArgument_VimIcon__()$/;"	f
s:summarize	plugged/vim-easy-align/autoload/easy_align.vim	/^function s:summarize(opts, recur, mode_sequence)$/;"	f
s:syntax_accent	plugged/vim-one/colors/one.vim	/^    let s:syntax_accent = ['#526fff', '63']$/;"	v
s:syntax_accent	plugged/vim-one/colors/one.vim	/^    let s:syntax_accent = ['#528bff', '69']$/;"	v
s:syntax_accent_2	plugged/vim-one/colors/one.vim	/^    let s:syntax_accent_2 = ['#0083be', '31']$/;"	v
s:syntax_bg	plugged/vim-one/colors/one.vim	/^    let s:syntax_bg     = ['#282c34', '16']$/;"	v
s:syntax_bg	plugged/vim-one/colors/one.vim	/^    let s:syntax_bg     = ['#fafafa', '255']$/;"	v
s:syntax_cursor	plugged/vim-one/colors/one.vim	/^    let s:syntax_cursor = ['#2c323c', '16']$/;"	v
s:syntax_cursor	plugged/vim-one/colors/one.vim	/^    let s:syntax_cursor = ['#f0f0f0', '254']$/;"	v
s:syntax_fg	plugged/vim-one/colors/one.vim	/^  let s:syntax_fg = s:mono_1$/;"	v
s:syntax_fold_bg	plugged/vim-one/colors/one.vim	/^  let s:syntax_fold_bg = s:mono_3$/;"	v
s:syntax_gutter	plugged/vim-one/colors/one.vim	/^    let s:syntax_gutter = ['#636d83', '60']$/;"	v
s:syntax_gutter	plugged/vim-one/colors/one.vim	/^    let s:syntax_gutter = ['#9e9e9e', '247']$/;"	v
s:target_displacement	plugged/vim-smoothie/autoload/smoothie.vim	/^let s:target_displacement = 0$/;"	v
s:teal	plugged/neodark.vim/colors/neodark.vim	/^  let s:teal[0]       = '#5fafaf'$/;"	v
s:teal	plugged/neodark.vim/colors/neodark.vim	/^  let s:teal[1]       = 10$/;"	v
s:teal	plugged/neodark.vim/colors/neodark.vim	/^let s:teal       = ['#4BB1A7', 73]$/;"	v
s:temp_files	plugged/vim-fugitive/autoload/fugitive.vim	/^  let s:temp_files = {}$/;"	v
s:temp_scripts	plugged/vim-fugitive/autoload/fugitive.vim	/^  let s:temp_scripts = {}$/;"	v
s:test_regexp	plugged/vim-easy-align/autoload/easy_align.vim	/^function! s:test_regexp(regexp)$/;"	f
s:throw	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:throw(string) abort$/;"	f
s:timer_id	plugged/ctrlsf.vim/autoload/ctrlsf/async.vim	/^let s:timer_id = -1$/;"	v
s:toggleIgnoreFilter	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleIgnoreFilter() abort$/;"	f
s:toggleShowBookmarks	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleShowBookmarks() abort$/;"	f
s:toggleShowFiles	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleShowFiles() abort$/;"	f
s:toggleShowHidden	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleShowHidden() abort$/;"	f
s:toggleZoom	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleZoom() abort$/;"	f
s:tree_up_dir_line	plugged/nerdtree/syntax/nerdtree.vim	/^let s:tree_up_dir_line = '.. (up a dir)'$/;"	v
s:trees	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:trees = {}$/;"	v
s:trim	plugged/vim-easy-align/autoload/easy_align.vim	/^function! s:trim(str)$/;"	f
s:type_formatters	plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^let s:type_formatters = {}$/;"	v
s:type_formatters	plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^let s:type_formatters[s:types.BOOL]    = { bol -> bol ? 'v:true' : 'v:false' }$/;"	v
s:type_formatters	plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^let s:type_formatters[s:types.DICT]    = { dct -> s:prettifyDict(dct, '  \\ ', 0, '  ') }$/;"	v
s:type_formatters	plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^let s:type_formatters[s:types.FLOAT]   = { flt -> string(flt) }$/;"	v
s:type_formatters	plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^let s:type_formatters[s:types.FUNCREF] = { fn  -> string(fn) }$/;"	v
s:type_formatters	plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^let s:type_formatters[s:types.LIST]    = { lst -> s:prettifyList(lst, '  \\ ', 0, '  ') }$/;"	v
s:type_formatters	plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^let s:type_formatters[s:types.NULL]    = { nul -> string(nul) }$/;"	v
s:type_formatters	plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^let s:type_formatters[s:types.NUMBER]  = { nbr -> string(nbr) }$/;"	v
s:type_formatters	plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^let s:type_formatters[s:types.STRING]  = { str -> printf("'%s'", str) }$/;"	v
s:types	plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^let s:types = {$/;"	v
s:ulen	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! s:ulen(s)$/;"	f
s:unite_source	plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^let s:unite_source = {$/;"	v
s:unite_source	plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^let s:unite_source.action_table.expand = {$/;"	v
s:unite_source	plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^let s:unite_source.action_table.preview = {$/;"	v
s:unite_source.action_table.expand.func	plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^function! s:unite_source.action_table.expand.func(candidate) abort$/;"	f
s:unite_source.action_table.preview.func	plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^function! s:unite_source.action_table.preview.func(candidate) abort$/;"	f
s:unite_source.gather_candidates	plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^function! s:unite_source.gather_candidates(args, context) abort$/;"	f
s:unite_source.get_longest_snippet_len	plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^function! s:unite_source.get_longest_snippet_len(snippet_list) abort$/;"	f
s:unite_source.hooks.on_syntax	plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^function! s:unite_source.hooks.on_syntax(args, context) abort$/;"	f
s:unix_redir	plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^let s:unix_redir = (&shellredir =~# '%s') ? &shellredir : &shellredir . ' %s'$/;"	v
s:unix_redir	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let s:unix_redir = (&shellredir =~# '%s') ? &shellredir : &shellredir . ' %s'$/;"	v
s:unload	plugged/nvim-cmp/autoload/vital/cmp.vim	/^function! s:unload() abort dict$/;"	f
s:unmerged_status	plugged/nerdtree-git-plugin/autoload/gitstatus/util.vim	/^let s:unmerged_status = {$/;"	v
s:upDirCurrentRootClosed	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:upDirCurrentRootClosed() abort$/;"	f
s:upDirCurrentRootOpen	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:upDirCurrentRootOpen() abort$/;"	f
s:update_in_progress	plugged/vim-gutentags/autoload/gutentags.vim	/^    let s:update_in_progress[module] = []$/;"	v
s:update_in_progress	plugged/vim-gutentags/autoload/gutentags.vim	/^let s:update_in_progress = {}$/;"	v
s:update_lines	plugged/vim-easy-align/autoload/easy_align.vim	/^function! s:update_lines(todo)$/;"	f
s:update_queue	plugged/vim-gutentags/autoload/gutentags.vim	/^    let s:update_queue[module] = []$/;"	v
s:update_queue	plugged/vim-gutentags/autoload/gutentags.vim	/^let s:update_queue = {}$/;"	v
s:update_tags	plugged/vim-gutentags/autoload/gutentags.vim	/^function! s:update_tags(bufno, module, write_mode, queue_mode) abort$/;"	f
s:update_target	plugged/vim-smoothie/autoload/smoothie.vim	/^function s:update_target(lines)$/;"	f
s:valid_regexp	plugged/vim-easy-align/autoload/easy_align.vim	/^function! s:valid_regexp(regexp)$/;"	f
s:validate_options	plugged/vim-easy-align/autoload/easy_align.vim	/^function! s:validate_options(opts)$/;"	f
s:var	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:var = '\\%(<\\%(cword\\|cWORD\\|cexpr\\|cfile\\|sfile\\|slnum\\|afile\\|abuf\\|amatch' . (/;"	v
s:vcs_marker	plugged/ctrlsf.vim/autoload/ctrlsf/fs.vim	/^let s:vcs_marker = ['.git', '.svn', '.bzr', '_darcs']$/;"	v
s:version	plugged/vim-devicons/plugin/webdevicons.vim	/^let s:version = '0.11.0'$/;"	v
s:vertsplit	plugged/vim-one/colors/one.vim	/^    let s:vertsplit    = ['#181a1f', '233']$/;"	v
s:vertsplit	plugged/vim-one/colors/one.vim	/^    let s:vertsplit    = ['#e7e9e1', '188']$/;"	v
s:vim8	plugged/nerdtree-git-plugin/autoload/gitstatus/job.vim	/^let s:vim8 = has('patch-8.0.0039') && exists('*job_start')$/;"	v
s:vim_to_lsp	plugged/nvim-cmp/autoload/vital/_cmp/VS/LSP/Position.vim	/^function! s:vim_to_lsp(expr, pos) abort$/;"	f
s:visual_grey	plugged/vim-one/colors/one.vim	/^    let s:visual_grey  = ['#3e4452', '17']$/;"	v
s:visual_grey	plugged/vim-one/colors/one.vim	/^    let s:visual_grey  = ['#d0d0d0', '251']$/;"	v
s:vital_base_dir	plugged/nvim-cmp/autoload/vital/cmp.vim	/^let s:vital_base_dir = expand('<sfile>:h')$/;"	v
s:vital_files	plugged/nvim-cmp/autoload/vital/cmp.vim	/^function! s:vital_files() abort$/;"	f
s:vuejs	plugged/vim-nerdtree-syntax-highlight/after/syntax/nerdtree.vim	/^let s:vuejs = '42B883'$/;"	v
s:warmgrey	plugged/vim-monokai/colors/monokai.vim	/^let s:warmgrey    = { "gui": "#75715E", "cterm": "59" }$/;"	v
s:warning	plugged/nerdtree-git-plugin/autoload/gitstatus/log.vim	/^let s:warning = 2 | :lockvar s:warning$/;"	v
s:white	plugged/vim-monokai/colors/monokai.vim	/^let s:white       = { "gui": "#E8E8E3", "cterm": "252" }$/;"	v
s:white	plugged/vim-nerdtree-syntax-highlight/after/syntax/nerdtree.vim	/^let s:white = "FFFFFF"$/;"	v
s:white2	plugged/vim-monokai/colors/monokai.vim	/^let s:white2      = { "gui": "#d8d8d3", "cterm": "250" }$/;"	v
s:wildignores_options_path	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let s:wildignores_options_path = ''$/;"	v
s:winshell	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:winshell() abort$/;"	f
s:worktree_error	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:worktree_error = "core.worktree is required when using an external Git dir"$/;"	v
s:worktree_for_dir	plugged/vim-fugitive/plugin/fugitive.vim	/^let s:worktree_for_dir = {}$/;"	v
s:write_triggered_update_tags	plugged/vim-gutentags/autoload/gutentags.vim	/^function! s:write_triggered_update_tags(bufno) abort$/;"	f
s:yellow	plugged/neodark.vim/autoload/lightline/colorscheme/neodark.vim	/^let s:yellow = neodark#get_color('Type',      'fg')$/;"	v
s:yellow	plugged/neodark.vim/colors/neodark.vim	/^  let s:yellow[0]     = '#d7af5f'$/;"	v
s:yellow	plugged/neodark.vim/colors/neodark.vim	/^  let s:yellow[1]     = 3$/;"	v
s:yellow	plugged/neodark.vim/colors/neodark.vim	/^let s:yellow     = ['#D4B261', 179]$/;"	v
s:yellow	plugged/vim-monokai/colors/monokai.vim	/^let s:yellow      = { "gui": "#E6DB74", "cterm": "186" }$/;"	v
s:yellow	plugged/vim-nerdtree-syntax-highlight/after/syntax/nerdtree.vim	/^let s:yellow = "F09F17"$/;"	v
safe	plugged/nvim-cmp/lua/cmp/utils/misc.lua	/^misc.safe = function(v)$/;"	f	unknown:misc
safe_jump	plugged/LuaSnip/lua/luasnip/init.lua	/^local function safe_jump(node, dir, no_move)$/;"	f
same_indent	plugged/nvim-treesitter/tests/indent/common.lua	/^local function same_indent(state, arguments)$/;"	f
save_mark	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def save_mark(name):$/;"	f
scala	plugged/nvim-treesitter/lockfile.json	/^  "scala": {$/;"	o
scope_incremental	plugged/nvim-treesitter/lua/nvim-treesitter/incremental_selection.lua	/^M.scope_incremental = select_incremental(function(node)$/;"	f	unknown:M
score	plugged/nvim-cmp/lua/cmp/config/compare.lua	/^compare.score = function(entry1, entry2)$/;"	f	unknown:compare
script_path	plugged/nvim-lspconfig/lua/lspconfig/util.lua	/^M.script_path = function()$/;"	f	unknown:M
scroll	plugged/nvim-cmp/lua/cmp/view/docs_view.lua	/^docs_view.scroll = function(self, delta)$/;"	f	unknown:docs_view
scroll_docs	plugged/nvim-cmp/lua/cmp/config/mapping.lua	/^mapping.scroll_docs = function(delta)$/;"	f	unknown:mapping
scroll_docs	plugged/nvim-cmp/lua/cmp/init.lua	/^cmp.scroll_docs = function(delta)$/;"	f	unknown:cmp
scroll_docs	plugged/nvim-cmp/lua/cmp/view.lua	/^view.scroll_docs = function(self, delta)$/;"	f	unknown:view
scry	plugged/nvim-lspconfig/CONFIG.md	/^## scry$/;"	s	chapter:Configurations
scss	plugged/nvim-treesitter/lockfile.json	/^  "scss": {$/;"	o
search	plugged/nvim-cmp/lua/cmp/utils/binary.lua	/^binary.search = function(list, item, func)$/;"	f	unknown:binary
search_ancestors	plugged/nvim-lspconfig/lua/lspconfig/util.lua	/^function M.search_ancestors(startpath, func)$/;"	f	unknown:M
select	plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^    select = function(items, opts, on_choice)$/;"	f
select	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def select(start, end):$/;"	f
select_compiler_args	plugged/nvim-treesitter/lua/nvim-treesitter/shell_command_selectors.lua	/^function M.select_compiler_args(repo, compiler)$/;"	f	unknown:M
select_download_commands	plugged/nvim-treesitter/lua/nvim-treesitter/shell_command_selectors.lua	/^function M.select_download_commands(repo, project_name, cache_folder, revision, prefer_git)$/;"	f	unknown:M
select_executable	plugged/nvim-treesitter/lua/nvim-treesitter/shell_command_selectors.lua	/^function M.select_executable(executables)$/;"	f	unknown:M
select_incremental	plugged/nvim-treesitter/lua/nvim-treesitter/incremental_selection.lua	/^local function select_incremental(get_parent)$/;"	f
select_install_rm_cmd	plugged/nvim-treesitter/lua/nvim-treesitter/shell_command_selectors.lua	/^function M.select_install_rm_cmd(cache_folder, project_name)$/;"	f	unknown:M
select_mkdir_cmd	plugged/nvim-treesitter/lua/nvim-treesitter/shell_command_selectors.lua	/^function M.select_mkdir_cmd(directory, cwd, info_msg)$/;"	f	unknown:M
select_mv_cmd	plugged/nvim-treesitter/lua/nvim-treesitter/shell_command_selectors.lua	/^function M.select_mv_cmd(from, to, cwd)$/;"	f	unknown:M
select_next_item	plugged/nvim-cmp/lua/cmp/config/mapping.lua	/^mapping.select_next_item = function(option)$/;"	f	unknown:mapping
select_next_item	plugged/nvim-cmp/lua/cmp/init.lua	/^cmp.select_next_item = function(option)$/;"	f	unknown:cmp
select_next_item	plugged/nvim-cmp/lua/cmp/view.lua	/^view.select_next_item = function(self, option)$/;"	f	unknown:view
select_next_item	plugged/nvim-cmp/lua/cmp/view/custom_entries_view.lua	/^custom_entries_view.select_next_item = function(self, option)$/;"	f	unknown:custom_entries_view
select_next_item	plugged/nvim-cmp/lua/cmp/view/native_entries_view.lua	/^native_entries_view.select_next_item = function(self, option)$/;"	f	unknown:native_entries_view
select_next_tab	plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^    def select_next_tab(self, jump_direction: JumpDirection):$/;"	m	class:SnippetInstance
select_prev_item	plugged/nvim-cmp/lua/cmp/config/mapping.lua	/^mapping.select_prev_item = function(option)$/;"	f	unknown:mapping
select_prev_item	plugged/nvim-cmp/lua/cmp/init.lua	/^cmp.select_prev_item = function(option)$/;"	f	unknown:cmp
select_prev_item	plugged/nvim-cmp/lua/cmp/view.lua	/^view.select_prev_item = function(self, option)$/;"	f	unknown:view
select_prev_item	plugged/nvim-cmp/lua/cmp/view/custom_entries_view.lua	/^custom_entries_view.select_prev_item = function(self, option)$/;"	f	unknown:custom_entries_view
select_prev_item	plugged/nvim-cmp/lua/cmp/view/native_entries_view.lua	/^native_entries_view.select_prev_item = function(self, option)$/;"	f	unknown:native_entries_view
select_rm_file_cmd	plugged/nvim-treesitter/lua/nvim-treesitter/shell_command_selectors.lua	/^function M.select_rm_file_cmd(file, info_msg)$/;"	f	unknown:M
self[method]	plugged/nvim-cmp/lua/cmp/vim_source.lua	/^    self[method] = (function(m)$/;"	f
semi	plugged/vim-snippets/pythonx/javascript_snippets.py	/^def semi(snip):$/;"	f
send	plugged/ultisnips/test/vim_interface.py	/^    def send(self, keys):$/;"	m	class:VimInterfaceWindows
send_to_terminal	plugged/ultisnips/test/vim_interface.py	/^    def send_to_terminal(self, s):$/;"	m	class:VimInterface
send_to_terminal	plugged/ultisnips/test/vim_interface.py	/^    def send_to_terminal(self, s):$/;"	m	class:VimInterfaceTmux
send_to_vim	plugged/ultisnips/test/vim_interface.py	/^    def send_to_vim(self, s):$/;"	m	class:VimInterface
send_to_vim	plugged/ultisnips/test/vim_interface.py	/^    def send_to_vim(self, s):$/;"	m	class:VimInterfaceTmux
send_to_vim	plugged/ultisnips/test/vim_interface.py	/^    def send_to_vim(self, s):$/;"	m	class:VimInterfaceTmuxNeovim
sep	plugged/LuaSnip/lua/luasnip/loaders/from_vscode.lua	/^local sep = (function()$/;"	f
serve_d	plugged/nvim-lspconfig/CONFIG.md	/^## serve_d$/;"	s	chapter:Configurations
server_per_root_dir_manager	plugged/nvim-lspconfig/lua/lspconfig/util.lua	/^function M.server_per_root_dir_manager(_make_config)$/;"	f	unknown:M
set	plugged/nvim-cmp/lua/cmp/utils/cache.lua	/^cache.set = function(self, key, value)$/;"	f	unknown:cache
set	plugged/nvim-cmp/lua/cmp/utils/misc.lua	/^misc.set = function(t, keys, v)$/;"	f	unknown:misc
set	plugged/nvim-treesitter/lua/nvim-treesitter/caching.lua	/^  function cache.set(type_name, bufnr, value)$/;"	f	unknown:cache
set	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def set(self, line, column):$/;"	m	class:_SnippetUtilCursor
setUp	plugged/ultisnips/test/vim_test_case.py	/^    def setUp(self):$/;"	m	class:VimTestCase
set_buf_indent_opts	plugged/nvim-treesitter/tests/indent/common.lua	/^local function set_buf_indent_opts(opts)$/;"	f
set_buffer	plugged/nvim-cmp/lua/cmp/config.lua	/^config.set_buffer = function(c, bufnr)$/;"	f	unknown:config
set_config	plugged/LuaSnip/lua/luasnip/config.lua	/^	set_config = function(user_config)$/;"	f
set_context	plugged/nvim-cmp/lua/cmp/core.lua	/^core.set_context = function(self, ctx)$/;"	f	unknown:core
set_cursor_0ind	plugged/LuaSnip/lua/luasnip/util/util.lua	/^local function set_cursor_0ind(c)$/;"	f
set_cursor_from_pos	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def set_cursor_from_pos(pos):$/;"	f
set_ext_opts	plugged/LuaSnip/lua/luasnip/nodes/choiceNode.lua	/^function ChoiceNode:set_ext_opts(name)$/;"	f	unknown:ChoiceNode
set_ext_opts	plugged/LuaSnip/lua/luasnip/nodes/dynamicNode.lua	/^function DynamicNode:set_ext_opts(name)$/;"	f	unknown:DynamicNode
set_ext_opts	plugged/LuaSnip/lua/luasnip/nodes/node.lua	/^function Node:set_ext_opts(name)$/;"	f	unknown:Node
set_ext_opts	plugged/LuaSnip/lua/luasnip/nodes/snippet.lua	/^function Snippet:set_ext_opts(opt_name)$/;"	f	unknown:Snippet
set_global	plugged/nvim-cmp/lua/cmp/config.lua	/^config.set_global = function(c)$/;"	f	unknown:config
set_jump	plugged/nvim-treesitter/lua/nvim-treesitter/utils.lua	/^function M.set_jump()$/;"	f	unknown:M
set_mark_from_pos	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def set_mark_from_pos(name, pos):$/;"	f
set_mark_rgrav	plugged/LuaSnip/lua/luasnip/nodes/choiceNode.lua	/^function ChoiceNode:set_mark_rgrav(rgrav_beg, rgrav_end)$/;"	f	unknown:ChoiceNode
set_mark_rgrav	plugged/LuaSnip/lua/luasnip/nodes/dynamicNode.lua	/^function DynamicNode:set_mark_rgrav(val_begin, val_end)$/;"	f	unknown:DynamicNode
set_mark_rgrav	plugged/LuaSnip/lua/luasnip/nodes/node.lua	/^function Node:set_mark_rgrav(rgrav_beg, rgrav_end)$/;"	f	unknown:Node
set_mark_rgrav	plugged/LuaSnip/lua/luasnip/nodes/snippet.lua	/^function Snippet:set_mark_rgrav(val_begin, val_end)$/;"	f	unknown:Snippet
set_old_text	plugged/LuaSnip/lua/luasnip/nodes/choiceNode.lua	/^function ChoiceNode:set_old_text()$/;"	f	unknown:ChoiceNode
set_old_text	plugged/LuaSnip/lua/luasnip/nodes/node.lua	/^function Node:set_old_text()$/;"	f	unknown:Node
set_opts	plugged/LuaSnip/lua/luasnip/util/mark.lua	/^function Mark:set_opts(opts)$/;"	f	unknown:Mark
set_style	plugged/nvim-cmp/lua/cmp/utils/window.lua	/^window.set_style = function(self, style)$/;"	f	unknown:window
set_text	plugged/LuaSnip/lua/luasnip/nodes/snippet.lua	/^function Snippet:set_text(node, text)$/;"	f	unknown:Snippet
setup	plugged/cmp-nvim-lsp/lua/cmp_nvim_lsp/init.lua	/^M.setup = function()$/;"	f	unknown:M
setup	plugged/nvim-lspconfig/lua/lspconfig/configs.lua	/^  function M.setup(config)$/;"	f	unknown:M
setup	plugged/nvim-treesitter/lua/nvim-treesitter.lua	/^function M.setup()$/;"	f	unknown:M
setup	plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^function M.setup(user_data)$/;"	f	unknown:M
setup() function	plugged/nvim-lspconfig/ADVANCED_README.md	/^## setup() function$/;"	s
setup_choice_jumps	plugged/LuaSnip/lua/luasnip/nodes/choiceNode.lua	/^function ChoiceNode:setup_choice_jumps() end$/;"	f	unknown:ChoiceNode
setup_commands	plugged/nvim-treesitter/lua/nvim-treesitter/utils.lua	/^function M.setup_commands(mod, commands)$/;"	f	unknown:M
setup_other_plugins	plugged/ultisnips/test_all.py	/^def setup_other_plugins(all_plugins):$/;"	f
sexpr	plugged/nvim-treesitter/lua/nvim-treesitter/tsrange.lua	/^function TSRange:sexpr()$/;"	f	unknown:TSRange
shell_in_repro	plugged/ultisnips/Makefile	/^shell_in_repro:$/;"	t
shift	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def shift(self, amount=1):$/;"	m	class:SnippetUtil
show	plugged/nvim-cmp/lua/cmp/view/ghost_text_view.lua	/^ghost_text_view.show = function(self, e)$/;"	f	unknown:ghost_text_view
silent_call	plugged/ultisnips/test/vim_interface.py	/^def silent_call(cmd):$/;"	f
simple_tabstop	plugged/LuaSnip/lua/luasnip/util/parser.lua	/^local function simple_tabstop(text, tab_stops)$/;"	f
simple_var	plugged/LuaSnip/lua/luasnip/util/parser.lua	/^local function simple_var(text)$/;"	f
skip_if	plugged/ultisnips/test/test_Autotrigger.py	/^    skip_if = ($/;"	v	class:Autotrigger_WillProduceNoExceptionWithVimLowerThan214
skip_if	plugged/ultisnips/test/test_Autotrigger.py	/^    skip_if = check_required_vim_version$/;"	v	class:Autotrigger_CanExpandOnTriggerWithLengthMoreThanOne
skip_if	plugged/ultisnips/test/test_Autotrigger.py	/^    skip_if = check_required_vim_version$/;"	v	class:Autotrigger_CanMatchContext
skip_if	plugged/ultisnips/test/test_Autotrigger.py	/^    skip_if = check_required_vim_version$/;"	v	class:Autotrigger_CanMatchPreviouslySelectedPlaceholder
skip_if	plugged/ultisnips/test/test_Autotrigger.py	/^    skip_if = check_required_vim_version$/;"	v	class:Autotrigger_CanMatchSimpleTrigger
skip_if	plugged/ultisnips/test/test_Chars.py	/^    skip_if = lambda self: running_on_windows()$/;"	m	class:_UmlautsBase
skip_if	plugged/ultisnips/test/test_ContextSnippets.py	/^    skip_if = lambda self: "Bug in Neovim." if self.vim_flavor == "neovim" else None$/;"	m	class:ContextSnippets_ReportErrorOnIndexOutOfRange
skip_if	plugged/ultisnips/test/test_Editing.py	/^    skip_if = check_required_vim_version$/;"	v	class:UpdateModifiedSnippetWithoutCursorMove1
skip_if	plugged/ultisnips/test/test_Editing.py	/^    skip_if = check_required_vim_version$/;"	v	class:UpdateModifiedSnippetWithoutCursorMove2
skip_if	plugged/ultisnips/test/test_Format.py	/^    skip_if = lambda self: running_on_windows()$/;"	m	class:RecTabStopsWithExpandtab_SpecialIndentProblem_ECR
skip_if	plugged/ultisnips/test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	m	class:TabStop_Shell_InDefValue_Leave
skip_if	plugged/ultisnips/test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	m	class:TabStop_Shell_InDefValue_Overwrite
skip_if	plugged/ultisnips/test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	m	class:TabStop_Shell_ShebangPython
skip_if	plugged/ultisnips/test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	m	class:TabStop_Shell_SimpleExample
skip_if	plugged/ultisnips/test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	m	class:TabStop_Shell_TestEscapedCharsAndShellVars_Overwrite
skip_if	plugged/ultisnips/test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	m	class:TabStop_Shell_TestEscapedChars_Overwrite
skip_if	plugged/ultisnips/test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	m	class:TabStop_Shell_TextInNextLine
skip_if	plugged/ultisnips/test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	m	class:TabStop_Shell_WithUmlauts
skip_if	plugged/ultisnips/test/test_SnippetOptions.py	/^    skip_if = lambda self: running_on_windows()$/;"	m	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3
skip_if	plugged/ultisnips/test/test_Transformation.py	/^    skip_if = lambda self: no_unidecode_available()$/;"	m	class:Transformation_LowerCaseAsciiResult
skip_if	plugged/ultisnips/test/test_Transformation.py	/^    skip_if = lambda self: no_unidecode_available()$/;"	m	class:Transformation_SimpleCaseAsciiResult
skip_if	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    skip_if = lambda self: running_on_windows()$/;"	m	class:TestLangmapWithUtf8_ExpectCorrectResult
skip_if	plugged/ultisnips/test/vim_test_case.py	/^    skip_if = lambda self: None$/;"	m	class:VimTestCase
sleeptime	plugged/ultisnips/test/vim_test_case.py	/^    sleeptime = 0.00$/;"	v	class:VimTestCase
smoothie#backwards	plugged/vim-smoothie/autoload/smoothie.vim	/^function smoothie#backwards()$/;"	f
smoothie#cursor_movement	plugged/vim-smoothie/autoload/smoothie.vim	/^function smoothie#cursor_movement(movement)$/;"	f
smoothie#downwards	plugged/vim-smoothie/autoload/smoothie.vim	/^function smoothie#downwards()$/;"	f
smoothie#forwards	plugged/vim-smoothie/autoload/smoothie.vim	/^function smoothie#forwards()$/;"	f
smoothie#upwards	plugged/vim-smoothie/autoload/smoothie.vim	/^function smoothie#upwards()$/;"	f
snipMate & UltiSnip Snippets	plugged/vim-snippets/README.md	/^snipMate & UltiSnip Snippets$/;"	c
snipMate_Disabled	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_Disabled(_VimTest):$/;"	c
snipMate_EmptyLinesContinueSnippets	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_EmptyLinesContinueSnippets(_VimTest):$/;"	c
snipMate_Extends	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_Extends(_VimTest):$/;"	c
snipMate_Interpolation	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_Interpolation(_VimTest):$/;"	c
snipMate_InterpolationWithSystem	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_InterpolationWithSystem(_VimTest):$/;"	c
snipMate_Issue1325	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_Issue1325(_VimTest):$/;"	c
snipMate_Issue1344	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_Issue1344(_VimTest):$/;"	c
snipMate_Issue658	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_Issue658(_VimTest):$/;"	c
snipMate_MultiMatches	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_MultiMatches(_VimTest):$/;"	c
snipMate_NoNestedTabstops	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_NoNestedTabstops(_VimTest):$/;"	c
snipMate_OtherFiletype	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_OtherFiletype(_VimTest):$/;"	c
snipMate_OverwrittenByRegExpTrigger	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_OverwrittenByRegExpTrigger(_VimTest):$/;"	c
snipMate_SimpleSnippet	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_SimpleSnippet(_VimTest):$/;"	c
snipMate_SimpleSnippetInSnippetFile	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_SimpleSnippetInSnippetFile(_VimTest):$/;"	c
snipMate_SimpleSnippetSubDirectory	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_SimpleSnippetSubDirectory(_VimTest):$/;"	c
snipMate_TestMirrors	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_TestMirrors(_VimTest):$/;"	c
snipMate_TestMirrorsInPlaceholders	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_TestMirrorsInPlaceholders(_VimTest):$/;"	c
snipMate_TestMirrorsInPlaceholders_Overwrite	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_TestMirrorsInPlaceholders_Overwrite(_VimTest):$/;"	c
snipMate_TestNoBraceTabstops	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_TestNoBraceTabstops(_VimTest):$/;"	c
snipMate_TestNoBraceTabstopsAndMirrors	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_TestNoBraceTabstopsAndMirrors(_VimTest):$/;"	c
snipMate_Visual_Simple	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_Visual_Simple(_VimTest):$/;"	c
snippet_end	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def snippet_end(self):$/;"	m	class:SnippetUtil
snippet_start	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def snippet_start(self):$/;"	m	class:SnippetUtil
snippets	plugged/ultisnips/test/test_Autocommands.py	/^    snippets = ("test", "[ ${1:foo} ]")$/;"	v	class:Autocommands
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ("test", """Hello \\t ${1:default}\\n$2""")$/;"	v	class:LeaveTrailingWhitespace
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ("test", """Hello\\t ${1:default}\\n$2""", "", "s")$/;"	v	class:RemoveTrailingWhitespace
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ("test", """next line\\n\\nshould be empty""", "", "")$/;"	v	class:DoNotTrimSpacesAtEndOfLinesByDefault
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ("test", """next line\\n\\nshould be empty""", "", "m")$/;"	v	class:TrimSpacesAtEndOfLines
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ("trig", "success")$/;"	v	class:NoUmlautsBeforeTriggerAndCharsAfter
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ("trig", "success")$/;"	v	class:UmlautsBeforeTriggerAndCharsAfter
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ("ül", "üü ${1:world} üü $1")$/;"	v	class:Snippet_With_Umlauts_Mirrors
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ("ül", "üü ${1:world} üü ${2:hello}ßß\\nüüüü")$/;"	v	class:Snippet_With_Umlauts_OverwriteFirst
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ("ül", "üü ${1:world} üü ${2:hello}ßß\\nüüüü")$/;"	v	class:Snippet_With_Umlauts_OverwriteNone
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ("ül", "üü ${1:world} üü ${2:hello}ßß\\nüüüü")$/;"	v	class:Snippet_With_Umlauts_OverwriteSecond
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ("ül", "üüüüüßßßß")$/;"	v	class:Snippet_With_Umlauts_TypeOn
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ("ül", 'üü ${1:world} üü `!p snip.rv = len(t[1])*"a"`')$/;"	v	class:Snippet_With_Umlauts_Python
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ($/;"	v	class:TrailingNewline_TabStop_EndNL
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ($/;"	v	class:TrailingNewline_TabStop_EndStartNL
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ($/;"	v	class:TrailingNewline_TabStop_ExtraNL_ECR
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ($/;"	v	class:TrailingNewline_TabStop_JustNL
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ($/;"	v	class:TrailingNewline_TabStop_NLInsideStuffBehind
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ($/;"	v	class:TrailingNewline_TabStop_NotEndStartNL
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ($/;"	v	class:TrailingNewline_TabStop_StartNL
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ($/;"	v	class:_MultiLineDefault
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = _snip_quote("'")$/;"	v	class:Snippet_With_SingleQuote
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = _snip_quote("'")$/;"	v	class:Snippet_With_SingleQuote_List
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = _snip_quote("ü")$/;"	v	class:Snippet_With_Umlauts
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = _snip_quote("ü")$/;"	v	class:Snippet_With_Umlauts_List
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = _snip_quote('"')$/;"	v	class:Snippet_With_DoubleQuote
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = _snip_quote('"')$/;"	v	class:Snippet_With_DoubleQuote_List
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${0|red,blue|}")$/;"	v	class:Choices_ShouldThrowErrorWithZeroTabstop
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1:outer ${2|foo,blah|}} ${3}")$/;"	v	class:Choices_AsNestedElement_CanBeTabbedThrough
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1:outer ${2|foo,blah|}}")$/;"	v	class:Choices_AsNestedElement_CanBeTabbedInto
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1:outer ${2|foo,blah|}}")$/;"	v	class:Choices_AsNestedElement_ShallNotTakeActionIfParentInput
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1:outer ${2|foo,blah|}}")$/;"	v	class:Choices_AsNestedElement_ShouldOverwriteDefaultText
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1|a,,c|}")$/;"	v	class:Choices_EmptyChoiceWillBeDiscarded
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1|a,b,c,d,e,f,g,h,i,j,k,l,m,n|} is ${2:a char}")$/;"	v	class:Choices_MoreThan9Candidates_ShouldTerminateWithSpace
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1|a,b,c,d,e,f,g,h,i,j,k,l,m,n|} is ${2:a char}")$/;"	v	class:Choices_MoreThan9Candidates_ShouldWaitForInputs
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1|cyan,magenta|}, mirror: $1")$/;"	v	class:Choices_With_Mirror
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1|cyan,magenta|}, mirror: $1")$/;"	v	class:Choices_With_Mirror_ContinueMirroring_EvenAfterSelectionDone
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1|red,gray|} is ${2:color}\\nline 2")$/;"	v	class:Choices_WilNotMessWithTabstopsAfterIt
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1|red,gray|}")$/;"	v	class:Choices_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1|red,gray|}")$/;"	v	class:Choices_WillBeExpandedToInlineSelection
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1|red,green|}")$/;"	v	class:Choices_WillAbandonSelection_If_CharTyped
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1|red,green|}")$/;"	v	class:Choices_WillAbandonSelection_If_InputIsGreaterThanMaxSelectionIndex
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1||}")$/;"	v	class:Choices_WillNotExpand_If_ChoiceListIsEmpty
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1|Русский язык,中文,한국어,öääö|}")$/;"	v	class:Choices_CanTakeNonAsciiCharacters
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ($/;"	v	class:Choices_CanEscapeCommaInsideChoiceItem
snippets	plugged/ultisnips/test/test_Completion.py	/^    snippets = ("test", "$1 $2")$/;"	v	class:Completion_BackwardsJumpWithoutCOMPL_ACCEPT
snippets	plugged/ultisnips/test/test_Completion.py	/^    snippets = ("test", "$1 $2")$/;"	v	class:Completion_ForwardsJumpWithoutCOMPL_ACCEPT
snippets	plugged/ultisnips/test/test_Completion.py	/^    snippets = ("test", "$1 ${1:blah}")$/;"	v	class:Completion_SimpleExample_ECR
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("i", "if $1:\\n\\t$2")$/;"	v	class:Undo_ChangesInPlaceholder
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("i", "if $1:\\n\\t$2")$/;"	v	class:Undo_CompletelyUndoSnippet
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("i", "if:\\n\\t$1")$/;"	v	class:Undo_RemoveOneSnippetByTime
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("i", "if:\\n\\t$1")$/;"	v	class:Undo_RemoveOneSnippetByTime2
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "$1 Hello\\naaa ${1} bbb\\nWorld")$/;"	v	class:Undo_RemoveEditInTabstop
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "$1hello\\nnice\\nworld")$/;"	v	class:DeleteLastTwoLinesInSnippet
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "${1:hello} $1")$/;"	v	class:DeleteSnippetInsertion0
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "${1:hi}\\n${2:world}\\nend")$/;"	v	class:DeleteCurrentTabStop2_JumpBack
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "${1:hi}\\n${2:world}\\nend")$/;"	v	class:DeleteCurrentTabStop3_JumpAround
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "${1:hi}\\nend")$/;"	v	class:DeleteCurrentTabStop1_JumpBack
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "${1:one}(${2:xxx})${3:three}")$/;"	v	class:UpdateModifiedSnippetWithoutCursorMove1
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "${1}\\n`!p snip.rv = '\\\\n'.join(t[1].split())`\\n\\n${0:pass}")$/;"	v	class:JumpForward_DefSnippet
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "A${1:C} ${0:DDD}", "This is Case 1")$/;"	v	class:Backspace_TabStop_Zero
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "A${1:C} ${2:DDD}", "This is Case 1")$/;"	v	class:Backspace_TabStop_NotZero
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "Hello\\n${1:Hello}World")$/;"	v	class:Undo_RemoveWholeSnippet
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "Hello\\naaa ${1} bbb\\nWorld")$/;"	v	class:Undo_RemoveMultilineSnippet
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", r"$1${1\/(.*)\/(?0::.)\/}")$/;"	v	class:DeleteSnippetInsertion1
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", r"if $1: $2")$/;"	v	class:DoNotCrashOnUndoAndJumpInNestedSnippet
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ($/;"	v	class:UpdateModifiedSnippetWithoutCursorMove2
snippets	plugged/ultisnips/test/test_Expand.py	/^    snippets = ("hallo", "Hallo ${1:Welt}")$/;"	v	class:SimpleExpand_DoNotClobberDefaultRegister
snippets	plugged/ultisnips/test/test_Expand.py	/^    snippets = ("hallo", "Hallo Welt!")$/;"	v	class:_SimpleExpands
snippets	plugged/ultisnips/test/test_Expand.py	/^    snippets = ("hallo", "Hallo Welt!\\nUnd Wie gehts")$/;"	v	class:MultilineExpandTestTyping_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Expand.py	/^    snippets = ("hallo", "Hallo Welt!\\nUnd Wie gehts")$/;"	v	class:MultilineExpand_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Expand.py	/^    snippets = ("hallo", "Hallo Welt\\n")$/;"	v	class:SimpleExpandEndingWithNewline_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Expand.py	/^    snippets = ("test", "SimpleText")$/;"	v	class:ExitSnippetModeAfterTabstopZero
snippets	plugged/ultisnips/test/test_Expand.py	/^    snippets = ("test", r"${1:\\Safe\\\\}")$/;"	v	class:SimpleExpand_Issue1343
snippets	plugged/ultisnips/test/test_Fixes.py	/^    snippets = ("pd", "padding: ${1:0}px")$/;"	v	class:VirtualEdit
snippets	plugged/ultisnips/test/test_Fixes.py	/^    snippets = ("test", "${1:hello} ${2:world} ${0}")$/;"	v	class:RetainsTheUnnamedRegister
snippets	plugged/ultisnips/test/test_Fixes.py	/^    snippets = ("test", "${1:hello} ${2:world} ${0}")$/;"	v	class:RetainsTheUnnamedRegister_ButOnlyOnce
snippets	plugged/ultisnips/test/test_Fixes.py	/^    snippets = ("test", "${2:#2} ${1:#1};$0")$/;"	v	class:Bug1251994
snippets	plugged/ultisnips/test/test_Fixes.py	/^    snippets = ("test", "\\t${1}${0}")$/;"	v	class:ShiftWidthZero
snippets	plugged/ultisnips/test/test_Fixes.py	/^    snippets = ("test", "hello")$/;"	v	class:NonUnicodeDataInUnnamedRegister
snippets	plugged/ultisnips/test/test_Folding.py	/^    snippets = ($/;"	v	class:FoldOverwrite_Simple_ECR
snippets	plugged/ultisnips/test/test_Folding.py	/^    snippets = ($/;"	v	class:Fold_DeleteMiddleLine_ECR
snippets	plugged/ultisnips/test/test_Folding.py	/^    snippets = ($/;"	v	class:FoldingEnabled_SnippetWithFold_ExpectNoFolding
snippets	plugged/ultisnips/test/test_Folding.py	/^    snippets = ($/;"	v	class:PerlSyntaxFold
snippets	plugged/ultisnips/test/test_Format.py	/^    snippets = ("m", "\\tBlaahblah \\t\\t  ")$/;"	v	class:RecTabStopsWithExpandtab_SimpleExample_ECR
snippets	plugged/ultisnips/test/test_Format.py	/^    snippets = ("test", "${1:longer expand}\\n$1\\n$0", "", "f")$/;"	v	class:FOSimple_Break_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Format.py	/^    snippets = ("test", "${1:longer expand}after\\nstart$1end")$/;"	v	class:FOTextAfter_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Format.py	/^    snippets = ("test", "${1:longer expand}after\\nstart$1end")$/;"	v	class:FOWrapOnLongWord_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Format.py	/^    snippets = ("test", "Before${1:longer expand}After\\nstart$1end")$/;"	v	class:FOTextBeforeAndAfter_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Format.py	/^    snippets = ("test", "for\\n    blah")$/;"	v	class:ProperIndenting_SimpleCase_ECR
snippets	plugged/ultisnips/test/test_Format.py	/^    snippets = ("test", "hui")$/;"	v	class:ProperIndenting_AutoIndentAndNewline_ECR
snippets	plugged/ultisnips/test/test_Format.py	/^    snippets = ("test", "hui")$/;"	v	class:ProperIndenting_SingleLineNoReindenting_ECR
snippets	plugged/ultisnips/test/test_Format.py	/^    snippets = (("m1", "Something"), ("m", "\\t$0"))$/;"	v	class:RecTabStopsWithExpandtab_SpecialIndentProblem_ECR
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", """${1:hi} `!p res = t[1]+".blah"` End""")$/;"	v	class:PythonCodeOld_ReferencePlaceholderAfter
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", """${1:hi} `!p snip.rv = t[1]+".blah"` End""")$/;"	v	class:PythonCode_ReferencePlaceholder
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", """`!p res = len(t[1])*"#"`\\n${1:some text}""")$/;"	v	class:PythonCodeOld_ReferencePlaceholderBefore
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", """`!p snip.rv = len(t[1])*"#"`\\n${1:some text}""")$/;"	v	class:PythonCode_ReferencePlaceholderBefore
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", """hi `!p res = "Hallo"` End""")$/;"	v	class:PythonCodeOld_SimpleExample
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", """hi `!p snip.rv = "Hallo"` End""")$/;"	v	class:PythonCode_SimpleExample
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", """hi `!v indent(".")` End""")$/;"	v	class:TabStop_VimScriptInterpolation_SimpleExample
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", """hi`!p snip.rv = ""`End""")$/;"	v	class:PythonCode_SimpleExample_ReturnValueIsEmptyString
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", "Hallo ${1:now `echo fromecho`} end")$/;"	v	class:TabStop_Shell_InDefValue_Leave
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", "Hallo ${1:now `echo fromecho`} end")$/;"	v	class:TabStop_Shell_InDefValue_Overwrite
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", "`!p snip.rv = 5`")$/;"	v	class:Python_SnipRvCanBeNonText
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", "h`!p snip.rv = snip.v.mode + snip.v.text`b")$/;"	v	class:PythonVisual_LineSelect_Simple
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", "h`!p snip.rv = snip.v.mode + snip.v.text`b")$/;"	v	class:PythonVisual_NoVisualSelection_Ignore
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", "h`!p snip.rv = snip.v.mode + snip.v.text`b")$/;"	v	class:PythonVisual_SelectOneWord
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", "hi `echo hallo` you!")$/;"	v	class:TabStop_Shell_SimpleExample
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", "hi `echo hallo`\\nWeiter")$/;"	v	class:TabStop_Shell_TextInNextLine
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", "hi `echo höüäh` you!")$/;"	v	class:TabStop_Shell_WithUmlauts
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", r"""${2:${1\/.+\/egal\/}} ${1:$3} ${3:`!p snip.rv = "hi"`}""")$/;"	v	class:PythonCode_TrickyReferences
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", r"""`echo \\`echo "\\\\$hi"\\``""")$/;"	v	class:TabStop_Shell_TestEscapedChars_Overwrite
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", r"""`hi="blah"; echo \\`echo "$hi"\\``""")$/;"	v	class:TabStop_Shell_TestEscapedCharsAndShellVars_Overwrite
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", r"""hi `!p snip.rv = snip.opt("g:UStest") or "no"` End""")$/;"	v	class:PythonCode_OptExists
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", r"""hi `!p snip.rv = snip.opt("g:UStest") or "no"` End""")$/;"	v	class:PythonCode_OptNoExists
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", r"""hi`!p snip.rv = "a" * 100 + '\\n'*100 + "a"*100`end""")$/;"	v	class:PythonCode_LongerTextThanSource_MultiLine
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", r"""hi`!p snip.rv = "a" * 100`end""")$/;"	v	class:PythonCode_LongerTextThanSource_Chars
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCodeOld_IndentedMultiline
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCodeOld_TransformedBeforeMultiLine
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_AccessKilledTabstop_OverwriteFirst
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_AccessKilledTabstop_OverwriteSecond
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_CanOverwriteTabstop
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_IndentEtSw
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_IndentEtSwOffset
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_IndentNoetSwTs
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_IndentProblem
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_Locals
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_MultiAppend
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_MultiAppendShift
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_MultiAppendShiftMethods
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_MultiAppendSimpleIndent
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_MultilineIndented
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_ResetIndent
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_SimpleAppend
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_SimpleMkline
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_TransformedBeforeMultiLine
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_UseNewOverOld
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonVisual_HasAccessToSelectedPlaceholders
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonVisual_HasAccessToZeroPlaceholders
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:TabStop_Shell_ShebangPython
snippets	plugged/ultisnips/test/test_ListSnippets.py	/^    snippets = ($/;"	v	class:_ListAllSnippets
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = "test", "$1 $1_"$/;"	v	class:Mirror_TestKill_InsertAfter_NoKill
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = "test", "$1 $1_"$/;"	v	class:Mirror_TestKill_InsertBefore_NoKill
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = "test", "$1 $1_"$/;"	v	class:Mirror_TestKill_InsertBeginning_Kill
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = "test", "$1 $1_"$/;"	v	class:Mirror_TestKill_InsertEnd_Kill
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = "test", "welt${1:welt${2:welt}welt} $2"$/;"	v	class:Mirror_TestKillTabstop_Kill
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "    $1\\n$1\\na$1b\\n$1\\ntest $1 mich")$/;"	v	class:SimpleMirrorMultilineMany_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1 $1 $1 $1")$/;"	v	class:SimpleMirrorSameLineManyMultiline_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1 $1 $1 $1")$/;"	v	class:SimpleMirrorSameLineMany_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1 $1")$/;"	v	class:SimpleMirrorSameLine_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1 $1")$/;"	v	class:SimpleMirrorSameLine_InText_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1 ${1:replace me}")$/;"	v	class:SimpleMirrorSameLineBeforeTabDefVal_DelB4Typing_ECR
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1 ${1:replace me}")$/;"	v	class:SimpleMirrorSameLineBeforeTabDefVal_ECR
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1 ${1:this is it} $1")$/;"	v	class:MirrorBeforeTabstopLeave_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1 ${1:this is it} $1")$/;"	v	class:MirrorBeforeTabstopOverwrite_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1 Hinten\\n$1")$/;"	v	class:TextTabStopTextAfterTab_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1$1 ")$/;"	v	class:SimpleMirrorSameLineNoSpaceSpaceAfter_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1$1")$/;"	v	class:SimpleMirrorSameLineNoSpace_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1\\n$1 Hinten")$/;"	v	class:TextTabStopAfterMirror_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1\\n$1")$/;"	v	class:SimpleMirrorDeleteSomeEnterSome_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1\\n$1")$/;"	v	class:SimpleMirrorDelete_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1\\n$1")$/;"	v	class:TextTabStopSimpleMirrorMultiline_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1\\n$1\\n$1")$/;"	v	class:MultilineTabStopSimpleMirrorDeleteInLine_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1\\n$1\\n$1")$/;"	v	class:MultilineTabStopSimpleMirrorMultiline1_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1\\n${1:sometext}")$/;"	v	class:TextTabStopSimpleMirrorMultilineMirrorInFront_ECR
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1\\nVorne $1 Hinten")$/;"	v	class:TextTabStopSurroundMirror_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1\\nVorne $1")$/;"	v	class:TextTabStopTextBeforeMirror_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1\\n\\n$1\\n\\n$1")$/;"	v	class:MultilineTabStopSimpleMirrorMultiline_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ObenVorne $1 ObenHinten\\nVorne $1 Hinten")$/;"	v	class:TextTabStopAllSurrounded_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "Vorne $1 Hinten\\n$1")$/;"	v	class:TextTabStopTextSurroundedTab_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "Vorne $1\\n$1")$/;"	v	class:TextTabStopTextBeforeTab_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha $1 ${2:$1.h $1.c}\\ntest $1")$/;"	v	class:TabstopWithMirrorInDefaultTwiceAndExtra_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha $1 ${2:$1.h}")$/;"	v	class:TabstopWithMirrorInDefaultOverwrite_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha $1 ${2:$1}")$/;"	v	class:TabstopWithMirrorInDefaultNoOverwrite1_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha $1 ${2:$1}")$/;"	v	class:TabstopWithMirrorInDefaultOverwrite1_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha $1 ${2:snip} ${3:$1.h $2}")$/;"	v	class:TabstopWithMirrorInDefaultMultipleLeave_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha $1 ${2:snip} ${3:$1.h $2}")$/;"	v	class:TabstopWithMirrorInDefaultMultipleOverwrite_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha $5 ${1:blub} $4 $0 ${2:$1.h} $1 $3 ${4:More}")$/;"	v	class:TabstopWithMirrorManyFromAll_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha ${1:blub} ${2:$1.h}")$/;"	v	class:TabstopWithMirrorInDefaultNoType_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha ${1:blub} ${2:$1}")$/;"	v	class:TabstopWithMirrorInDefaultNoType1_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha ${1:default value} $1\\nanother: $1 mirror")$/;"	v	class:SimpleTabstopWithDefaultComplexKeep_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha ${1:default value} $1\\nanother: $1 mirror")$/;"	v	class:SimpleTabstopWithDefaultComplexType_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha ${1:defa}\\n$1")$/;"	v	class:SimpleTabstopWithDefaultSimpelKeep_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha ${1:defa}\\n$1")$/;"	v	class:SimpleTabstopWithDefaultSimpelType_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ($/;"	v	class:MirrorRealLifeExample_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = (("test", "$1$1 "), ("outer", "$1"))$/;"	v	class:SimpleMirrorSameLineNoSpaceInsideOtherSpaceAfter_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = (("test", "$1$1"), ("outer", "$1"))$/;"	v	class:SimpleMirrorSameLineNoSpaceInsideOther_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Movement.py	/^    snippets = ("<trh", "<tr>\\n\\t<th>$1<\/th>\\n\\t$2\\n<\/tr>\\n$3")$/;"	v	class:CursorMovement_BS_InEditMode
snippets	plugged/ultisnips/test/test_Movement.py	/^    snippets = ("test", "${1:Hi}\\n${2:blub}")$/;"	v	class:IMMoving_ExitWhenOutsideAbove_ECR
snippets	plugged/ultisnips/test/test_Movement.py	/^    snippets = ("test", "${1:Hi}\\n${2:blub}")$/;"	v	class:IMMoving_ExitWhenOutsideBelow_ECR
snippets	plugged/ultisnips/test/test_Movement.py	/^    snippets = ("test", "${1:Some}")$/;"	v	class:IMMoving_CursorsKeys_ECR
snippets	plugged/ultisnips/test/test_Movement.py	/^    snippets = ("test", r"$1 ${1:a tab}")$/;"	v	class:CursorMovement_Multiline_ECR
snippets	plugged/ultisnips/test/test_Movement.py	/^    snippets = ("test", r"$1 ${1:a tab}")$/;"	v	class:IMMoving_AcceptInputWhenMoved_ECR
snippets	plugged/ultisnips/test/test_Movement.py	/^    snippets = ("test", r"$1 ${2:a tab} ${1:Tab}")$/;"	v	class:IMMoving_NoExitingEventAtEnd_ECR
snippets	plugged/ultisnips/test/test_Movement.py	/^    snippets = ("test", r"$1 ${2:a tab} ${1:Tab}")$/;"	v	class:IMMoving_NoExiting_ECR
snippets	plugged/ultisnips/test/test_Movement.py	/^    snippets = ("test", r"$1 ${2:blub} ${1:Tab}")$/;"	v	class:IMMoving_ExitWhenOutsideRight_ECR
snippets	plugged/ultisnips/test/test_Movement.py	/^    snippets = ("test", r"${1:Hi} ${2:blub}")$/;"	v	class:IMMoving_ExitWhenOutsideLeft_ECR
snippets	plugged/ultisnips/test/test_Movement.py	/^    snippets = ("test", r"${1:Hi} ${2:blub}")$/;"	v	class:IMMoving_NotExitingWhenBarelyOutsideLeft_ECR
snippets	plugged/ultisnips/test/test_MultipleMatches.py	/^    snippets = ($/;"	v	class:Multiple_ManySnippetsOneTrigger_ECR
snippets	plugged/ultisnips/test/test_MultipleMatches.py	/^    snippets = ($/;"	v	class:_MultipleMatches
snippets	plugged/ultisnips/test/test_Plugin.py	/^    snippets = ("long", "Hello", "", "w")$/;"	v	class:Plugin_SuperTab_SimpleTest
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ("m", "M START\\n    $0\\nM END")$/;"	v	class:RecTabStops_InNewlineMultilineWithIndent_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ("m", "M START\\n    $1\\nM END -> $0")$/;"	v	class:RecTabStops_InNewlineMultilineWithNonZeroTS_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ("m", "M START\\n$0\\nM END")$/;"	v	class:RecTabStops_InNewlineManualIndentTextInFront_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ("m", "M START\\n$0\\nM END")$/;"	v	class:RecTabStops_InNewlineManualIndent_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ("m", "M START\\n$0\\nM END")$/;"	v	class:RecTabStops_InNewlineMultiline_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ("m", "[ ${1:first}  ${2:sec} ]")$/;"	v	class:RecTabStops_InNewlineInTabstopNotAtBeginOfLine_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ("m", "[ ${1:first}  ${2:sec} ]")$/;"	v	class:RecTabStops_InNewlineInTabstop_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ("m", "[ ${1:first}  ${2:sec} ]")$/;"	v	class:RecTabStops_NotAtBeginningOfTS_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ("m", "[ ${1:first}  ${2:sec} ]")$/;"	v	class:RecTabStops_SimpleCaseLeaveFirstSecond_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ("m", "[ ${1:first}  ${2:sec} ]")$/;"	v	class:RecTabStops_SimpleCaseLeaveSecondSecond_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ("m", "[ ${1:first}  ${2:sec} ]")$/;"	v	class:RecTabStops_SimpleCase_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ($/;"	v	class:RecTabStops_MirroredZeroTS_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ($/;"	v	class:RecTabsStops_TypeInZero_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", "A $0 B $1"), ("m1", "C $1 D $0 E"))$/;"	v	class:RecTabStops_ExpandedInZeroTSSecondTime_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", "A $0 B $1"), ("m1", "C $1 D $0 E"))$/;"	v	class:RecTabStops_ExpandedInZeroTSTwice_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", "A $0 B $1"), ("m1", "C $1 D $0 E"))$/;"	v	class:RecTabStops_ExpandedInZeroTS_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", "A $0 B"), ("m1", "C $1 D $0 E"))$/;"	v	class:RecTabStops_OuterOnlyWithZeroTS_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", "A $0 B"), ("m1", "C $1 D $0 E"))$/;"	v	class:RecTabStops_OuterOnlyWithZero_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", "[ $1 $2 ] $1"), ("m1", "ASnip $1 ASnip $2 ASnip"))$/;"	v	class:RecTabStops_MirrorInnerSnippet_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", "[ ${1:first} ${2:sec} ]"),)$/;"	v	class:RecTabStops_BarelyNotLeavingInner_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", "[ ${1:first} ${2:sec} ]"),)$/;"	v	class:RecTabStops_LeavingInnerInnerTwo_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", "[ ${1:first} ${2:sec} ]"),)$/;"	v	class:RecTabStops_LeavingInnerInner_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", "[ ${1:first} ${2:sec} ]"),)$/;"	v	class:RecTabStops_LeavingInner_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", r"${1:one}${0:explicit zero}${2:two}", "snip", "i"),)$/;"	v	class:RecTabsStops_BackspaceZero_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", r"_${0:explicit zero}", "snip", "i"),)$/;"	v	class:RecTabsStops_TypeInZero2_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m1", "JST"), ("m", "[ ${1:first}  ${2:sec} ]"))$/;"	v	class:RecTabStops_InnerWOTabStopTwiceDirectly_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m1", "JST"), ("m", "[ ${1:first}  ${2:sec} ]"))$/;"	v	class:RecTabStops_InnerWOTabStopTwice_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m1", "Just some Text"), ("m", "[ ${1:first}  ${2:sec} ]"))$/;"	v	class:RecTabStops_InnerWOTabStop_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m1", "[ ${1:first} $0 ${2:sec} ]"), ("m", "[ ${1:first} ${2:sec} ]"))$/;"	v	class:RecTabStops_ZeroTSisNothingSpecial_ECR
snippets	plugged/ultisnips/test/test_Selection.py	/^    snippets = ("test", "${1:World}")$/;"	v	class:_SelectModeMappings
snippets	plugged/ultisnips/test/test_Selection.py	/^    snippets = ("test", "h${1:blah}w $1")$/;"	v	class:ExclusiveSelection_SimpleTabstop_Test
snippets	plugged/ultisnips/test/test_Selection.py	/^    snippets = ("test", "h${1:blah}w $1")$/;"	v	class:OldSelection_SimpleTabstop_Test
snippets	plugged/ultisnips/test/test_Selection.py	/^    snippets = ($/;"	v	class:ExclusiveSelection_RealWorldCase_Test
snippets	plugged/ultisnips/test/test_Selection.py	/^    snippets = ($/;"	v	class:OldSelection_RealWorldCase_Test
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("((?<=\\W)|^)(\\.)", "self.", "", "r")$/;"	v	class:_Regex_Self
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("(.*test)", "Expand me!", "", "r")$/;"	v	class:SnippetOptions_Regex_SameLine_Long_Start
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("(test *)+", "Expand me!", "", "r")$/;"	v	class:SnippetOptions_Regex_Multiple
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("(test)", "Expand me!", "", "r")$/;"	v	class:SnippetOptions_Regex_Expand
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("(test)", "Expand me!", "", "r")$/;"	v	class:SnippetOptions_Regex_SameLine_Simple
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("(test.*)", "Expand me!", "", "r")$/;"	v	class:SnippetOptions_Regex_SameLine_Long_End
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("test ", "Expand me!", "", "r")$/;"	v	class:SnippetOptions_Regex_WithSpace
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("test it", "Expand me!", "", "b")$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_DontExpand
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("test it", "Expand me!", "", "b")$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("test it", "Expand me!", "", "b")$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand2
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("test me", "Expand me!")$/;"	v	class:MultiWordSnippet_Simple
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("test", "Expand me!", "", "b")$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_DontExpand
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("test", "Expand me!", "", "b")$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_Expand
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("test", "Expand me!", "", "b")$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_Expand2
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("test", "\\t\\tExpand\\tme!\\t", "", "t")$/;"	v	class:_No_Tab_Expand
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ($/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ($/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ($/;"	v	class:SnippetOptions_Regex_PythonBlockMatch
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ($/;"	v	class:_TabExpand_RealWorld
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (("test it", "Expand me!", "", "i"),)$/;"	v	class:MultiWord_SnippetOptions_ExpandInwordSnippets_ExpandSingle
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (("test it", "Expand me!", "", "i"),)$/;"	v	class:MultiWord_SnippetOptions_ExpandInwordSnippets_SimpleExpand
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (("test it", "Expand me!", "", "w"),)$/;"	v	class:_MultiWord_SnippetOptions_ExpandWordSnippets
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (("test", "Expand me!", "", "b"), ("test", "not at beginning", "", ""))$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (("test", "Expand me!", "", "b"), ("test", "not at beginning", "", ""))$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (("test", "Expand me!", "", "i"),)$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (("test", "Expand me!", "", "i"),)$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand2
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (("test", "Expand me!", "", "i"),)$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (("test", "Expand me!", "", "i"),)$/;"	v	class:SnippetOptions_ExpandInwordSnippets_ExpandSingle
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (("test", "Expand me!", "", "i"),)$/;"	v	class:SnippetOptions_ExpandInwordSnippets_SimpleExpand
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (("test", "Expand me!", "", "w"),)$/;"	v	class:_SnippetOptions_ExpandWordSnippets
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (r"cabfed", r"""`!p snip.rv =  match or "No match"`""")$/;"	v	class:SnippetOptions_Regex_PythonBlockNoMatch
snippets	plugged/ultisnips/test/test_SnippetPriorities.py	/^    snippets = ($/;"	v	class:SnippetPriorities_DoNotCareAboutNonMatchings
snippets	plugged/ultisnips/test/test_SnippetPriorities.py	/^    snippets = ($/;"	v	class:SnippetPriorities_MultiWordTriggerOverwriteExisting
snippets	plugged/ultisnips/test/test_SnippetPriorities.py	/^    snippets = ($/;"	v	class:SnippetPriorities_OverwriteExisting
snippets	plugged/ultisnips/test/test_SnippetPriorities.py	/^    snippets = ($/;"	v	class:SnippetPriorities_OverwriteThenChoose_ECR
snippets	plugged/ultisnips/test/test_SnippetPriorities.py	/^    snippets = ($/;"	v	class:SnippetPriorities_OverwriteTwice_ECR
snippets	plugged/ultisnips/test/test_SnippetPriorities.py	/^    snippets = (("test", "We do not overwrite", "Overwrite the two", "", -1),)$/;"	v	class:SnippetPriorities_FileHasHigherThanAdded
snippets	plugged/ultisnips/test/test_SnippetPriorities.py	/^    snippets = (("test", "We overwrite", "Overwrite the two", "", -5),)$/;"	v	class:SnippetPriorities_FileHasHigherThanAdded_neg_prio
snippets	plugged/ultisnips/test/test_SnippetPriorities.py	/^    snippets = (("test", "We overwrite", "Overwrite the two", "", 1),)$/;"	v	class:SnippetPriorities_AddedHasHigherThanFile
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("echo", "$0 run")$/;"	v	class:TabStop_Exit_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("echo", "echo ${1:Hallo}")$/;"	v	class:TabStopNoReplace_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "Hallo ${1:WELT} ups")$/;"	v	class:TabStopNavigatingInInsertModeSimple_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "hallo $0 $1")$/;"	v	class:TabStopTestJumpingDontJumpToEndIfThereIsTabZero_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "hallo $0 a small feed")$/;"	v	class:TabStopSimpleReplaceSurrounded1_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "hallo $0\\nnice $1 work\\n$3 $2\\nSeem to work")$/;"	v	class:TabStopTestMultilineExpand_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "hallo $2 $1")$/;"	v	class:TabStopTestBackwardJumping2_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "hallo $2 $1")$/;"	v	class:TabStopTestJumping2_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "hallo ${0:End} ${1:Beginning}")$/;"	v	class:TabStopSimpleReplace_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "hallo ${0:End} a small feed")$/;"	v	class:TabStopSimpleReplaceSurrounded_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "hallo ${1:End} ${0:Beginning}")$/;"	v	class:TabStopSimpleReplaceReversed_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "hallo ${2:End} mitte ${1:Beginning}")$/;"	v	class:TabStopTestJumping_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "hallo ${2:End} mitte${1:Beginning}")$/;"	v	class:TabStopTestBackwardJumping_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "nothing ${1:i} hups")$/;"	v	class:TabStopWithOneChar_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", """<div${1: id="${2:some_id}"}>\\n  $0\\n<\/div>""")$/;"	v	class:TabStop_TSInDefaultTextRLExample_DeleteFirst
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", """<div${1: id="${2:some_id}"}>\\n  $0\\n<\/div>""")$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteFirst_NoJumpBack
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", """<div${1: id="${2:some_id}"}>\\n  $0\\n<\/div>""")$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteNone_ECR
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", """<div${1: id="${2:some_id}"}>\\n  $0\\n<\/div>""")$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteSecond
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", """<div${1: id="${2:some_id}"}>\\n  $3  $0\\n<\/div>""")$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteFirstJumpBack
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", """<div${1: id="${2:some_id}"}>\\n  $3 $0\\n<\/div>""")$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBack
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", """<div${1: id="${2:some_id}"}>\\n  $3 $0\\n<\/div>""")$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBackTwice
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", """h${1:a$2b}l""")$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteFirst
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", """h${1:a$2b}l""")$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecond
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", """h${1:a$2b}l""")$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward0
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", """h${1:a$2b}l""")$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward1
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", """h${1:a$2b}l""")$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackOverwrite
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "$1: ${1:'${2:second}'} $2")$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_Overwrite1
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "$1: ${1:'${2:second}'} $2")$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond1
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "$2: ${2:'${1:second}'} $1")$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteFirstSwitchNumbers
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "[ $1$2 ] $1")$/;"	v	class:TabStop_AdjacentTabStopAddText_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "\\\\${1:literal}")$/;"	v	class:TabStop_EscapingCharsDollars_BeginningOfDefinitionText
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "\\n\\\\${1:literal}")$/;"	v	class:TabStop_EscapingCharsDollars_BeginningOfLine
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "each_byte { |${1:byte}| $0 }")$/;"	v	class:TabStopTestJumpingRLExampleWithZeroTab_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "hi $1 $2 ${1:first line\\nsecond line} ${2:Hi} world")$/;"	v	class:TabStop_Multiline_DelFirstOverwriteSecond_Overwrite
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "hi $1 ${1:first line\\nsecond line} world")$/;"	v	class:TabStop_Multiline_MirrorInFront_Leave
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "hi $1 ${1:first line\\nsecond line} world")$/;"	v	class:TabStop_Multiline_MirrorInFront_Overwrite
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "hi ${1:first line\\nsecond line} world")$/;"	v	class:TabStop_Multiline_Leave
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "hi ${1:first line\\nsecond line} world")$/;"	v	class:TabStop_Multiline_Overwrite
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "hi ${1:this ${2:second ${3:third}}} $4")$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpAround
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "hi ${1:this ${2:second ${3:third}}} $4")$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpBackToOther
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "hi ${1:this ${2:second ${3:third}}} $4")$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpToThird
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "hi ${1:this ${2:second}} $2")$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_DoNothing
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "hi ${1:this ${2:second}} $2")$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_Overwrite0
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "hi ${1:this ${2:second}} $2")$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "snip $1")$/;"	v	class:TabStopEscapingWhenSelectedNoCharTS_ECR
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "snip ${1:default}")$/;"	v	class:TabStopEscapingWhenSelected_ECR
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "snip ${1:i}")$/;"	v	class:TabStopEscapingWhenSelectedSingleCharTS_ECR
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "t$1t${2: }t{\\n\\t$0\\n}")$/;"	v	class:TabStop_CROnlyOnSelectedNear
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", r":latex:\\`$1\\`$0")$/;"	v	class:TabStopSimpleReplaceZeroLengthTabstops_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", r"These are two backslashes \\\\\\\\ done")$/;"	v	class:TabStop_EscapingChars_Backslash3
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", r"This \\ is a backslash!")$/;"	v	class:TabStop_EscapingChars_Backslash
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", r"This is a backslash \\\\ done")$/;"	v	class:TabStop_EscapingChars_Backslash2
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", r"\\\\$1{$2}")$/;"	v	class:TabStop_EscapingChars_Backslash4
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", r"a\\${1:literal}")$/;"	v	class:TabStop_EscapingCharsDollars1
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", r"snip \\$0 $$0 end")$/;"	v	class:TabStop_EscapingCharsDollars
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", r"snip \\` literal")$/;"	v	class:TabStop_EscapingCharsBackticks
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", r"usage: \\`basename \\$0\\` ${1:args}")$/;"	v	class:TabStop_EscapingChars_RealLife
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ($/;"	v	class:TabStop_TSInDefaultText_ZeroLengthZerothTabstop
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ($/;"	v	class:TabStop_TSInDefaultText_ZeroLengthZerothTabstop_Override
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ($/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteFirst_RLExample
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ($/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond_RLExample
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = "test", r"$1 ${1\/(aa)|.*\/(?1:yes:no\\\\)\/}"$/;"	v	class:Transformation_ConditionalWithBackslashBeforeDelimiter1
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = "test", r"$1 ${1\/(aa)|.*\/(?1:yes\\:no\\))\/}"$/;"	v	class:Transformation_ConditionalWithEscapedDelimiter
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = "test", r"$1 ${1\/(aa)|.*\/(?1:yes\\\\:no)\/}"$/;"	v	class:Transformation_ConditionalWithBackslashBeforeDelimiter
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = "test", r"$1 ${1\/.*\/\\L$0$0\\E\/}_"$/;"	v	class:Transformation_TestKill_InsertAfter_NoKill
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = "test", r"$1 ${1\/.*\/\\L$0$0\\E\/}_"$/;"	v	class:Transformation_TestKill_InsertBefore_NoKill
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = "test", r"$1 ${1\/.*\/\\L$0$0\\E\/}_"$/;"	v	class:Transformation_TestKill_InsertBeginning_Kill
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = "test", r"$1 ${1\/.*\/\\L$0$0\\E\/}_"$/;"	v	class:Transformation_TestKill_InsertEnd_Kill
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("ascii", "$1 ${1\/(.*)\/$1\/a}")$/;"	v	class:Transformation_SimpleCaseAsciiResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("ascii", "$1 ${1\/(.*)\/\\L$1\\E\/a}")$/;"	v	class:Transformation_LowerCaseAsciiResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "$1 ${1\/(.)\/\\\\u$1\/}")$/;"	v	class:Transformation_CleverTransformUpercaseChar_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "$1 ${1\/(.*)\/\\L$1\\E\/}")$/;"	v	class:Transformation_CleverTransformLongLower_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "$1 ${1\/(.*)\/\\\\U$1\\E\/}")$/;"	v	class:Transformation_CleverTransformLongUpper_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "$1 ${1\/(.*)\/\\l$1\/}")$/;"	v	class:Transformation_CleverTransformLowercaseChar_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "$1 ${1\/(?:(^a)|(^b)).*\/(?1:yes:no)\/}")$/;"	v	class:Transformation_CIBothDefinedNegative_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "$1 ${1\/(?:(^a)|(^b)).*\/(?1:yes:no)\/}")$/;"	v	class:Transformation_CIBothDefinedPositive_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "$1 ${1\/([ab])oo\/$1ull\/}")$/;"	v	class:Transformation_Backreference_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "$1 ${1\/(^a).*\/(?0:began with an a)\/}")$/;"	v	class:Transformation_ConditionalInsertionSimple_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "$1 ${1\/foo\/batzl\/}")$/;"	v	class:Transformation_SimpleCaseNoTransform_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "$1 ${1\/foo\/batzl\/}")$/;"	v	class:Transformation_SimpleCase_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "${1:Some Text}${1\/.+\/\\\\U$0\\E\/}\\n${1\/.+\/\\L$0\\E\/}")$/;"	v	class:Transformation_MultipleTransformations_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "${1\/.+\/is something\/}${1:some}")$/;"	v	class:Transformation_TabIsAtEndAndDeleted1_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "${1\/.+\/is something\/}${1:some}")$/;"	v	class:Transformation_TabIsAtEndAndDeleted_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "${1\/.+\/is something\/}${1}")$/;"	v	class:Transformation_TabIsAtEndNoTextLeave_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "${1\/.+\/is something\/}${1}")$/;"	v	class:Transformation_TabIsAtEndNoTextType_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "${1\/foo\/batzl\/} $1")$/;"	v	class:Transformation_SimpleCaseTransformInFront_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "${1\/foo\/batzl\/} ${1:replace me}")$/;"	v	class:Transformation_SimpleCaseTransformInFrontDefVal_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "snip ${1\/.+\/(?0:matched)\/} ${1:default}")$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueTypeSomethingThen_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "snip ${1\/.+\/(?0:matched)\/} ${1:default}")$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValue_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"$1 ${1\/(\\w+(?:\\W+\\w+){,7})\\W*(.+)?\/$1(?2:...)\/}")$/;"	v	class:Transformation_ConditionalInsertRWEllipsis_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"$1 ${1\/(dead) (par[^ ]*)\/this $2 is a bit $1\/}")$/;"	v	class:Transformation_BackreferenceTwice_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"$1 ${1\/, *\/, \/g}")$/;"	v	class:Transformation_OptionReplaceGlobalMatchInReplace_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"$1 ${1\/, *\/-\/g}")$/;"	v	class:Transformation_OptionReplaceGlobal_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"$1 ${1\/, *\/\\n\/}")$/;"	v	class:Transformation_CINewlines_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"$1 ${1\/, *\/\\t\/}")$/;"	v	class:Transformation_CITabstop_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"$1 ${1\/^.*?(-)?(>)?$\/(?2::(?1:>:.))\/}")$/;"	v	class:Transformation_ConditionalInConditional_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"$1 ${1\/hal((?:lo)|(?:ul))\/(?1:ha\\($1\\))\/}")$/;"	v	class:Transformation_CIEscapedParensinReplace_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"$1 ${1\/test\/blah\/i}")$/;"	v	class:Transformation_OptionIgnoreCase_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"$1 ${2:${1\/.+\/(?0:defined $0)\/}}")$/;"	v	class:Transformation_InsideTabLeaveAtDefault_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"$1 ${2:${1\/.+\/(?0:defined $0)\/}}")$/;"	v	class:Transformation_InsideTabOvertype_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"${VISUAL\/^\/* \/mg}")$/;"	v	class:Transformation_OptionMultiline_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ($/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueInFirstTab_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ($/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueInSecondTab_ECR
snippets	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    snippets = ("te'stâ", "abc123ά", "123êabc")$/;"	v	class:VerifyVimDict3
snippets	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    snippets = ("testâ", "abc123ά", "123'êabc")$/;"	v	class:VerifyVimDict1
snippets	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    snippets = ($/;"	v	class:TestLangmapWithUtf8_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    snippets = ($/;"	v	class:TestNonEmptyLangmapWithSemi_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    snippets = ($/;"	v	class:TestNonEmptyLangmap_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    snippets = ('te"stâ', "abc123ά", "123êabc")$/;"	v	class:VerifyVimDict2
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("if", "if {\\n\\t${VISUAL}$0\\n}")$/;"	v	class:Visual_LineSelect_DedentLine
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "beg\\n\\t${0:${VISUAL}}\\nend")$/;"	v	class:Visual_LineSelect_CheckIndentWithTS_NoOverwrite
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "beg\\n\\t${VISUAL}\\n\\t${1:here_we_go}\\nend")$/;"	v	class:Visual_LineSelect_WithTabStop
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "beg\\n\\t${VISUAL}\\nend")$/;"	v	class:Visual_LineSelect_CheckIndentSimple
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "beg\\n\\t${VISUAL}\\nend")$/;"	v	class:Visual_LineSelect_CheckIndentTwice
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${1:${VISUAL}}b")$/;"	v	class:Visual_InDefaultText_SelectOneWord
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${1:${VISUAL}}b")$/;"	v	class:Visual_InDefaultText_SelectOneWord_NoOverwrite
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${1:bef${VISUAL}aft}b")$/;"	v	class:Visual_InDefaultText_LineSelect_NoOverwrite
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${1:bef${VISUAL}aft}b")$/;"	v	class:Visual_InDefaultText_LineSelect_Overwrite
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${1:beforea${VISUAL}aft}b")$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${1:beforea${VISUAL}aft}b")$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_Overwrite
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${1:beforeaaa${VISUAL}aft}b")$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite1
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${2:ahh}${VISUAL}${1:ups}b", "Description", "i")$/;"	v	class:Visual_SelectOneWordWithTabstop_TillEndOfLine
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL:world}b")$/;"	v	class:VisualWithDefault_ExpandWithVisual
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL:world}b")$/;"	v	class:VisualWithDefault_ExpandWithoutVisual
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL}b")$/;"	v	class:Visual_CrossOneLine
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL}b")$/;"	v	class:Visual_ExpandTwice
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL}b")$/;"	v	class:Visual_LineSelect_Simple
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL}b")$/;"	v	class:Visual_NoVisualSelection_Ignore
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL}b")$/;"	v	class:Visual_SelectOneWord
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL}b", "", "i")$/;"	v	class:Visual_SelectOneWordExclusive
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL}b", "", "i")$/;"	v	class:Visual_SelectOneWordInclusive
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL}b", "", "i")$/;"	v	class:Visual_SelectOneWord_ProblemAfterTab
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL}b", "Description", "i")$/;"	v	class:Visual_SelectOneWord_Inword
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL}b", "Description", "i")$/;"	v	class:Visual_SelectOneWord_TillEndOfLine
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL}b${VISUAL}a")$/;"	v	class:Visual_SelectOneWord_TwiceVisual
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "hello\\n\\t ${1:${VISUAL}}\\nend")$/;"	v	class:Visual_InDefaultText_IndentBeforeTabstop_NoOverwrite
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", r"h${1:bef${VISUAL\/.\/\\U$0\\E\/g}aft}b")$/;"	v	class:VisualTransformation_InDefaultText_LineSelect_NoOverwrite
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", r"h${1:bef${VISUAL\/.\/\\U$0\\E\/g}aft}b")$/;"	v	class:VisualTransformation_InDefaultText_LineSelect_Overwrite
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", r"h${VISUAL:\\\/\\\/ body}b")$/;"	v	class:VisualWithDefaultWithSlashes_ExpandWithoutVisual
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", r"h${VISUAL:world\/.\/\\U$0\\E\/g}b")$/;"	v	class:VisualTransformationWithDefault_ExpandWithVisual
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", r"h${VISUAL:world\/.\/\\U$0\\E\/g}b")$/;"	v	class:VisualTransformationWithDefault_ExpandWithoutVisual
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", r"h${VISUAL\/.\/\\U$0\\E\/g}b")$/;"	v	class:VisualTransformation_LineSelect_Simple
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", r"h${VISUAL\/.\/\\U$0\\E\/g}b")$/;"	v	class:VisualTransformation_SelectOneWord
snippets	plugged/ultisnips/test/vim_test_case.py	/^    snippets = ()$/;"	v	class:VimTestCase
snippets_in_current_scope	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def snippets_in_current_scope(self, search_all):$/;"	m	class:SnippetManager
solang	plugged/nvim-lspconfig/CONFIG.md	/^## solang$/;"	s	chapter:Configurations
solargraph	plugged/nvim-lspconfig/CONFIG.md	/^## solargraph$/;"	s	chapter:Configurations
sorbet	plugged/nvim-lspconfig/CONFIG.md	/^## sorbet$/;"	s	chapter:Configurations
sort_text	plugged/nvim-cmp/lua/cmp/config/compare.lua	/^compare.sort_text = function(entry1, entry2)$/;"	f	unknown:compare
sorted_map_table	plugged/nvim-lspconfig/scripts/docgen.lua	/^local function sorted_map_table(t, func)$/;"	f
sorting.comparators (type: function[])	plugged/nvim-cmp/README.md	/^#### sorting.comparators (type: function[])$/;"	t	chapter:Configuration options
sorting.priority_weight (type: number)	plugged/nvim-cmp/README.md	/^#### sorting.priority_weight (type: number)$/;"	t	chapter:Configuration options
source	plugged/nvim-cmp/lua/cmp/utils/spec.lua	/^    source = function()$/;"	f
sourcekit	plugged/nvim-lspconfig/CONFIG.md	/^## sourcekit$/;"	s	chapter:Configurations
sources (type: table<cmp.SourceConfig>)	plugged/nvim-cmp/README.md	/^#### sources (type: table<cmp.SourceConfig>)$/;"	t	chapter:Configuration options
sources[number].keyword_length (type: number)	plugged/nvim-cmp/README.md	/^#### sources[number].keyword_length (type: number)$/;"	t	chapter:Configuration options
sources[number].keyword_pattern (type: string)	plugged/nvim-cmp/README.md	/^#### sources[number].keyword_pattern (type: string)$/;"	t	chapter:Configuration options
sources[number].max_item_count (type: number)	plugged/nvim-cmp/README.md	/^#### sources[number].max_item_count (type: number)$/;"	t	chapter:Configuration options
sources[number].name (type: string)	plugged/nvim-cmp/README.md	/^#### sources[number].name (type: string)$/;"	t	chapter:Configuration options
sources[number].opts (type: table)	plugged/nvim-cmp/README.md	/^#### sources[number].opts (type: table)$/;"	t	chapter:Configuration options
sources[number].priority (type: number|nil)	plugged/nvim-cmp/README.md	/^#### sources[number].priority (type: number|nil)$/;"	t	chapter:Configuration options
sources_by_name[name]	plugged/nvim-cmp/lua/cmp/core.lua	/^  self.sources_by_name[name] = vim.tbl_filter(function(s)$/;"	f	unknown:self
space_before_function_paren	plugged/vim-snippets/pythonx/javascript_snippets.py	/^def space_before_function_paren(snip):$/;"	f
spaces_to_indent	plugged/ultisnips/pythonx/UltiSnips/indent_util.py	/^    def spaces_to_indent(self, indent):$/;"	m	class:IndentUtil
sparql	plugged/nvim-treesitter/lockfile.json	/^  "sparql": {$/;"	o
specifier:	plugged/nvim-treesitter/queries/commonlisp/highlights.scm	/^  specifier: (sym_lit) @symbol)$/;"	f
split	plugged/nvim-treesitter/lua/nvim-treesitter/query.lua	/^  local function split(string)$/;"	f
split_at_whitespace	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^def split_at_whitespace(string):$/;"	f
sqlls	plugged/nvim-lspconfig/CONFIG.md	/^## sqlls$/;"	s	chapter:Configurations
sqls	plugged/nvim-lspconfig/CONFIG.md	/^## sqls$/;"	s	chapter:Configurations
start	plugged/nvim-treesitter/lua/nvim-treesitter/tsrange.lua	/^function TSRange:start()$/;"	f	unknown:TSRange
start	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def start(self):$/;"	m	class:TextObject
starts_here	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:ChoicesToken
starts_here	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:MirrorToken
starts_here	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:PythonCodeToken
starts_here	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:ShellCodeToken
starts_here	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:TabStopToken
starts_here	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:TransformationToken
starts_here	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:VimLCodeToken
starts_here	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:VisualToken
starts_here	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def starts_here(cls, stream, chars=r"{}\\$`"):$/;"	m	class:EscapeCharToken
state	plugged/nvim-cmp/lua/cmp/utils/spec.lua	/^spec.state = function(text, row, col)$/;"	f	unknown:spec
status	plugged/nvim-cmp/lua/cmp/init.lua	/^cmp.status = function()$/;"	f	unknown:cmp
statusline	plugged/nvim-treesitter/lua/nvim-treesitter.lua	/^function M.statusline(opts)$/;"	f	unknown:M
steps	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    steps = ($/;"	v	class:MovePosition_DelSecondLine1
steps	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    steps = ($/;"	v	class:MovePosition_InsSameLine1
steps	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    steps = (((0, 1), (0, -8), (0, 1)), ((0, 1), (0, 1), (0, 2)))$/;"	v	class:MovePosition_DelSameLine
steps	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    steps = (((0, 12), (0, -4), (1, 0)), ((0, 12), (-1, 0), (0, 12)))$/;"	v	class:MovePosition_DelSecondLine
steps	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    steps = (((0, 3), (0, 3), (0, 12)),)$/;"	v	class:MovePosition_InsSameLine2
steps	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    steps = (((0, 4), (0, -3), (0, 3)), ((0, 8), (0, -1), (0, 3)))$/;"	v	class:MovePosition_DelSameLine1
stop	plugged/nvim-cmp/lua/cmp/utils/async.lua	/^    stop = function()$/;"	f
store	plugged/LuaSnip/lua/luasnip/nodes/choiceNode.lua	/^function ChoiceNode:store()$/;"	f	unknown:ChoiceNode
store	plugged/LuaSnip/lua/luasnip/nodes/dynamicNode.lua	/^function DynamicNode:store()$/;"	f	unknown:DynamicNode
store	plugged/LuaSnip/lua/luasnip/nodes/node.lua	/^function Node:store()$/;"	f	unknown:Node
store	plugged/LuaSnip/lua/luasnip/nodes/snippet.lua	/^function Snippet:store()$/;"	f	unknown:Snippet
store_selection	plugged/LuaSnip/lua/luasnip/util/util.lua	/^local function store_selection()$/;"	f
store_snippet_docstrings	plugged/LuaSnip/lua/luasnip/init.lua	/^local function store_snippet_docstrings(snippet_table)$/;"	f
strikethrough	plugged/nvim-cmp/lua/cmp/utils/str.lua	/^str.strikethrough = function(text)$/;"	f	unknown:str
string_wrap	plugged/LuaSnip/lua/luasnip/util/util.lua	/^local function string_wrap(lines, pos)$/;"	f
style bg	plugged/neodark.vim/tmuxcolors.conf	/^set -g message-style bg=colour235,fg=red$/;"	k
style bg	plugged/neodark.vim/tmuxcolors.conf	/^set -g status-style bg=colour235,fg=colour6$/;"	k
style bg	plugged/neodark.vim/tmuxcolors.conf	/^setw -g mode-style bg=colour11,fg=colour13,bold$/;"	k
style bg	plugged/neodark.vim/tmuxcolors.conf	/^setw -g window-status-current-style bg=default,fg=red$/;"	k
style bg	plugged/neodark.vim/tmuxcolors.conf	/^setw -g window-status-style bg=default,fg=colour15$/;"	k
style fg	plugged/neodark.vim/tmuxcolors.conf	/^set -g pane-active-border-style fg=green$/;"	k
style fg	plugged/neodark.vim/tmuxcolors.conf	/^set -g pane-border-style fg=colour8$/;"	k
style-lint	plugged/nvim-lspconfig/Makefile	/^style-lint:$/;"	t
stylelint_lsp	plugged/nvim-lspconfig/CONFIG.md	/^## stylelint_lsp$/;"	s	chapter:Configurations
sub_regexp	plugged/vim-nerdtree-syntax-highlight/after/syntax/nerdtree.vim	/^  let sub_regexp = substitute(key, '\\v\\\\@<!\\.', s:chars_double_lashes, 'g')$/;"	v
subs	plugged/LuaSnip/lua/luasnip/util/environ.lua	/^	local function subs(c)$/;"	f
subscribe	plugged/nvim-cmp/lua/cmp/utils/autocmd.lua	/^autocmd.subscribe = function(event, callback)$/;"	f	unknown:autocmd
subsnip_init	plugged/LuaSnip/lua/luasnip/nodes/choiceNode.lua	/^function ChoiceNode:subsnip_init()$/;"	f	unknown:ChoiceNode
subsnip_init	plugged/LuaSnip/lua/luasnip/nodes/node.lua	/^function Node:subsnip_init() end$/;"	f	unknown:Node
subsnip_init	plugged/LuaSnip/lua/luasnip/nodes/snippet.lua	/^function Snippet:subsnip_init()$/;"	f	unknown:Snippet
suffix	plugged/vim-nerdtree-syntax-highlight/after/syntax/nerdtree.vim	/^  let suffix = substitute(key, '\\W', '', 'g')$/;"	v
sumneko_lua	plugged/nvim-lspconfig/CONFIG.md	/^## sumneko_lua$/;"	s	chapter:Configurations
supercollider	plugged/nvim-treesitter/lockfile.json	/^  "supercollider": {$/;"	o
surface	plugged/nvim-treesitter/lockfile.json	/^  "surface": {$/;"	o
suspend	plugged/nvim-cmp/lua/cmp/core.lua	/^core.suspend = function(self)$/;"	f	unknown:core
suspend_proxy_edits	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^def suspend_proxy_edits():$/;"	f
svelte	plugged/nvim-lspconfig/CONFIG.md	/^## svelte$/;"	s	chapter:Configurations
svelte	plugged/nvim-treesitter/lockfile.json	/^  "svelte": {$/;"	o
svls	plugged/nvim-lspconfig/CONFIG.md	/^## svls$/;"	s	chapter:Configurations
swap_nodes	plugged/nvim-treesitter/lua/nvim-treesitter/ts_utils.lua	/^function M.swap_nodes(node_or_range1, node_or_range2, bufnr, cursor_to_second)$/;"	f	unknown:M
swift	plugged/nvim-treesitter/lockfile.json	/^  "swift": {$/;"	o
switch_source_header	plugged/nvim-lspconfig/lua/lspconfig/clangd.lua	/^local function switch_source_header(bufnr)$/;"	f
symbol	plugged/nvim-treesitter/lua/nvim-treesitter/tsrange.lua	/^function TSRange:symbol()$/;"	f	unknown:TSRange
sync	plugged/nvim-cmp/lua/cmp/utils/async.lua	/^async.sync = function(runner, timeout)$/;"	f	unknown:async
t	plugged/nvim-cmp/lua/cmp/utils/keymap.lua	/^keymap.t = function(keys)$/;"	f	unknown:keymap
tab_stops[pos]	plugged/LuaSnip/lua/luasnip/util/parser.lua	/^					tab_stops[pos] = dNode.D(pos, function(_, runtime_snip)$/;"	f
tab_width	plugged/LuaSnip/lua/luasnip/util/util.lua	/^local function tab_width()$/;"	f
tail	plugged/LuaSnip/lua/luasnip/extras/_lambda.lua	/^function lambda.tail(ls)$/;"	f	unknown:lambda
tailwindcss	plugged/nvim-lspconfig/CONFIG.md	/^## tailwindcss$/;"	s	chapter:Configurations
taplo	plugged/nvim-lspconfig/CONFIG.md	/^## taplo$/;"	s	chapter:Configurations
target_entries	plugged/nvim-cmp/lua/cmp/source.lua	/^  local target_entries = (function()$/;"	f
teal	plugged/nvim-treesitter/lockfile.json	/^  "teal": {$/;"	o
tearDown	plugged/ultisnips/test/vim_test_case.py	/^    def tearDown(self):$/;"	m	class:VimTestCase
template	plugged/nvim-lspconfig/scripts/docgen.lua	/^local function template(s, params)$/;"	f
terraformls	plugged/nvim-lspconfig/CONFIG.md	/^## terraformls$/;"	s	chapter:Configurations
test	plugged/LuaSnip/Makefile	/^test: plenary$/;"	t
test	plugged/nvim-cmp/Makefile	/^test:$/;"	t
test	plugged/nvim-lspconfig/Makefile	/^test:$/;"	t
test_is_in_node_range	plugged/nvim-treesitter/tests/unit/ts_utils_spec.lua	/^  local function test_is_in_node_range(line, col)$/;"	f
test_snipmate_format	plugged/vim-snippets/tests.sh	/^function test_snipmate_format {$/;"	f
test_space_indented	plugged/vim-snippets/tests.sh	/^function test_space_indented {$/;"	f
texlab	plugged/nvim-lspconfig/CONFIG.md	/^## texlab$/;"	s	chapter:Configurations
text	plugged/LuaSnip/lua/luasnip/nodes/node.lua	/^	local ok, text = pcall(function()$/;"	f
text	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def text(self):$/;"	m	class:VisualContentPreserver
text_after	plugged/ultisnips/test/test_Format.py	/^    text_after = ""$/;"	v	class:ProperIndenting_FirstLineInFile_ECR
text_after	plugged/ultisnips/test/vim_test_case.py	/^    text_after = "\\n\\n --- some text after --- "$/;"	v	class:VimTestCase
text_before	plugged/ultisnips/test/test_Format.py	/^    text_before = ""$/;"	v	class:ProperIndenting_FirstLineInFile_ECR
text_before	plugged/ultisnips/test/vim_test_case.py	/^    text_before = " --- some text before --- \\n\\n"$/;"	v	class:VimTestCase
text_only	plugged/LuaSnip/lua/luasnip/nodes/snippet.lua	/^function Snippet:text_only()$/;"	f	unknown:Snippet
tflint	plugged/nvim-lspconfig/CONFIG.md	/^## tflint$/;"	s	chapter:Configurations
theme_check	plugged/nvim-lspconfig/CONFIG.md	/^## theme_check$/;"	s	chapter:Configurations
throttle	plugged/nvim-cmp/lua/cmp/utils/async.lua	/^async.throttle = function(fn, timeout)$/;"	f	unknown:async
tick	plugged/nvim-lspconfig/scripts/docgen.lua	/^                        local function tick(s)$/;"	f
timeout	plugged/nvim-cmp/lua/cmp/utils/async.lua	/^async.timeout = function(fn, timeout)$/;"	f	unknown:async
tlaplus	plugged/nvim-treesitter/lockfile.json	/^  "tlaplus": {$/;"	o
tmux	plugged/neodark.vim/README.md	/^### tmux$/;"	S	chapter:neodark.vim
tmux	plugged/neodark.vim/README.md	/^### tmux$/;"	S	section:neodark.vim""Installation
to_args	plugged/nvim-cmp/lua/cmp/vim_source.lua	/^vim_source.to_args = function(args)$/;"	f	unknown:vim_source
to_func	plugged/nvim-treesitter/lua/nvim-treesitter/utils.lua	/^function M.to_func(a)$/;"	f	unknown:M
to_function	plugged/LuaSnip/lua/luasnip/extras/init.lua	/^local function to_function(val, use_re)$/;"	f
to_keymap	plugged/nvim-cmp/lua/cmp/utils/keymap.lua	/^keymap.to_keymap = function(s)$/;"	f	unknown:keymap
to_line_table	plugged/LuaSnip/lua/luasnip/util/util.lua	/^local function to_line_table(table_or_string)$/;"	f
to_lsp	plugged/nvim-cmp/lua/cmp/types/lsp.lua	/^lsp.Position.to_lsp = function(buf, position)$/;"	f	unknown:lsp.Position
to_lsp	plugged/nvim-cmp/lua/cmp/types/lsp.lua	/^lsp.Range.to_lsp = function(buf, range)$/;"	f	unknown:lsp.Range
to_string	plugged/LuaSnip/lua/luasnip/util/events.lua	/^	to_string = function(node_type, event_id)$/;"	f
to_upper	plugged/nvim-cmp/lua/cmp/utils/keymap.lua	/^keymap.to_upper = function(keys)$/;"	f	unknown:keymap
to_utfindex	plugged/nvim-cmp/lua/cmp/utils/misc.lua	/^misc.to_utfindex = function(text, vimindex)$/;"	f	unknown:misc
to_vim	plugged/nvim-cmp/lua/cmp/types/lsp.lua	/^lsp.Position.to_vim = function(buf, position)$/;"	f	unknown:lsp.Position
to_vim	plugged/nvim-cmp/lua/cmp/types/lsp.lua	/^lsp.Range.to_vim = function(buf, range)$/;"	f	unknown:lsp.Range
to_vim	plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^    def to_vim(self):$/;"	m	class:_VimCursor
to_vim_cursor	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def to_vim_cursor(self):$/;"	m	class:_SnippetUtilCursor
to_vimindex	plugged/nvim-cmp/lua/cmp/utils/misc.lua	/^misc.to_vimindex = function(text, utfindex)$/;"	f	unknown:misc
toggle_all	plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^local function toggle_all(mod)$/;"	f
toggle_document_highlight	lua/lsp.lua	/^function toggle_document_highlight()$/;"	f
toggle_module	plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^local function toggle_module(mod, bufnr, lang)$/;"	f
tokenize	plugged/LuaSnip/lua/luasnip/util/pattern_tokenizer.lua	/^	tokenize = function(pattern)$/;"	f
tokenize	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^def tokenize(text, indent, offset, allowed_tokens):$/;"	f
tokenize_snippet_text	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/base.py	/^def tokenize_snippet_text($/;"	f
toml	plugged/nvim-treesitter/lockfile.json	/^  "toml": {$/;"	o
transform	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^def transform(a, cmds):$/;"	f
transform_line	plugged/nvim-treesitter/lua/nvim-treesitter.lua	/^local transform_line = function(line)$/;"	f
traverse_parents	plugged/nvim-lspconfig/lua/lspconfig/util.lua	/^  local function traverse_parents(path, cb)$/;"	f
trigger	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def trigger(self):$/;"	m	class:SnippetDefinition
trigger_expand	plugged/LuaSnip/lua/luasnip/nodes/snippet.lua	/^function Snippet:trigger_expand(current_node)$/;"	f	unknown:Snippet
trim	plugged/nvim-cmp/lua/cmp/utils/str.lua	/^str.trim = function(text)$/;"	f	unknown:str
trim_blankspace	plugged/nvim-lspconfig/lua/lspconfig/ui/lspinfo.lua	/^local function trim_blankspace(cmd)$/;"	f
trim_level	plugged/nvim-treesitter/lua/nvim-treesitter/fold.lua	/^  local trim_level = function(level)$/;"	f
try_add	plugged/nvim-lspconfig/lua/lspconfig/configs.lua	/^    function manager.try_add(bufnr)$/;"	f	unknown:manager
try_add_wrapper	plugged/nvim-lspconfig/lua/lspconfig/configs.lua	/^    function manager.try_add_wrapper(bufnr)$/;"	f	unknown:manager
tsserver	plugged/nvim-lspconfig/CONFIG.md	/^## tsserver$/;"	s	chapter:Configurations
tsx	plugged/nvim-treesitter/lockfile.json	/^  "tsx": {$/;"	o
turtle	plugged/nvim-treesitter/lockfile.json	/^  "turtle": {$/;"	o
type	plugged/LuaSnip/lua/luasnip/nodes/functionNode.lua	/^		type = types.functionNode,$/;"	f
type	plugged/nvim-treesitter/lua/nvim-treesitter/tsrange.lua	/^function TSRange:type()$/;"	f	unknown:TSRange
type	plugged/vim-snippets/addon-info.json	/^  "repository" : {"type": "git", "url": "git:\/\/github.com\/honza\/snipmate-snippets.git"},$/;"	s	object:repository
type_fn	plugged/nvim-treesitter/lua/nvim-treesitter/query.lua	/^  local type_fn = type(capture_or_fn) == "function" and capture_or_fn$/;"	f
type_patterns	plugged/nvim-treesitter/lua/nvim-treesitter.lua	/^  local type_patterns = options.type_patterns or { "class", "function", "method" }$/;"	f
typescript	plugged/nvim-treesitter/lockfile.json	/^  "typescript": {$/;"	o
ultisnips_snippets	plugged/ultisnips/ftplugin/snippets.vim	/^augroup ultisnips_snippets.vim$/;"	a
un_escape	plugged/LuaSnip/lua/luasnip/util/parser.lua	/^local function un_escape(text)$/;"	f
unescape	plugged/ultisnips/pythonx/UltiSnips/text.py	/^def unescape(text):$/;"	f
uninstall	plugged/nvim-treesitter/lua/nvim-treesitter/install.lua	/^function M.uninstall(...)$/;"	f	unknown:M
unique_name_temp	plugged/ultisnips/test/vim_interface.py	/^    def unique_name_temp(self, suffix="", prefix=""):$/;"	m	class:TempFileManager
unite#sources#ultisnips#define	plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^function! unite#sources#ultisnips#define() abort$/;"	f
unlink_current	plugged/LuaSnip/lua/luasnip/init.lua	/^local function unlink_current()$/;"	f
unlink_current_if_deleted	plugged/LuaSnip/lua/luasnip/init.lua	/^local function unlink_current_if_deleted()$/;"	f
unregister_snippet_source	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def unregister_snippet_source(self, name):$/;"	m	class:SnippetManager
unregister_source	plugged/nvim-cmp/lua/cmp/core.lua	/^core.unregister_source = function(self, source_id)$/;"	f	unknown:core
unregister_source	plugged/nvim-cmp/lua/cmp/init.lua	/^cmp.unregister_source = function(id)$/;"	f	unknown:cmp
unshift	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def unshift(self, amount=1):$/;"	m	class:SnippetUtil
update	plugged/LuaSnip/lua/luasnip/nodes/choiceNode.lua	/^function ChoiceNode:update()$/;"	f	unknown:ChoiceNode
update	plugged/LuaSnip/lua/luasnip/nodes/dynamicNode.lua	/^function DynamicNode:update()$/;"	f	unknown:DynamicNode
update	plugged/LuaSnip/lua/luasnip/nodes/functionNode.lua	/^function FunctionNode:update()$/;"	f	unknown:FunctionNode
update	plugged/LuaSnip/lua/luasnip/nodes/node.lua	/^function Node:update() end$/;"	f	unknown:Node
update	plugged/LuaSnip/lua/luasnip/nodes/snippet.lua	/^function Snippet:update()$/;"	f	unknown:Snippet
update	plugged/LuaSnip/lua/luasnip/util/mark.lua	/^function Mark:update(opts, pos_begin, pos_end)$/;"	f	unknown:Mark
update	plugged/nvim-cmp/lua/cmp/utils/window.lua	/^window.update = function(self)$/;"	f	unknown:window
update	plugged/nvim-treesitter/lua/nvim-treesitter/install.lua	/^function M.update(options)$/;"	f	unknown:M
update_cached_matches	plugged/nvim-treesitter/lua/nvim-treesitter/query.lua	/^  local function update_cached_matches(bufnr, changed_tick, query_group)$/;"	f
update_capabilities	plugged/cmp-nvim-lsp/lua/cmp_nvim_lsp/init.lua	/^M.update_capabilities = function(capabilities, override)$/;"	f	unknown:M
update_dependents	plugged/LuaSnip/lua/luasnip/nodes/choiceNode.lua	/^		node.update_dependents = function(node)$/;"	f	unknown:node
update_dependents	plugged/LuaSnip/lua/luasnip/nodes/node.lua	/^function Node:update_dependents()$/;"	f	unknown:Node
update_dependents	plugged/LuaSnip/lua/luasnip/nodes/snippet.lua	/^		node.update_dependents = function(node)$/;"	f	unknown:node
update_extends	plugged/ultisnips/pythonx/UltiSnips/snippet/source/base.py	/^    def update_extends(self, child_ft, parent_fts):$/;"	m	class:SnippetSource
update_ft_to_parsername	plugged/nvim-treesitter/lua/nvim-treesitter/parsers.lua	/^local function update_ft_to_parsername(name, parser)$/;"	f
update_opts	plugged/LuaSnip/lua/luasnip/util/mark.lua	/^function Mark:update_opts(opts)$/;"	f	unknown:Mark
update_restore	plugged/LuaSnip/lua/luasnip/nodes/choiceNode.lua	/^function ChoiceNode:update_restore()$/;"	f	unknown:ChoiceNode
update_restore	plugged/LuaSnip/lua/luasnip/nodes/dynamicNode.lua	/^function DynamicNode:update_restore()$/;"	f	unknown:DynamicNode
update_restore	plugged/LuaSnip/lua/luasnip/nodes/functionNode.lua	/^function FunctionNode:update_restore()$/;"	f	unknown:FunctionNode
update_restore	plugged/LuaSnip/lua/luasnip/nodes/node.lua	/^function Node:update_restore() end$/;"	f	unknown:Node
update_restore	plugged/LuaSnip/lua/luasnip/nodes/snippet.lua	/^function Snippet:update_restore()$/;"	f	unknown:Snippet
update_rgravs	plugged/LuaSnip/lua/luasnip/util/mark.lua	/^function Mark:update_rgravs(rgrav_beg, rgrav_end)$/;"	f	unknown:Mark
update_selection	plugged/nvim-treesitter/lua/nvim-treesitter/ts_utils.lua	/^function M.update_selection(buf, node, selection_mode)$/;"	f	unknown:M
update_textobjects	plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^    def update_textobjects(self, buf):$/;"	m	class:SnippetInstance
uri_to_deno_uri	plugged/nvim-lspconfig/lua/lspconfig/denols.lua	/^local function uri_to_deno_uri(uri)$/;"	f
url	plugged/vim-snippets/addon-info.json	/^  "repository" : {"type": "git", "url": "git:\/\/github.com\/honza\/snipmate-snippets.git"},$/;"	s	object:repository
use_proxy_buffer	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^def use_proxy_buffer(snippets_stack, vstate):$/;"	f
use_raw_list	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^        if ["%FILE_LIST_CMD_IS_ABSOLUTE%"]==["1"] set use_raw_list=1$/;"	v
use_raw_list	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^        if ["%PROJECT_ROOT%"]==["."] set use_raw_list=1$/;"	v
use_raw_list	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^        set use_raw_list=0$/;"	v
v	plugged/nvim-cmp/lua/cmp/utils/misc.lua	/^    local s, v = pcall(function()$/;"	f
v	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def v(self):  # pylint:disable=invalid-name$/;"	m	class:SnippetUtil
v0.1.0	plugged/vim-nerdtree-tabs/CHANGELOG.md	/^## v0.1.0$/;"	s	chapter:vim-nerdtree-tabs changelog
v0.2.0	plugged/vim-nerdtree-tabs/CHANGELOG.md	/^## v0.2.0$/;"	s	chapter:vim-nerdtree-tabs changelog
v1.0.0	plugged/vim-nerdtree-tabs/CHANGELOG.md	/^## v1.0.0$/;"	s	chapter:vim-nerdtree-tabs changelog
v1.0.1	plugged/vim-nerdtree-tabs/CHANGELOG.md	/^## v1.0.1$/;"	s	chapter:vim-nerdtree-tabs changelog
v1.1.0	plugged/vim-nerdtree-tabs/CHANGELOG.md	/^## v1.1.0$/;"	s	chapter:vim-nerdtree-tabs changelog
v1.1.1	plugged/vim-nerdtree-tabs/CHANGELOG.md	/^## v1.1.1$/;"	s	chapter:vim-nerdtree-tabs changelog
v1.1.2	plugged/vim-nerdtree-tabs/CHANGELOG.md	/^## v1.1.2$/;"	s	chapter:vim-nerdtree-tabs changelog
v1.2.0	plugged/vim-nerdtree-tabs/CHANGELOG.md	/^## v1.2.0$/;"	s	chapter:vim-nerdtree-tabs changelog
v1.2.1	plugged/vim-nerdtree-tabs/CHANGELOG.md	/^## v1.2.1$/;"	s	chapter:vim-nerdtree-tabs changelog
v1.3.0	plugged/vim-nerdtree-tabs/CHANGELOG.md	/^## v1.3.0$/;"	s	chapter:vim-nerdtree-tabs changelog
v1.4.0	plugged/vim-nerdtree-tabs/CHANGELOG.md	/^## v1.4.0$/;"	s	chapter:vim-nerdtree-tabs changelog
v1.4.1	plugged/vim-nerdtree-tabs/CHANGELOG.md	/^## v1.4.1$/;"	s	chapter:vim-nerdtree-tabs changelog
v1.4.2	plugged/vim-nerdtree-tabs/CHANGELOG.md	/^## v1.4.2$/;"	s	chapter:vim-nerdtree-tabs changelog
v1.4.3	plugged/vim-nerdtree-tabs/CHANGELOG.md	/^## v1.4.3$/;"	s	chapter:vim-nerdtree-tabs changelog
v1.4.4	plugged/vim-nerdtree-tabs/CHANGELOG.md	/^## v1.4.4$/;"	s	chapter:vim-nerdtree-tabs changelog
v1.4.5	plugged/vim-nerdtree-tabs/CHANGELOG.md	/^## v1.4.5$/;"	s	chapter:vim-nerdtree-tabs changelog
v1.4.6	plugged/vim-nerdtree-tabs/CHANGELOG.md	/^## v1.4.6$/;"	s	chapter:vim-nerdtree-tabs changelog
v1.4.7	plugged/vim-nerdtree-tabs/CHANGELOG.md	/^## v1.4.7$/;"	s	chapter:vim-nerdtree-tabs changelog
vala_ls	plugged/nvim-lspconfig/CONFIG.md	/^## vala_ls$/;"	s	chapter:Configurations
valid_args	plugged/nvim-treesitter/lua/nvim-treesitter/query_predicates.lua	/^local function valid_args(name, pred, count, strict_count)$/;"	f
validate_buffer	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def validate_buffer(self):$/;"	m	class:VimBufferProxy
validate_bufnr	plugged/nvim-lspconfig/lua/lspconfig/util.lua	/^function M.validate_bufnr(bufnr)$/;"	f	unknown:M
var	plugged/LuaSnip/lua/luasnip/util/functions.lua	/^	var = function(_, _, node, text)$/;"	f
verify_install	plugged/nvim-cmp/utils/install_stylua.sh	/^function verify_install() {$/;"	f
verilog	plugged/nvim-treesitter/lockfile.json	/^  "verilog": {$/;"	o
version	plugged/ultisnips/test/vim_test_case.py	/^    version = None  # Will be set to vim --version output$/;"	v	class:VimTestCase
vim	plugged/nvim-treesitter/lockfile.json	/^  "vim": {$/;"	o
vim	plugged/vim-devicons/pythonx/vim_devicons/powerline/segments.py	/^	vim = {}$/;"	v
vim-easy-align ![travis-ci](https://travis-ci.org/junegunn/vim-easy-align.svg?branch=master)	plugged/vim-easy-align/README.md	/^vim-easy-align ![travis-ci](https:\/\/travis-ci.org\/junegunn\/vim-easy-align.svg?branch=master)$/;"	c
vim-monokai	plugged/vim-monokai/README.md	/^vim-monokai$/;"	c
vim-nerdtree-syntax-highlight	plugged/vim-nerdtree-syntax-highlight/README.md	/^# vim-nerdtree-syntax-highlight$/;"	c
vim-nerdtree-tabs changelog	plugged/vim-nerdtree-tabs/CHANGELOG.md	/^# vim-nerdtree-tabs changelog$/;"	c
vim-oscyank	plugged/vim-oscyank/README.md	/^# vim-oscyank$/;"	c
vim-smoothie: Smooth scrolling for Vim done right🥤	plugged/vim-smoothie/README.md	/^vim-smoothie: Smooth scrolling for Vim done right🥤$/;"	c
vim-startify	plugged/vim-devicons/DEVELOPER.md	/^##### vim-startify$/;"	T	subsubsection:API""Integration with other plugins
vim_executable	plugged/ultisnips/test/vim_interface.py	/^    def vim_executable(self):$/;"	m	class:VimInterface
vim_flavor	plugged/ultisnips/test/vim_test_case.py	/^    vim_flavor = None  # will be 'vim' or 'neovim'.$/;"	v	class:VimTestCase
vim_snippets#Filename	plugged/vim-snippets/autoload/vim_snippets.vim	/^fun! vim_snippets#Filename(...)$/;"	f
vimfiler#columns#devicons#define	plugged/vim-devicons/autoload/vimfiler/columns/devicons.vim	/^function! vimfiler#columns#devicons#define() abort$/;"	f
vimls	plugged/nvim-lspconfig/CONFIG.md	/^## vimls$/;"	s	chapter:Configurations
virtual_position	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def virtual_position(line, col):$/;"	f
virtual_text_document	plugged/nvim-lspconfig/lua/lspconfig/denols.lua	/^local function virtual_text_document(uri)$/;"	f
virtual_text_document_handler	plugged/nvim-lspconfig/lua/lspconfig/denols.lua	/^local function virtual_text_document_handler(uri, result)$/;"	f
visible	plugged/nvim-cmp/lua/cmp/init.lua	/^cmp.visible = function()$/;"	f	unknown:cmp
visible	plugged/nvim-cmp/lua/cmp/utils/window.lua	/^window.visible = function(self)$/;"	f	unknown:window
visible	plugged/nvim-cmp/lua/cmp/view.lua	/^view.visible = function(self)$/;"	f	unknown:view
visible	plugged/nvim-cmp/lua/cmp/view/custom_entries_view.lua	/^custom_entries_view.visible = function(self)$/;"	f	unknown:custom_entries_view
visible	plugged/nvim-cmp/lua/cmp/view/docs_view.lua	/^docs_view.visible = function(self)$/;"	f	unknown:docs_view
visible	plugged/nvim-cmp/lua/cmp/view/native_entries_view.lua	/^native_entries_view.visible = function(_)$/;"	f	unknown:native_entries_view
visual_selection_range	plugged/nvim-treesitter/lua/nvim-treesitter/incremental_selection.lua	/^local function visual_selection_range()$/;"	f
vital#	plugged/nvim-cmp/autoload/vital/_cmp.vim	/^function! vital#{s:_plugin_name}#function(funcname) abort$/;"	f
vital#	plugged/nvim-cmp/autoload/vital/_cmp.vim	/^function! vital#{s:_plugin_name}#new() abort$/;"	f
vital#	plugged/nvim-cmp/autoload/vital/cmp.vim	/^function! vital#{s:plugin_name}#import(...) abort$/;"	f
vital#	plugged/nvim-cmp/autoload/vital/cmp.vim	/^function! vital#{s:plugin_name}#new() abort$/;"	f
vls	plugged/nvim-lspconfig/CONFIG.md	/^## vls$/;"	s	chapter:Configurations
vmode	plugged/ctrlsf.vim/syntax/ctrlsf.vim	/^let vmode = ctrlsf#CurrentMode()$/;"	v
volar	plugged/nvim-lspconfig/CONFIG.md	/^## volar$/;"	s	chapter:Configurations
vue	plugged/nvim-treesitter/lockfile.json	/^  "vue": {$/;"	o
vuels	plugged/nvim-lspconfig/CONFIG.md	/^## vuels$/;"	s	chapter:Configurations
wait	plugged/nvim-cmp/lua/cmp/utils/keymap.lua	/^        wait = vim.schedule_wrap(function()$/;"	f
wait_until_file_exists	plugged/ultisnips/test/vim_interface.py	/^def wait_until_file_exists(file_path, times=None, interval=0.01):$/;"	f
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:MultiLine
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:TestLotsaNewlines
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:TestWithNewline
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("D", 0, 0, "abc"), ("I", 0, 0, "def"))$/;"	v	class:TestNoSubstring
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("D", 0, 1, "asomelongertextb"), ("I", 0, 1, "o"))$/;"	v	class:TestCommonCharacters
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("D", 0, 1, "tdin.h"),)$/;"	v	class:MatchIsTooCheap
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("D", 0, 10, "Beginning"), ("I", 0, 10, "t"))$/;"	v	class:TestRealLife
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("D", 0, 11, "this is it"), ("I", 0, 11, "a"))$/;"	v	class:TestUltiSnipsProblem
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("D", 0, 5, " "),)$/;"	v	class:TestGuessing_DeleteOneChar
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("D", 0, 5, " hallo"),)$/;"	v	class:TestCheapDelete
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("D", 0, 6, " "),)$/;"	v	class:TestGuessing_BackspaceOneChar
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("D", 1, 6, "kjsdhfjksdhfkjhsdfkh"), ("I", 1, 6, "b"))$/;"	v	class:TestCrash
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("I", 0, 11, " "),)$/;"	v	class:TestRealLife1
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("I", 0, 6, " "),)$/;"	v	class:TestGuessing_InsertOneChar
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("I", 0, 7, " "),)$/;"	v	class:TestGuessing_InsertOneChar1
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ()$/;"	v	class:TestAllMatch
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ()$/;"	v	class:TestEmptyString
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ()$/;"	v	class:TestGuessing_Noop0
wanted	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = " :latex:`Hello`World"$/;"	v	class:Anon_NoTrigger_FirstCharOfLine
wanted	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = "123 simple 123 expand 123 456"$/;"	v	class:Anon_Trigger_Multi
wanted	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = ":latex:`Hello`World"$/;"	v	class:Anon_NoTrigger_BeginningOfLine
wanted	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = "abc simple expand"$/;"	v	class:Anon_NoTrigger_AfterSpace
wanted	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = "abcsimple 123 expand 123 456"$/;"	v	class:Anon_NoTrigger_Multi
wanted	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = "abcsimple expand"$/;"	v	class:Anon_NoTrigger_Simple
wanted	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = "simple expand"$/;"	v	class:Anon_Trigger_Opts
wanted	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = "simple expand"$/;"	v	class:Anon_Trigger_Simple
wanted	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = "simple expand\\nabc" + EX$/;"	v	class:Anon_Trigger_Twice
wanted	plugged/ultisnips/test/test_Autocommands.py	/^    wanted = "[ [ bar ] ] done M1U1"$/;"	v	class:Autocommands
wanted	plugged/ultisnips/test/test_Autotrigger.py	/^    wanted = "abc"$/;"	v	class:Autotrigger_WillProduceNoExceptionWithVimLowerThan214
wanted	plugged/ultisnips/test/test_Autotrigger.py	/^    wanted = "autotriggered"$/;"	v	class:Autotrigger_CanExpandOnTriggerWithLengthMoreThanOne
wanted	plugged/ultisnips/test/test_Autotrigger.py	/^    wanted = "autotriggered"$/;"	v	class:Autotrigger_CanMatchSimpleTrigger
wanted	plugged/ultisnips/test/test_Autotrigger.py	/^    wanted = "autotriggered\\na"$/;"	v	class:Autotrigger_CanMatchContext
wanted	plugged/ultisnips/test/test_Autotrigger.py	/^    wanted = "if var == nil: pass\\n="$/;"	v	class:Autotrigger_CanMatchPreviouslySelectedPlaceholder
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = """$/;"	v	class:MultiLineDefault_BS
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = """$/;"	v	class:MultiLineDefault_Jump
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = """$/;"	v	class:MultiLineDefault_Type
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = """$/;"	v	class:TrailingNewline_TabStop_EndNL
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = """$/;"	v	class:TrailingNewline_TabStop_EndStartNL
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = """$/;"	v	class:TrailingNewline_TabStop_ExtraNL_ECR
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = """$/;"	v	class:TrailingNewline_TabStop_JustNL
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = """$/;"	v	class:TrailingNewline_TabStop_NLInsideStuffBehind
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = """$/;"	v	class:TrailingNewline_TabStop_NotEndStartNL
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = """$/;"	v	class:TrailingNewline_TabStop_StartNL
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = """Hello \\t \\nGoodbye"""$/;"	v	class:LeaveTrailingWhitespace
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = """Hello\\nGoodbye"""$/;"	v	class:RemoveTrailingWhitespace
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = """\\tnext line\\n\\n\\tshould be empty"""$/;"	v	class:TrimSpacesAtEndOfLines
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = """\\tnext line\\n\\t\\n\\tshould be empty"""$/;"	v	class:DoNotTrimSpacesAtEndOfLinesByDefault
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = "Expand me'!"$/;"	v	class:Snippet_With_SingleQuote
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = "Expand me'!"$/;"	v	class:Snippet_With_SingleQuote_List
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = "Expand meü!"$/;"	v	class:Snippet_With_Umlauts
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = "Expand meü!"$/;"	v	class:Snippet_With_Umlauts_List
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = "oouu success b"$/;"	v	class:NoUmlautsBeforeTriggerAndCharsAfter
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = "te üü hello üü hello"$/;"	v	class:Snippet_With_Umlauts_Mirrors
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = "te üü hüüll üü aaaaa"$/;"	v	class:Snippet_With_Umlauts_Python
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = "te üü more text üü helloßß\\nüüüüend"$/;"	v	class:Snippet_With_Umlauts_OverwriteFirst
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = "te üü world üü helloßß\\nüüüüend"$/;"	v	class:Snippet_With_Umlauts_OverwriteNone
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = "te üü world üü more textßß\\nüüüüend"$/;"	v	class:Snippet_With_Umlauts_OverwriteSecond
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = "te üüüüüßßßßmore text"$/;"	v	class:Snippet_With_Umlauts_TypeOn
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = "ööuu success b"$/;"	v	class:UmlautsBeforeTriggerAndCharsAfter
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = 'Expand me"!'$/;"	v	class:Snippet_With_DoubleQuote
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = 'Expand me"!'$/;"	v	class:Snippet_With_DoubleQuote_List
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "1 is a char"$/;"	v	class:Choices_MoreThan9Candidates_ShouldWaitForInputs
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "1.a|2.c"$/;"	v	class:Choices_EmptyChoiceWillBeDiscarded
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "1.red|2.gray"$/;"	v	class:Choices_WillBeExpandedToInlineSelection
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "1.Русский язык|2.中文|3.한국어|4.öääö"$/;"	v	class:Choices_CanTakeNonAsciiCharacters
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "3"$/;"	v	class:Choices_WillAbandonSelection_If_InputIsGreaterThanMaxSelectionIndex
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "a is a char"$/;"	v	class:Choices_MoreThan9Candidates_ShouldTerminateWithSpace
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "char"$/;"	v	class:Choices_WillAbandonSelection_If_CharTyped
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "cyan is a color, mirror: cyan is a color"$/;"	v	class:Choices_With_Mirror_ContinueMirroring_EvenAfterSelectionDone
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "cyan, mirror: cyan"$/;"	v	class:Choices_With_Mirror
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "fun2(param1, param_end) result: fun2(param1, "$/;"	v	class:Choices_CanEscapeCommaInsideChoiceItem
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "gray is color\\nline 2"$/;"	v	class:Choices_WilNotMessWithTabstopsAfterIt
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "gray"$/;"	v	class:Choices_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "input"$/;"	v	class:Choices_AsNestedElement_ShallNotTakeActionIfParentInput
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "outer 1.foo|2.blah input"$/;"	v	class:Choices_AsNestedElement_CanBeTabbedThrough
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "outer 1.foo|2.blah"$/;"	v	class:Choices_AsNestedElement_ShouldOverwriteDefaultText
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "outer foo"$/;"	v	class:Choices_AsNestedElement_CanBeTabbedInto
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "||"$/;"	v	class:Choices_WillNotExpand_If_ChoiceListIsEmpty
wanted	plugged/ultisnips/test/test_Completion.py	/^    wanted = ($/;"	v	class:Completion_SimpleExample_ECR
wanted	plugged/ultisnips/test/test_Completion.py	/^    wanted = COMPLETION_OPTIONS + "completion1 foo"$/;"	v	class:Completion_ForwardsJumpWithoutCOMPL_ACCEPT
wanted	plugged/ultisnips/test/test_Completion.py	/^    wanted = COMPLETION_OPTIONS + "foo completion1"$/;"	v	class:Completion_BackwardsJumpWithoutCOMPL_ACCEPT
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = "(2, 1)"$/;"	v	class:ContextSnippets_CursorIsZeroBased
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = "1 1"$/;"	v	class:ContextSnippets_ContextIsClearedBeforeExpand
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = "Yes No"$/;"	v	class:ContextSnippets_ContextHasAccessToVisual
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = "abc"$/;"	v	class:ContextSnippets_ExpandOnTrue
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = "abc"$/;"	v	class:ContextSnippets_Header_ExpandOnTrue
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = "abc"$/;"	v	class:ContextSnippets_SimpleSnippet
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = "b"$/;"	v	class:ContextSnippets_PriorityKeyword
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = "e" + EX$/;"	v	class:ContextSnippets_ReportError
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = "e" + EX$/;"	v	class:ContextSnippets_ReportErrorOnIndexOutOfRange
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = "{ < a > }"$/;"	v	class:ContextSnippets_UseContext
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = keys$/;"	v	class:ContextSnippets_DoNotExpandOnFalse
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = keys$/;"	v	class:ContextSnippets_Header_DoNotExpandOnFalse
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = r"""$/;"	v	class:ContextSnippets_SnippetPriority
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = """\\$/;"	v	class:UpdateModifiedSnippetWithoutCursorMove2
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = ""$/;"	v	class:Undo_CompletelyUndoSnippet
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "AA BBB"$/;"	v	class:Backspace_TabStop_NotZero
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "AA BBB"$/;"	v	class:Backspace_TabStop_Zero
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "a b c\\na\\nb\\nc\\n\\nshallnot"$/;"	v	class:JumpForward_DefSnippet
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "aaaaa()3333"$/;"	v	class:UpdateModifiedSnippetWithoutCursorMove1
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "end"$/;"	v	class:DeleteCurrentTabStop1_JumpBack
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "first line\\n\\n\\ntest\\n\\n\\nthird line"$/;"	v	class:Undo_RemoveWholeSnippet
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "hello upsi Hello\\naaa upsi bbb\\nWorld"$/;"	v	class:Undo_RemoveEditInTabstop
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "hello"$/;"	v	class:DeleteLastTwoLinesInSnippet
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "hello\\nend"$/;"	v	class:DeleteCurrentTabStop2_JumpBack
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "hello\\nendworld"$/;"	v	class:DeleteCurrentTabStop3_JumpAround
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "if :\\n\\t"$/;"	v	class:Undo_ChangesInPlaceholder
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "if a: test"$/;"	v	class:DoNotCrashOnUndoAndJumpInNestedSnippet
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "if:\\n\\t"$/;"	v	class:Undo_RemoveOneSnippetByTime2
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "if:\\n\\ti"$/;"	v	class:Undo_RemoveOneSnippetByTime
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "test"$/;"	v	class:DeleteSnippetInsertion1
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "test"$/;"	v	class:Undo_RemoveMultilineSnippet
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "world"$/;"	v	class:DeleteSnippetInsertion0
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = "Hallo Welt!"$/;"	v	class:SimpleExpand_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = "Hallo Welt!\\nHallo We"$/;"	v	class:SimpleExpandNewLineAndBackspae_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = "Hallo Welt!\\nHallo Welt!"$/;"	v	class:SimpleExpandTwice_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = "Hallo Welt!and again"$/;"	v	class:SimpleExpandTypeAfterExpand_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = "Hallo Welt\\n\\nAnd more"$/;"	v	class:SimpleExpandEndingWithNewline_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = "Hallo \\n"$/;"	v	class:SimpleExpand_DoNotClobberDefaultRegister
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = "SimpleText" + EX$/;"	v	class:ExitSnippetModeAfterTabstopZero
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = "Wie Hallo Welt! gehts"$/;"	v	class:ExpandInTheMiddleOfLine_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = "Wie Hallo Welt!\\nUnd Wie gehts gehts"$/;"	v	class:MultilineExpand_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = "Wie Hallo Welt!\\nUnd Wie gehtsHuiui! gehts"$/;"	v	class:MultilineExpandTestTyping_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = "hallo " + EX$/;"	v	class:DoNotExpandAfterSpace_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = "na du Hallo Welt!and blub"$/;"	v	class:SimpleExpandTypeAndDelete_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = r"\\Safe\\foo"$/;"	v	class:SimpleExpand_Issue1343
wanted	plugged/ultisnips/test/test_Fixes.py	/^    wanted = "  world hello;blub"$/;"	v	class:Bug1251994
wanted	plugged/ultisnips/test/test_Fixes.py	/^    wanted = "\\nblah\\nhello world "$/;"	v	class:RetainsTheUnnamedRegister_ButOnlyOnce
wanted	plugged/ultisnips/test/test_Fixes.py	/^    wanted = "\\t\\t\\tpadding: 2px"$/;"	v	class:VirtualEdit
wanted	plugged/ultisnips/test/test_Fixes.py	/^    wanted = "\\tfoo"$/;"	v	class:ShiftWidthZero
wanted	plugged/ultisnips/test/test_Fixes.py	/^    wanted = "hello"$/;"	v	class:NonUnicodeDataInUnnamedRegister
wanted	plugged/ultisnips/test/test_Fixes.py	/^    wanted = "yank HELLO world yank"$/;"	v	class:RetainsTheUnnamedRegister
wanted	plugged/ultisnips/test/test_Folding.py	/^    wanted = """Hello {{{$/;"	v	class:FoldingEnabled_SnippetWithFold_ExpectNoFolding
wanted	plugged/ultisnips/test/test_Folding.py	/^    wanted = "# hi  {{{\\n\\n# End: hi  }}}"$/;"	v	class:FoldOverwrite_Simple_ECR
wanted	plugged/ultisnips/test/test_Folding.py	/^    wanted = "# hi  {{{\\n\\n# End: hi  }}}"$/;"	v	class:Fold_DeleteMiddleLine_ECR
wanted	plugged/ultisnips/test/test_Folding.py	/^    wanted = "package c03;\\nsub junk {}\\n1;"$/;"	v	class:PerlSyntaxFold
wanted	plugged/ultisnips/test/test_Format.py	/^    wanted = "    for\\n        blahHui"$/;"	v	class:ProperIndenting_SimpleCase_ECR
wanted	plugged/ultisnips/test/test_Format.py	/^    wanted = "    hui\\n    blah"$/;"	v	class:ProperIndenting_AutoIndentAndNewline_ECR
wanted	plugged/ultisnips/test/test_Format.py	/^    wanted = "    huiblah"$/;"	v	class:ProperIndenting_SingleLineNoReindenting_ECR
wanted	plugged/ultisnips/test/test_Format.py	/^    wanted = "   Blaahblah \\t\\t  "$/;"	v	class:RecTabStopsWithExpandtab_SimpleExample_ECR
wanted	plugged/ultisnips/test/test_Format.py	/^    wanted = "   Something\\n        Hallo"$/;"	v	class:RecTabStopsWithExpandtab_SpecialIndentProblem_ECR
wanted	plugged/ultisnips/test/test_Format.py	/^    wanted = """BeforeThis is a$/;"	v	class:FOTextBeforeAndAfter_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Format.py	/^    wanted = """This is a longer$/;"	v	class:FOTextAfter_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Format.py	/^    wanted = """This is a$/;"	v	class:FOWrapOnLongWord_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Format.py	/^    wanted = "#include <cstdlib>"$/;"	v	class:ProperIndenting_FirstLineInFileComplete_ECR
wanted	plugged/ultisnips/test/test_Format.py	/^    wanted = "#include <foo>"$/;"	v	class:ProperIndenting_FirstLineInFile_ECR
wanted	plugged/ultisnips/test/test_Format.py	/^    wanted = ($/;"	v	class:FOSimple_Break_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "    hi 4 End"$/;"	v	class:TabStop_VimScriptInterpolation_SimpleExample
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "    start b isbigger a end"$/;"	v	class:PythonCodeOld_IndentedMultiline
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "    start b isbigger a end"$/;"	v	class:PythonCode_MultilineIndented
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = """        hi World End"""$/;"	v	class:PythonCode_IndentProblem
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = """    hi$/;"	v	class:PythonCode_IndentEtSwOffset
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = """   hi$/;"	v	class:PythonCode_IndentEtSw
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = """   hi$/;"	v	class:PythonCode_IndentNoetSwTs
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = """$/;"	v	class:PythonCode_MultiAppendShift
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = """$/;"	v	class:PythonCode_MultiAppendShiftMethods
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = """$/;"	v	class:PythonCode_MultiAppendSimpleIndent
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = """$/;"	v	class:PythonCode_ResetIndent
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = """$/;"	v	class:PythonCode_SimpleMkline
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = """first second (placeholder: first second (placeholder: ))$/;"	v	class:PythonVisual_HasAccessToZeroPlaceholders
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = """first second (placeholder: first)$/;"	v	class:PythonVisual_HasAccessToSelectedPlaceholders
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = """hi no End"""$/;"	v	class:PythonCode_OptNoExists
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = """hi nothing test End"""$/;"	v	class:PythonCode_Locals
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = """hi yes End"""$/;"	v	class:PythonCode_OptExists
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "##########\\nHallo Welt"$/;"	v	class:PythonCodeOld_ReferencePlaceholderBefore
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "##########\\nHallo Welt"$/;"	v	class:PythonCode_ReferencePlaceholderBefore
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "$hi"$/;"	v	class:TabStop_Shell_TestEscapedChars_Overwrite
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "5"$/;"	v	class:Python_SnipRvCanBeNonText
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "Hallo now Hallo Welt endand more"$/;"	v	class:TabStop_Shell_ShebangPython
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "Hallo now fromecho endand more"$/;"	v	class:TabStop_Shell_InDefValue_Leave
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "Hallo overwrite endand more"$/;"	v	class:TabStop_Shell_InDefValue_Overwrite
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "OKAYhokayoOKAY"$/;"	v	class:PythonCode_AccessKilledTabstop_OverwriteSecond
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "aaa"$/;"	v	class:PythonCode_AccessKilledTabstop_OverwriteFirst
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "bl-\\n\\tah, bah"$/;"	v	class:PythonCode_CanOverwriteTabstop
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "blah"$/;"	v	class:TabStop_Shell_TestEscapedCharsAndShellVars_Overwrite
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "egal Hallo End"$/;"	v	class:PythonCodeOld_TransformedBeforeMultiLine
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "egal Hallo End"$/;"	v	class:PythonCode_TransformedBeforeMultiLine
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hVhello\\nnice\\nworld\\nb"$/;"	v	class:PythonVisual_LineSelect_Simple
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hbabc"$/;"	v	class:PythonVisual_NoVisualSelection_Ignore
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hi Hallo End"$/;"	v	class:PythonCodeOld_SimpleExample
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hi Hallo End"$/;"	v	class:PythonCode_SimpleExample
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hi Hallo1\\nHallo2 End"$/;"	v	class:PythonCode_SimpleAppend
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hi Hallo1\\nHallo2\\nHallo3 End"$/;"	v	class:PythonCode_MultiAppend
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hi New End"$/;"	v	class:PythonCode_UseNewOverOld
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hi hallo you!and more"$/;"	v	class:TabStop_Shell_SimpleExample
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hi hallo\\nWeiterand more"$/;"	v	class:TabStop_Shell_TextInNextLine
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hi höüäh you!and more"$/;"	v	class:TabStop_Shell_WithUmlauts
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hi" + 100 * "a" + "endups"$/;"	v	class:PythonCode_LongerTextThanSource_Chars
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hi" + 100 * "a" + 100 * "\\n" + 100 * "a" + "endups"$/;"	v	class:PythonCode_LongerTextThanSource_MultiLine
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hiEnd"$/;"	v	class:PythonCode_SimpleExample_ReturnValueIsEmptyString
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "ho ho.blah End"$/;"	v	class:PythonCodeOld_ReferencePlaceholderAfter
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "ho ho.blah End"$/;"	v	class:PythonCode_ReferencePlaceholder
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hvblablubb"$/;"	v	class:PythonVisual_SelectOneWord
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "ups egal hi hi"$/;"	v	class:PythonCode_TrickyReferences
wanted	plugged/ultisnips/test/test_ListSnippets.py	/^    wanted = " BLAAH"$/;"	v	class:ListAllAvailable_SpaceInFront_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_ListSnippets.py	/^    wanted = "BLAAH"$/;"	v	class:ListAllAvailable_NothingTyped_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_ListSnippets.py	/^    wanted = "hallo BLAAH"$/;"	v	class:ListAllAvailable_testtyped_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_ListSnippets.py	/^    wanted = "hallo TEST ONE"$/;"	v	class:ListAllAvailable_testtypedSecondOpt_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_ListSnippets.py	/^    wanted = "hallo qualleHi"$/;"	v	class:ListAllAvailable_NonDefined_NoExpectionShouldBeRaised
wanted	plugged/ultisnips/test/test_ListSnippets.py	/^    wanted = "hallo test" + LS + "2\\n"$/;"	v	class:ListAllAvailable_Disabled_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_ListSnippets.py	/^    wanted = "} BLAAH"$/;"	v	class:ListAllAvailable_BraceInFront_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "    hallo\\nhallo\\nahallob\\nhallo\\ntest hallo mich"$/;"	v	class:SimpleMirrorMultilineMany_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = """for(size_t a_variable = 0; a_variable < 100; a_variable *= 2)$/;"	v	class:MirrorRealLifeExample_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ObenVorne hallo welt ObenHinten\\nVorne hallo welt Hinten"$/;"	v	class:TextTabStopAllSurrounded_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "Vorne hallo test Hinten\\nhallo test"$/;"	v	class:TextTabStopTextSurroundedTab_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "Vorne hallo\\nhallo"$/;"	v	class:TextTabStopTextBeforeTab_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "a a a"$/;"	v	class:MirrorBeforeTabstopOverwrite_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha blah hi hulla end hu hi hub hulla"$/;"	v	class:TabstopWithMirrorManyFromAll_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha blub blub"$/;"	v	class:TabstopWithMirrorInDefaultNoType1_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha blub blub.h"$/;"	v	class:TabstopWithMirrorInDefaultNoType_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha defa\\ndefa"$/;"	v	class:SimpleTabstopWithDefaultSimpelKeep_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha default value default value\\nanother: default value mirror"$/;"	v	class:SimpleTabstopWithDefaultComplexKeep_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha stdin do snap stdin.h do snap"$/;"	v	class:TabstopWithMirrorInDefaultMultipleOverwrite_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha stdin overwritten"$/;"	v	class:TabstopWithMirrorInDefaultOverwrite1_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha stdin overwritten"$/;"	v	class:TabstopWithMirrorInDefaultOverwrite_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha stdin snip stdin.h snip"$/;"	v	class:TabstopWithMirrorInDefaultMultipleLeave_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha stdin stdin.h stdin.c\\ntest stdin"$/;"	v	class:TabstopWithMirrorInDefaultTwiceAndExtra_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha stdin stdinend"$/;"	v	class:TabstopWithMirrorInDefaultNoOverwrite1_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha world world\\nanother: world mirror"$/;"	v	class:SimpleTabstopWithDefaultComplexType_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha world\\nworld"$/;"	v	class:SimpleTabstopWithDefaultSimpelType_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hal\\nhal"$/;"	v	class:SimpleMirrorDelete_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "halhups\\nhalhups"$/;"	v	class:SimpleMirrorDeleteSomeEnterSome_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo Du\\nAch Blah\\nhallo Du\\nAch Blah\\nhallo Du\\nAch Blah"$/;"	v	class:MultilineTabStopSimpleMirrorDeleteInLine_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo Du\\nHi\\n\\nhallo Du\\nHi\\n\\nhallo Du\\nHi"$/;"	v	class:MultilineTabStopSimpleMirrorMultiline_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo Du\\nHi\\nhallo Du\\nHi\\nhallo Du\\nHi"$/;"	v	class:MultilineTabStopSimpleMirrorMultiline1_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo Hinten\\nhallo"$/;"	v	class:TextTabStopTextAfterTab_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo du hallo du hallo du hallo du"$/;"	v	class:SimpleMirrorSameLineMany_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo foo hallo foo"$/;"	v	class:SimpleMirrorSameLineBeforeTabDefVal_DelB4Typing_ECR
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo foo hallo foo"$/;"	v	class:SimpleMirrorSameLineBeforeTabDefVal_ECR
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo hallo"$/;"	v	class:SimpleMirrorSameLine_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo noauch ahiuch_end"$/;"	v	class:Mirror_TestKill_InsertBeginning_Kill
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo noauch auchih_end"$/;"	v	class:Mirror_TestKill_InsertEnd_Kill
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo noauch hinoauch_end"$/;"	v	class:Mirror_TestKill_InsertBefore_NoKill
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo noauch noauchab_end"$/;"	v	class:Mirror_TestKill_InsertAfter_NoKill
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo welt\\nVorne hallo welt Hinten"$/;"	v	class:TextTabStopSurroundMirror_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo weltelt "$/;"	v	class:Mirror_TestKillTabstop_Kill
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo\\nVorne hallo"$/;"	v	class:TextTabStopTextBeforeMirror_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo\\nagain\\nhallo\\nagain"$/;"	v	class:TextTabStopSimpleMirrorMultilineMirrorInFront_ECR
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo\\nhallo Hinten"$/;"	v	class:TextTabStopAfterMirror_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo\\nhallo"$/;"	v	class:TextTabStopSimpleMirrorMultiline_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallohallo "$/;"	v	class:SimpleMirrorSameLineNoSpaceInsideOtherSpaceAfter_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallohallo "$/;"	v	class:SimpleMirrorSameLineNoSpaceSpaceAfter_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallohallo"$/;"	v	class:SimpleMirrorSameLineNoSpaceInsideOther_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallohallo"$/;"	v	class:SimpleMirrorSameLineNoSpace_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "this is it this is it this is it"$/;"	v	class:MirrorBeforeTabstopLeave_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ups hallo hallo blah"$/;"	v	class:SimpleMirrorSameLine_InText_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = ($/;"	v	class:SimpleMirrorSameLineManyMultiline_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Movement.py	/^    wanted = "<tr>\\n\\t<th>blah<\/th>\\n<\/tr>\\nend"$/;"	v	class:CursorMovement_BS_InEditMode
wanted	plugged/ultisnips/test/test_Movement.py	/^    wanted = "hello tab blub tab " + JF + "hallothis"$/;"	v	class:IMMoving_ExitWhenOutsideRight_ECR
wanted	plugged/ultisnips/test/test_Movement.py	/^    wanted = "hello tab hallo tab this"$/;"	v	class:IMMoving_NoExitingEventAtEnd_ECR
wanted	plugged/ultisnips/test/test_Movement.py	/^    wanted = "hello tab hallo tab this"$/;"	v	class:IMMoving_NoExiting_ECR
wanted	plugged/ultisnips/test/test_Movement.py	/^    wanted = "hello tab hallo this"$/;"	v	class:IMMoving_NotExitingWhenBarelyOutsideLeft_ECR
wanted	plugged/ultisnips/test/test_Movement.py	/^    wanted = "hello tab\\nblub this\\n" + JF + "testhallo"$/;"	v	class:IMMoving_ExitWhenOutsideBelow_ECR
wanted	plugged/ultisnips/test/test_Movement.py	/^    wanted = "hello" + JF + "hallo tab blub this"$/;"	v	class:IMMoving_ExitWhenOutsideLeft_ECR
wanted	plugged/ultisnips/test/test_Movement.py	/^    wanted = "text"$/;"	v	class:IMMoving_CursorsKeys_ECR
wanted	plugged/ultisnips/test/test_Movement.py	/^    wanted = "thhallo\\nweltis thhallo\\nweltis"$/;"	v	class:IMMoving_AcceptInputWhenMoved_ECR
wanted	plugged/ultisnips/test/test_Movement.py	/^    wanted = ($/;"	v	class:CursorMovement_Multiline_ECR
wanted	plugged/ultisnips/test/test_Movement.py	/^    wanted = JF + "hallo\\nhello tab\\nblub this"$/;"	v	class:IMMoving_ExitWhenOutsideAbove_ECR
wanted	plugged/ultisnips/test/test_MultipleMatches.py	/^    wanted = "Case1"$/;"	v	class:Multiple_SimpleCaseSelectFirst_ECR
wanted	plugged/ultisnips/test/test_MultipleMatches.py	/^    wanted = "Case2"$/;"	v	class:Multiple_SimpleCaseSelectSecond_ECR
wanted	plugged/ultisnips/test/test_MultipleMatches.py	/^    wanted = "Case2"$/;"	v	class:Multiple_SimpleCaseSelectTooHigh_ESelectLast
wanted	plugged/ultisnips/test/test_MultipleMatches.py	/^    wanted = "testhi"$/;"	v	class:Multiple_ManySnippetsOneTrigger_ECR
wanted	plugged/ultisnips/test/test_MultipleMatches.py	/^    wanted = "testhi"$/;"	v	class:Multiple_SimpleCaseEscapeOut_ECR
wanted	plugged/ultisnips/test/test_MultipleMatches.py	/^    wanted = "testhi"$/;"	v	class:Multiple_SimpleCaseSelectZero_EEscape
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "This is a test snippet!"$/;"	v	class:ParseSnippets_SimpleSnippet
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "This is a test."$/;"	v	class:ParseSnippets_MultiWord_Quotes
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "This is a test."$/;"	v	class:ParseSnippets_MultiWord_Simple
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "This is a test."$/;"	v	class:ParseSnippets_MultiWord_WithQuotes
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "This is another test."$/;"	v	class:ParseSnippets_MultiWord_Description
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "This is yet another test."$/;"	v	class:ParseSnippets_MultiWord_Description_Option
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "abc az test"$/;"	v	class:ParseSnippets_MultiWord_RE1
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "foo-bar test bar\\t\\nfoo-bar test"$/;"	v	class:ParseSnippets_MultiWord_RE2
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "re-test"$/;"	v	class:ParseSnippets_MultiWord_RE3
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "testsnip" + EX$/;"	v	class:ParseSnippets_ClearAll
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "testsnip" + EX$/;"	v	class:ParseSnippets_ExtendsWithoutFiletype
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "testsnip" + EX$/;"	v	class:ParseSnippets_InvalidPriorityLine
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "testsnip" + EX$/;"	v	class:ParseSnippets_InvalidPriorityLine1
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "testsnip" + EX$/;"	v	class:ParseSnippets_MissingEndSnippet
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "testsnip" + EX$/;"	v	class:ParseSnippets_UnknownDirective
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "toclear" + EX + "\\n" + "This is a test."$/;"	v	class:ParseSnippets_ClearOne
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "toclear" + EX + "\\n" + "testsnip" + EX$/;"	v	class:ParseSnippets_ClearTwo
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "x a bob b y\\nx a jon b y"$/;"	v	class:ParseSnippets_Global_Python
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "x first a bob b y"$/;"	v	class:ParseSnippets_Global_Local_Python
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_MultiWord_NoContainer
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_MultiWord_UnmatchedContainer
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_PrintErroneousSnippet
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_PrintErroneousSnippetContext
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_PrintErroneousSnippetLocation
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_PrintErroneousSnippetPostAction
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_PrintErroneousSnippetPreAction
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_PrintPythonStacktrace
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_PrintPythonStacktraceMultiline
wanted	plugged/ultisnips/test/test_Plugin.py	/^    wanted = "longtextlongtext\\nlongtextlongtext\\nHello"$/;"	v	class:Plugin_SuperTab_SimpleTest
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "A A AB B C CD D DE E B hi"$/;"	v	class:RecTabStops_ExpandedInZeroTSSecondTime_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "A A C CD D DE E B again B hi"$/;"	v	class:RecTabStops_ExpandedInZeroTSTwice_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "A C CD D DE E B hi"$/;"	v	class:RecTabStops_ExpandedInZeroTS_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "A C CD D DE E B"$/;"	v	class:RecTabStops_OuterOnlyWithZeroTS_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "A C CD D DE E B"$/;"	v	class:RecTabStops_OuterOnlyWithZero_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "M START\\n    M START\\n        hi\\n    M END -> hallo\\n" "M END -> end"$/;"	v	class:RecTabStops_InNewlineMultilineWithNonZeroTS_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "M START\\n    M START\\n        hi\\n    M END\\nM END"$/;"	v	class:RecTabStops_InNewlineMultilineWithIndent_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "M START\\n    M START\\n    hi\\n    M END\\nM END"$/;"	v	class:RecTabStops_InNewlineManualIndent_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "M START\\n    hallo M START\\n    hi\\n    M END\\nM END"$/;"	v	class:RecTabStops_InNewlineManualIndentTextInFront_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "M START\\nM START\\n\\nM END\\nM END"$/;"	v	class:RecTabStops_InNewlineMultiline_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ ASnip Hallo ASnip Hi ASnipendone two ] ASnip Hallo ASnip Hi ASnipendonetotalend"$/;"	v	class:RecTabStops_MirrorInnerSnippet_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ JST  JSThi ]end"$/;"	v	class:RecTabStops_InnerWOTabStopTwice_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ JST JSThi  two ]end"$/;"	v	class:RecTabStops_InnerWOTabStopTwiceDirectly_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ Just some Texthi  two ]end"$/;"	v	class:RecTabStops_InnerWOTabStop_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ [ [ a sec ] hallo ]ups world ]end"$/;"	v	class:RecTabStops_LeavingInnerInner_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ [ [ a sec ] sec ] hallo ]end"$/;"	v	class:RecTabStops_LeavingInnerInnerTwo_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ [ a hallo ]ups world ]end"$/;"	v	class:RecTabStops_BarelyNotLeavingInner_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ [ a sec ] hallo ]world"$/;"	v	class:RecTabStops_LeavingInner_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ [ hello  sec ]  world ]end"$/;"	v	class:RecTabStops_SimpleCaseLeaveFirstSecond_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ [ hello  world ]  sec ]end"$/;"	v	class:RecTabStops_SimpleCaseLeaveSecondSecond_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ [ hello  world ]ups  end ]"$/;"	v	class:RecTabStops_SimpleCase_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ [ one three three two ] four ]end"$/;"	v	class:RecTabStops_MirroredZeroTS_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ [ one three two ] four ]end"$/;"	v	class:RecTabStops_ZeroTSisNothingSpecial_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ hello [ hi  two ]ups  three ]end"$/;"	v	class:RecTabStops_NotAtBeginningOfTS_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ hello\\n[ hi  two ]ups  three ]end"$/;"	v	class:RecTabStops_InNewlineInTabstop_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ hello\\nhello again [ hi  two ]ups  three ]end"$/;"	v	class:RecTabStops_InNewlineInTabstopNotAtBeginOfLine_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = ($/;"	v	class:RecTabStops_ChildTriggerContainsParentTextObjects
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = r"\\vec{\\frac{a}\\frac{aa}cc{two}{b}}hello \\frac{one}world{two}"$/;"	v	class:RecTabsStops_TypeInZero_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = r"_hello _world _end"$/;"	v	class:RecTabsStops_TypeInZero2_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = r"oneoneexplicit zerotwotwo"$/;"	v	class:RecTabsStops_BackspaceZero_ECR
wanted	plugged/ultisnips/test/test_Selection.py	/^    wanted = """for ($k = 0; $k < count; $k++) {$/;"	v	class:ExclusiveSelection_RealWorldCase_Test
wanted	plugged/ultisnips/test/test_Selection.py	/^    wanted = """for ($k = 0; $k < count; $k++) {$/;"	v	class:OldSelection_RealWorldCase_Test
wanted	plugged/ultisnips/test/test_Selection.py	/^    wanted = "Hello"$/;"	v	class:SelectModeMappings_BufferLocalMappings_ECR
wanted	plugged/ultisnips/test/test_Selection.py	/^    wanted = "Hello"$/;"	v	class:SelectModeMappings_IgnoreMappings_ECR
wanted	plugged/ultisnips/test/test_Selection.py	/^    wanted = "Hello"$/;"	v	class:SelectModeMappings_RemoveBeforeSelecting_ECR
wanted	plugged/ultisnips/test/test_Selection.py	/^    wanted = "Hello"$/;"	v	class:_SelectModeMappings
wanted	plugged/ultisnips/test/test_Selection.py	/^    wanted = "huiw ui"$/;"	v	class:ExclusiveSelection_SimpleTabstop_Test
wanted	plugged/ultisnips/test/test_Selection.py	/^    wanted = "huiw ui"$/;"	v	class:OldSelection_SimpleTabstop_Test
wanted	plugged/ultisnips/test/test_Selection.py	/^    wanted = "xello"$/;"	v	class:SelectModeMappings_DisableRemoveBeforeSelecting_ECR
wanted	plugged/ultisnips/test/test_Selection.py	/^    wanted = "xello"$/;"	v	class:SelectModeMappings_IgnoreMappings1_ECR
wanted	plugged/ultisnips/test/test_Selection.py	/^    wanted = "xello"$/;"	v	class:SelectModeMappings_IgnoreMappings2_ECR
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = """<option value="some">not<\/option>ende"""$/;"	v	class:snipMate_TestMirrorsInPlaceholders_Overwrite
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = """<option value="some">some<\/option>ende"""$/;"	v	class:snipMate_TestMirrorsInPlaceholders
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = """\/*$/;"	v	class:snipMate_Issue658
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "This is a stand alone snippet\\nThis is two stand alone snippet\\nThree"$/;"	v	class:snipMate_SimpleSnippetInSnippetFile
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "This is a test snippet"$/;"	v	class:snipMate_SimpleSnippetSubDirectory
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "This is a test snippet\\n# With a comment"$/;"	v	class:snipMate_SimpleSnippet
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "blah"$/;"	v	class:snipMate_Extends
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "blub is blah"$/;"	v	class:snipMate_TestNoBraceTabstops
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "blub is blub, blah is blah"$/;"	v	class:snipMate_TestNoBraceTabstopsAndMirrors
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "blub\\n\\nblah\\n"$/;"	v	class:snipMate_EmptyLinesContinueSnippets
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "for (j; j < blub; blub++) {\\n\\thi\\n}"$/;"	v	class:snipMate_TestMirrors
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "h$${2:blub}$$hi"$/;"	v	class:snipMate_NoNestedTabstops
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "hblablubb"$/;"	v	class:snipMate_Visual_Simple
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "hello" + EX + "\\nworked"$/;"	v	class:snipMate_OtherFiletype
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "hello" + EX$/;"	v	class:snipMate_Disabled
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "lac03lu"$/;"	v	class:snipMate_Interpolation
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "laöäülu"$/;"	v	class:snipMate_InterpolationWithSystem
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "os.\\tfoo\\nself."$/;"	v	class:snipMate_Issue1344
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "two"$/;"	v	class:snipMate_MultiMatches
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "ultisnips"$/;"	v	class:snipMate_OverwrittenByRegExpTrigger
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = r"$\\frac{num}{denom} blub"$/;"	v	class:snipMate_Issue1325
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = """$/;"	v	class:SnippetActions_CanModifyParentBody
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = """$/;"	v	class:SnippetActions_EnsureIndent
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = """$/;"	v	class:SnippetActions_MoveVisual
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = """$/;"	v	class:SnippetActions_PostActionCanUseSnippetRange
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = """1 {$/;"	v	class:SnippetActions_UseCorrectJumpActions
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = """1, 2"""$/;"	v	class:SnippetActions_CanVisuallySelectFirstPlaceholderInAnonSnippetInPre
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = """debug(test(some(complex(cond(a)))))$/;"	v	class:SnippetActions_CanMirrorTabStopsOutsideOfSnippet
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = """if not blah: pass"""$/;"	v	class:SnippetActions_CanExpandSnippetInDifferentPlace
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = """if some_check(1, 2, 3) or 4: 5"""$/;"	v	class:SnippetActions_CanExpandAnonSnippetOnFirstJump
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = """if x:$/;"	v	class:SnippetActions_CanExpandAnonSnippetInJumpAction
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = """if x:$/;"	v	class:SnippetActions_CanExpandAnonSnippetInJumpActionWhileSelected
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = """import smthing$/;"	v	class:SnippetActions_MoveParentSnippetFromChildInPreAction
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = """some context$/;"	v	class:SnippetActions_CanUseContextFromContextMatch
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = """some_wrapper(wrapme(2, 1)3): 4"""$/;"	v	class:SnippetActions_CanEvenWrapSnippetInPreAction
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = """totally_different(2, 1)3"""$/;"	v	class:SnippetActions_CanExpandAnonOnPreExpand
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = "1: 1\\n2"$/;"	v	class:SnippetActions_PostActionModifiesLineAfterSnippet
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = "[(1)2"$/;"	v	class:SnippetActions_PostActionModifiesCharAfterSnippet
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = "\\nabc"$/;"	v	class:SnippetActions_PreActionModifiesBuffer
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = "abc\\n"$/;"	v	class:SnippetActions_PostActionModifiesBuffer
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = "def123"$/;"	v	class:SnippetActions_DoNotBreakCursorOnSingleLikeChange
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "   Expand me!"$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand2
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "   Expand me!"$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_Expand2
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "  Expand me!"$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "  Expand me!"$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "  \\t\\tExpand\\tme!\\t"$/;"	v	class:No_Tab_Expand_ET_Leading_Spaces
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "  \\t\\tExpand\\tme!\\t"$/;"	v	class:No_Tab_Expand_Leading_Spaces
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = " .a" + EX$/;"	v	class:SnippetOptions_Regex_Self_TextAfter
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = " self."$/;"	v	class:SnippetOptions_Regex_Self_Space
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = """\\t\\thi$/;"	v	class:No_Tab_Expand_RealWorld
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "$Expand me!"$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "-Expand me!"$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand2
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:MultiWordSnippet_Simple
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:MultiWord_SnippetOptions_ExpandInwordSnippets_ExpandSingle
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:MultiWord_SnippetOptions_ExpandWordSnippets_NormalExpand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:SnippetOptions_ExpandInwordSnippets_ExpandSingle
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:SnippetOptions_ExpandWordSnippets_NormalExpand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_Expand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:SnippetOptions_Regex_Expand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:SnippetOptions_Regex_Multiple
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:SnippetOptions_Regex_SameLine_Long_End
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:SnippetOptions_Regex_SameLine_Long_Start
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:SnippetOptions_Regex_WithSpace
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "[[Expand me!"$/;"	v	class:SnippetOptions_ExpandWordSnippets_ExpandSuffix3
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "\\t\\tExpand\\tme!\\t"$/;"	v	class:No_Tab_Expand_ET
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "\\t\\tExpand\\tme!\\t"$/;"	v	class:No_Tab_Expand_ET_SW
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "\\t\\tExpand\\tme!\\t"$/;"	v	class:No_Tab_Expand_ET_SW_TS
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "\\t\\tExpand\\tme!\\t"$/;"	v	class:No_Tab_Expand_No_TS
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "\\t\\tExpand\\tme!\\t"$/;"	v	class:No_Tab_Expand_Simple
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "\\t\\t\\tExpand\\tme!\\t"$/;"	v	class:No_Tab_Expand_Leading_Tabs
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "a not at beginning"$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "a not at beginning"$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "a test it" + EX$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_DontExpand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "a test" + EX$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_DontExpand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "a(Expand me!"$/;"	v	class:SnippetOptions_ExpandWordSnippets_ExpandSuffix2
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "a-Expand me!"$/;"	v	class:MultiWord_SnippetOptions_ExpandWordSnippets_ExpandSuffix
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "a-Expand me!"$/;"	v	class:SnippetOptions_ExpandWordSnippets_ExpandSuffix
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "a." + EX$/;"	v	class:SnippetOptions_Regex_Self_TextBefore
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "aExpand me!"$/;"	v	class:MultiWord_SnippetOptions_ExpandInwordSnippets_SimpleExpand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "aExpand me!"$/;"	v	class:SnippetOptions_ExpandInwordSnippets_SimpleExpand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "abc test Expand me!"$/;"	v	class:SnippetOptions_Regex_SameLine_Simple
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "atest it" + EX$/;"	v	class:MultiWord_SnippetOptions_ExpandWordSnippets_NoExpand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "atest" + EX$/;"	v	class:SnippetOptions_ExpandWordSnippets_NoExpand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "self."$/;"	v	class:SnippetOptions_Regex_Self_Start
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "test No match"$/;"	v	class:SnippetOptions_Regex_PythonBlockNoMatch
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "test fedcab"$/;"	v	class:SnippetOptions_Regex_PythonBlockMatch
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "ßßExpand me!"$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "Hallo"$/;"	v	class:SnippetPriorities_DoNotCareAboutNonMatchings
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "Should only expand in p.\\ntest" + EX$/;"	v	class:SnippetPriorities_ClearedByChild
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "This is a test snippet"$/;"	v	class:SnippetPriorities_FileHasHigherThanAdded
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "This is a test snippet"$/;"	v	class:SnippetPriorities_FileHasHigherThanAdded_neg_prio
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "We overwrite"$/;"	v	class:SnippetPriorities_AddedHasHigherThanFile
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "We overwrite"$/;"	v	class:SnippetPriorities_MultiWordTriggerOverwriteExisting
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "We overwrite"$/;"	v	class:SnippetPriorities_OverwriteExisting
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "We overwrite\\nNo overwrite"$/;"	v	class:SnippetPriorities_OverwriteThenChoose_ECR
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "again"$/;"	v	class:SnippetPriorities_OverwriteTwice_ECR
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "test" + EX$/;"	v	class:SnippetPriorities_ClearedByParent
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "test" + EX$/;"	v	class:SnippetPriorities_SimpleClear
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "test" + EX$/;"	v	class:SnippetPriorities_SimpleClear2
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = """<div allaway>\\n  Third Last\\n<\/div>"""$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBackTwice
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = """<div blah>\\n  Hallo\\n<\/div>"""$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteFirst_NoJumpBack
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = """<div id="no">\\n  End\\n<\/div>"""$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteSecond
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = """<div id="some_id">\\n  \\n<\/div>"""$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteNone_ECR
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = """<div id="yes">\\n  Begin Hi\\n<\/div>"""$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBack
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = """<div>\\n  Hallo\\n<\/div>"""$/;"	v	class:TabStop_TSInDefaultTextRLExample_DeleteFirst
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = """<divSomethingElse>\\n  Nupl  Nox\\n<\/div>"""$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteFirstJumpBack
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = """halongertextblEnd"""$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward1
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = """haoverwriteblEnd"""$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward0
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = """haupsblEnd"""$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecond
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = """hoverwritelEnd"""$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackOverwrite
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = """hupslEnd"""$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteFirst
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "${1:literal}"$/;"	v	class:TabStop_EscapingCharsDollars_BeginningOfDefinitionText
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "'Hallo': 'Hallo' Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteFirstSwitchNumbers
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "'Hallo': 'Hallo' Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond1
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = ":latex:`Hello`World"$/;"	v	class:TabStopSimpleReplaceZeroLengthTabstops_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "Hallo haselnhipsut upsend"$/;"	v	class:TabStopNavigatingInInsertModeSimple_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "Hallo: Hallo "$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_Overwrite1
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "Test: blub\\nTrailing texthello"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthZerothTabstop_Override
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "Test: snippet start\\nNested tabstop: hello\\nsnippet end\\nTrailing text"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthZerothTabstop
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "This \\\\ is a backslash!"$/;"	v	class:TabStop_EscapingChars_Backslash
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "[ HelloWorld ] Hello"$/;"	v	class:TabStop_AdjacentTabStopAddText_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "\\n${1:literal}"$/;"	v	class:TabStop_EscapingCharsDollars_BeginningOfLine
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "a${1:literal}"$/;"	v	class:TabStop_EscapingCharsDollars1
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "each_byte { |byte| Blah }"$/;"	v	class:TabStopTestJumpingRLExampleWithZeroTab_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "echo Hallo"$/;"	v	class:TabStopNoReplace_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hallo Blah Lets replace it again" + JB * 2 + JF$/;"	v	class:TabStopTestBackwardJumping2_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hallo Blah mitteLets replace it again" + JB * 2 + JF$/;"	v	class:TabStopTestBackwardJumping_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hallo Du Nase na"$/;"	v	class:TabStopSimpleReplace_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hallo Hi" + 2 * JF + "du Test"$/;"	v	class:TabStopTestJumpingDontJumpToEndIfThereIsTabZero_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hallo Nase a small feed"$/;"	v	class:TabStopSimpleReplaceSurrounded1_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hallo Nase a small feed"$/;"	v	class:TabStopSimpleReplaceSurrounded_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hallo Test Hi"$/;"	v	class:TabStopTestJumping2_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hallo Test mitte BeginningHi"$/;"	v	class:TabStopTestJumping_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hallo na Du Nase"$/;"	v	class:TabStopSimpleReplaceReversed_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hi  Nothing  Nothing world"$/;"	v	class:TabStop_Multiline_DelFirstOverwriteSecond_Overwrite
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hi Blah Ende"$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpAround
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hi Hallo "$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_Overwrite0
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hi Nothing Nothing world"$/;"	v	class:TabStop_Multiline_MirrorInFront_Overwrite
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hi Nothing world"$/;"	v	class:TabStop_Multiline_Overwrite
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hi first line\\nsecond line first line\\nsecond line world"$/;"	v	class:TabStop_Multiline_MirrorInFront_Leave
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hi first line\\nsecond line world"$/;"	v	class:TabStop_Multiline_Leave
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hi this Hallo Ende"$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpBackToOther
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hi this Hallo Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hi this second Hallo Ende"$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpToThird
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hi this second second"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_DoNothing
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hisnip "$/;"	v	class:TabStopEscapingWhenSelectedNoCharTS_ECR
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hisnip default"$/;"	v	class:TabStopEscapingWhenSelected_ECR
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hisnip i"$/;"	v	class:TabStopEscapingWhenSelectedSingleCharTS_ECR
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "ia(1, 2) after: 3"$/;"	v	class:TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippet
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "ia(1, 2) after: 3"$/;"	v	class:TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippetRE
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "nothing ship hups"$/;"	v	class:TabStopWithOneChar_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "snip $0 $hi end"$/;"	v	class:TabStop_EscapingCharsDollars
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "snip ` literal"$/;"	v	class:TabStop_EscapingCharsBackticks
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "test run"$/;"	v	class:TabStop_Exit_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "tt\\nt{\\n\\tt\\n}"$/;"	v	class:TabStop_CROnlyOnSelectedNear
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "usage: `basename $0` [ -u -v -d ]"$/;"	v	class:TabStop_EscapingChars_RealLife
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "world = require('WORLD')End"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond_RLExample
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "world = require(WORLD)End"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteFirst_RLExample
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = ($/;"	v	class:TabStopTestMultilineExpand_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = r"These are two backslashes \\\\ done"$/;"	v	class:TabStop_EscapingChars_Backslash3
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = r"This is a backslash \\ done"$/;"	v	class:TabStop_EscapingChars_Backslash2
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = r"\\hello{world}"$/;"	v	class:TabStop_EscapingChars_Backslash4
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "* test\\n* test\\n* test"$/;"	v	class:Transformation_OptionMultiline_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "HALLO hallo"$/;"	v	class:Transformation_CleverTransformLongLower_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "Hallo hallo"$/;"	v	class:Transformation_CleverTransformLowercaseChar_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "SomE tExt SOME TEXT \\nsome text "$/;"	v	class:Transformation_MultipleTransformations_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "TEST blah"$/;"	v	class:Transformation_OptionIgnoreCase_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "a b  c d e f ghhh h oha a b  c d e f ghhh h..."$/;"	v	class:Transformation_ConditionalInsertRWEllipsis_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "a some more text began with an a"$/;"	v	class:Transformation_ConditionalInsertionSimple_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "a some yes"$/;"	v	class:Transformation_CIBothDefinedPositive_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "a, nice,   building a, nice, building"$/;"	v	class:Transformation_OptionReplaceGlobalMatchInReplace_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "a, nice, building a-nice-building"$/;"	v	class:Transformation_OptionReplaceGlobal_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "aa yes:no)"$/;"	v	class:Transformation_ConditionalWithEscapedDelimiter
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "aa yes\\\\"$/;"	v	class:Transformation_ConditionalWithBackslashBeforeDelimiter
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "ab no\\\\"$/;"	v	class:Transformation_ConditionalWithBackslashBeforeDelimiter1
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "b some no"$/;"	v	class:Transformation_CIBothDefinedNegative_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "dead parrot this parrot is a bit dead"$/;"	v	class:Transformation_BackreferenceTwice_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "foo boo aoo foo bull aoo"$/;"	v	class:Transformation_Backreference_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo "$/;"	v	class:Transformation_TabIsAtEndAndDeleted_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo "$/;"	v	class:Transformation_TabIsAtEndNoTextLeave_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo .\\nhallo- >\\nhallo-> "$/;"	v	class:Transformation_ConditionalInConditional_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo HALLO"$/;"	v	class:Transformation_CleverTransformLongUpper_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo Hallo"$/;"	v	class:Transformation_CleverTransformUpercaseChar_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo batzl hallo foo"$/;"	v	class:Transformation_SimpleCaseTransformInFrontDefVal_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo batzl hallo foo"$/;"	v	class:Transformation_SimpleCaseTransformInFront_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo foo boy hallo batzl boy"$/;"	v	class:Transformation_SimpleCase_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo hallo"$/;"	v	class:Transformation_SimpleCaseNoTransform_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo is somethingb"$/;"	v	class:Transformation_TabIsAtEndNoTextType_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo is somethingmore"$/;"	v	class:Transformation_TabIsAtEndAndDeleted1_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo noAUCH ahiuchauch_end"$/;"	v	class:Transformation_TestKill_InsertBeginning_Kill
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo noAUCH auchauchih_end"$/;"	v	class:Transformation_TestKill_InsertEnd_Kill
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo noAUCH hinoauchnoauch_end"$/;"	v	class:Transformation_TestKill_InsertBefore_NoKill
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo noAUCH noauchnoauchab_end"$/;"	v	class:Transformation_TestKill_InsertAfter_NoKill
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "snip  "$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValue_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "snip  m2  hi"$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueInFirstTab_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "snip m1  hi "$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueInSecondTab_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "snip matched hallo"$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueTypeSomethingThen_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "sometext defined sometext"$/;"	v	class:Transformation_InsideTabLeaveAtDefault_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "sometext overwrite"$/;"	v	class:Transformation_InsideTabOvertype_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "test, hallo test\\nhallo"$/;"	v	class:Transformation_CINewlines_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "test, hallo test\\thallo"$/;"	v	class:Transformation_CITabstop_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "test, halul test, ha(ul)"$/;"	v	class:Transformation_CIEscapedParensinReplace_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "éèàçôïÉÈÀÇÔÏ€ eeacoiEEACOIEUR"$/;"	v	class:Transformation_SimpleCaseAsciiResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "éèàçôïÉÈÀÇÔÏ€ eeacoieeacoieur"$/;"	v	class:Transformation_LowerCaseAsciiResult
wanted	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    wanted = """my snipped hi1$/;"	v	class:TestLangmapWithUtf8_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    wanted = """my snipped hi1$/;"	v	class:TestNonEmptyLangmap_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    wanted = """my snipped hi;$/;"	v	class:TestNonEmptyLangmapWithSemi_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    wanted = "abc simple expand"$/;"	v	class:AddFunc_Simple
wanted	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    wanted = "blumba" + EX + "\\n" + "this is a dynamic snippet" + "\\n" + "blumba" + EX$/;"	v	class:AddNewSnippetSource
wanted	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    wanted = "simple expand"$/;"	v	class:AddFunc_Opt
wanted	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    wanted = "te'123êabc"$/;"	v	class:VerifyVimDict3
wanted	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    wanted = "test41123'êabc0"$/;"	v	class:VerifyVimDict1
wanted	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    wanted = 'te"123êabc'$/;"	v	class:VerifyVimDict2
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "\\tbhlablbub"$/;"	v	class:Visual_SelectOneWord_ProblemAfterTab
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "beg\\n\\t    hello\\n\\t    nice\\n\\t\\tworld\\nend"$/;"	v	class:Visual_LineSelect_CheckIndentTwice
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "beg\\n\\thello\\n\\tnice\\n\\tworld\\n\\tsuper\\nenddone"$/;"	v	class:Visual_LineSelect_WithTabStop
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "beg\\n\\thello\\n\\tnice\\n\\tworld\\nend"$/;"	v	class:Visual_LineSelect_CheckIndentSimple
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "beg\\n\\thello\\n\\tnice\\n\\tworld\\nend"$/;"	v	class:Visual_LineSelect_CheckIndentWithTS_NoOverwrite
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "bhlablubb"$/;"	v	class:Visual_SelectOneWord_Inword
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "bla hblub\\n  hellobi"$/;"	v	class:Visual_CrossOneLine
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hBLABLUBb"$/;"	v	class:VisualTransformationWithDefault_ExpandWithVisual
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hBLABLUBb"$/;"	v	class:VisualTransformation_SelectOneWord
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hHELLO\\n NICE\\n WORLDb"$/;"	v	class:VisualTransformation_LineSelect_Simple
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hWORLDbhi"$/;"	v	class:VisualTransformationWithDefault_ExpandWithoutVisual
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "h\/\/ bodybhi"$/;"	v	class:VisualWithDefaultWithSlashes_ExpandWithoutVisual
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hbabc"$/;"	v	class:Visual_NoVisualSelection_Ignore
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hbefHELLO\\n    NICE\\n    WORLDaftbhi"$/;"	v	class:VisualTransformation_InDefaultText_LineSelect_NoOverwrite
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hbefhello\\n    nice\\n    worldaftbhi"$/;"	v	class:Visual_InDefaultText_LineSelect_NoOverwrite
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hbeforeaaahello\\n\\t  nice\\n\\t  worldaftbhi"$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite1
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hbeforeahello\\n\\tnice\\n\\tworldaftbhi"$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hblablub\\nb"$/;"	v	class:Visual_SelectOneWord_TillEndOfLine
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hblablubb"$/;"	v	class:VisualWithDefault_ExpandWithVisual
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hblablubb"$/;"	v	class:Visual_SelectOneWord
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hblablubb\\nhb"$/;"	v	class:Visual_ExpandTwice
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hblablubbblabluba"$/;"	v	class:Visual_SelectOneWord_TwiceVisual
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hblablubbhello"$/;"	v	class:Visual_InDefaultText_SelectOneWord_NoOverwrite
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hello\\n\\t hello\\n\\t nice\\n\\t world\\nendhi"$/;"	v	class:Visual_InDefaultText_IndentBeforeTabstop_NoOverwrite
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hhello\\n nice\\n worldb"$/;"	v	class:Visual_LineSelect_Simple
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hhellob"$/;"	v	class:Visual_InDefaultText_SelectOneWord
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hjupbhi"$/;"	v	class:VisualTransformation_InDefaultText_LineSelect_Overwrite
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hjupbhi"$/;"	v	class:Visual_InDefaultText_LineSelect_Overwrite
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hnblablub\\nmmmbdone"$/;"	v	class:Visual_SelectOneWordWithTabstop_TillEndOfLine
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hupsbhi"$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_Overwrite
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hworldbhi"$/;"	v	class:VisualWithDefault_ExpandWithoutVisual
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "if {\\n\\tif {\\n\\t\\tone\\n\\t\\ttwo\\n\\t}\\n\\tthree\\n}"$/;"	v	class:Visual_LineSelect_DedentLine
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "xxxhyyybyxxx"$/;"	v	class:Visual_SelectOneWordExclusive
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "xxxhyyyybxxx"$/;"	v	class:Visual_SelectOneWordInclusive
wanted	plugged/ultisnips/test/vim_test_case.py	/^    wanted = ""$/;"	v	class:VimTestCase
warn_return_any	plugged/ultisnips/mypy.ini	/^warn_return_any = True$/;"	k	section:mypy
warn_unused_configs	plugged/ultisnips/mypy.ini	/^warn_unused_configs = True$/;"	k	section:mypy
webdevicons	plugged/vim-devicons/pythonx/vim_devicons/powerline/segments.py	/^def webdevicons(pl, segment_info):$/;"	f
webdevicons#hardRefresh	plugged/vim-devicons/plugin/webdevicons.vim	/^function! webdevicons#hardRefresh()$/;"	f
webdevicons#pluginHome	plugged/vim-devicons/plugin/webdevicons.vim	/^function! webdevicons#pluginHome()$/;"	f
webdevicons#refresh	plugged/vim-devicons/plugin/webdevicons.vim	/^function! webdevicons#refresh()$/;"	f
webdevicons#softRefresh	plugged/vim-devicons/plugin/webdevicons.vim	/^function! webdevicons#softRefresh()$/;"	f
webdevicons#version	plugged/vim-devicons/plugin/webdevicons.vim	/^function! webdevicons#version()$/;"	f
webdevicons_conceal_nerdtree_brackets	plugged/vim-devicons/plugin/webdevicons.vim	/^    augroup webdevicons_conceal_nerdtree_brackets$/;"	a
webdevicons_cursor_hold	plugged/vim-devicons/plugin/webdevicons.vim	/^    augroup webdevicons_cursor_hold$/;"	a
webdevicons_file_format	plugged/vim-devicons/pythonx/vim_devicons/powerline/segments.py	/^def webdevicons_file_format(pl, segment_info):$/;"	f
webdevicons_flagship_filesymbol	plugged/vim-devicons/autoload/devicons/plugins/flagship.vim	/^    augroup webdevicons_flagship_filesymbol$/;"	a
webdevicons_flagship_filetype	plugged/vim-devicons/autoload/devicons/plugins/flagship.vim	/^    augroup webdevicons_flagship_filetype$/;"	a
whole_file	plugged/nvim-treesitter/tests/indent/common.lua	/^function Runner:whole_file(dirs)$/;"	f	unknown:Runner
word_under_cursor	plugged/LuaSnip/lua/luasnip/util/util.lua	/^local function word_under_cursor(cur, line)$/;"	f
works	plugged/LuaSnip/tests/fmt_spec.lua	/^local works = function(msg, fmt, args, expected, opts)$/;"	f
workspace_did_change_configuration	plugged/nvim-lspconfig/lua/lspconfig/configs.lua	/^        function client.workspace_did_change_configuration(settings)$/;"	f	unknown:client
wrap	plugged/ultisnips/pythonx/UltiSnips/err_to_scratch_buffer.py	/^def wrap(func):$/;"	f
wrap_nodes	plugged/LuaSnip/lua/luasnip/util/util.lua	/^local function wrap_nodes(nodes)$/;"	f
wrap_value	plugged/LuaSnip/lua/luasnip/util/util.lua	/^local function wrap_value(value)$/;"	f
wrapper	plugged/ultisnips/pythonx/UltiSnips/err_to_scratch_buffer.py	/^    def wrapper(self, *args, **kwds):$/;"	f	function:wrap	file:
write_lockfile	plugged/nvim-treesitter/lua/nvim-treesitter/install.lua	/^function M.write_lockfile(verbose, skip_langs)$/;"	f	unknown:M
write_temp	plugged/ultisnips/test/vim_interface.py	/^    def write_temp(self, file_path, content):$/;"	m	class:TempFileManager
x	plugged/nvim-treesitter/tests/indent/c/array.c	/^int x[] = {$/;"	v	typeref:typename:int[]
x	plugged/nvim-treesitter/tests/indent/c/compound_lit.c	/^    int x, y;$/;"	m	struct:foo	typeref:typename:int	file:
x	plugged/nvim-treesitter/tests/indent/c/struct.c	/^        int x;$/;"	m	struct:foo::bar	typeref:typename:int	file:
x	plugged/nvim-treesitter/tests/indent/c/struct.c	/^    int x;$/;"	m	union:baz	typeref:typename:int	file:
x	plugged/nvim-treesitter/tests/indent/cpp/access.cpp	/^    int x;$/;"	m	class:Foo	typeref:typename:int	file:
x	plugged/nvim-treesitter/tests/indent/cpp/class.cpp	/^    int x;$/;"	m	class:Foo	typeref:typename:int	file:
x	plugged/nvim-treesitter/tests/indent/python/control_flow.py	/^    x = 1$/;"	v
x	plugged/nvim-treesitter/tests/indent/python/control_flow.py	/^    x = 2$/;"	v
x	plugged/nvim-treesitter/tests/indent/rust/struct.rs	/^    x: u32,$/;"	m	struct:Foo
y	init.vim	/^vmap y :'<,'>call QuickCopy()<CR><CR>$/;"	m
y	plugged/nvim-treesitter/tests/indent/c/array.c	/^int y[][2] = {$/;"	v	typeref:typename:int[][2]
y	plugged/nvim-treesitter/tests/indent/c/compound_lit.c	/^    int x, y;$/;"	m	struct:foo	typeref:typename:int	file:
y	plugged/nvim-treesitter/tests/indent/cpp/access.cpp	/^    int y;$/;"	m	class:Foo	typeref:typename:int	file:
y	plugged/nvim-treesitter/tests/indent/cpp/class.cpp	/^        int y;$/;"	m	class:Foo::Bar	typeref:typename:int	file:
y	plugged/nvim-treesitter/tests/indent/rust/struct.rs	/^    y: u32,$/;"	m	struct:Foo
yaml	plugged/nvim-treesitter/lockfile.json	/^  "yaml": {$/;"	o
yamlls	plugged/nvim-lspconfig/CONFIG.md	/^## yamlls$/;"	s	chapter:Configurations
yang	plugged/nvim-treesitter/lockfile.json	/^  "yang": {$/;"	o
z	plugged/nvim-treesitter/tests/indent/cpp/class.cpp	/^    Bar z;$/;"	m	class:Foo	typeref:typename:Bar	file:
zeta_note	plugged/nvim-lspconfig/CONFIG.md	/^## zeta_note$/;"	s	chapter:Configurations
zig	plugged/nvim-treesitter/lockfile.json	/^  "zig": {$/;"	o
zk	plugged/nvim-lspconfig/CONFIG.md	/^## zk$/;"	s	chapter:Configurations
zls	plugged/nvim-lspconfig/CONFIG.md	/^## zls$/;"	s	chapter:Configurations
